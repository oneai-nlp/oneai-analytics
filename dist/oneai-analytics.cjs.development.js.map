{"version":3,"file":"oneai-analytics.cjs.development.js","sources":["../src/common/utils/utils.ts","../src/common/utils/countersUtils.ts","../src/common/configurations/calculationsConfigurations.ts","../src/common/configurations/commonConfigurations.ts","../src/common/utils/modalsUtils.ts","../src/common/components/CountersLabels/LabelDisplay.tsx","../src/common/components/CountersLabels/LabelsFiltersSelect.tsx","../src/common/components/CountersLabels/SingleSelect.tsx","../src/common/utils/displayUtils.ts","../src/common/components/CountersLabels/CounterDisplay.tsx","../src/common/components/CountersLabels/MaxLabelDisplay.tsx","../src/common/components/CountersLabelsDisplay.tsx","../src/common/components/CountersLabels/DropdownOption.tsx","../src/common/components/CountersLabels/KeyValueSingleSelect.tsx","../src/common/components/CustomizeTab/Counters.tsx","../src/common/components/CustomizeTab/Labels.tsx","../src/common/components/CustomizeTab.tsx","../src/common/components/CustomizeTab/Datepicker.tsx","../src/common/components/DatesFilters.tsx","../src/common/components/ItemActions.tsx","../src/common/configurations/countersConfigurations.tsx","../src/common/components/CountersLabels/ColorsAxis.tsx","../src/components/BarChart.tsx","../src/components/ItemsListDisplay.tsx","../src/components/Treemap.tsx","../src/components/OneAiAnalytics.tsx","../src/wrappers/OneAIAnalyticsApiWrapper.tsx","../src/wrappers/OneAIAnalyticsStaticDataWrapper.tsx","../src/common/components/UploadCSVComponents/constants.ts","../src/common/components/UploadCSVComponents/SingleSelect.tsx","../src/components/OneAiUpload.tsx"],"sourcesContent":["export function calculateFontSize(height: number, width: number) {\r\n  const area = height * width;\r\n  let fontSize = 10 + (32 * area) / (250000 - 15000);\r\n  fontSize = Math.max(fontSize, 10);\r\n  fontSize = Math.min(fontSize, 60);\r\n  return fontSize;\r\n}\r\n\r\nexport function groupBy<T, K extends keyof any>(\r\n  arr: T[],\r\n  key: (i: T) => K\r\n): Map<K, T[]> {\r\n  const map: Map<K, T[]> = new Map();\r\n  arr.forEach((item) => {\r\n    const currentKey = key(item);\r\n    const savedCluster = map.get(currentKey) || [];\r\n    savedCluster.push(item);\r\n    map.set(currentKey, savedCluster);\r\n  });\r\n\r\n  return map;\r\n}\r\n\r\nexport function chunks<T>(arr: T[], size: number): Array<T[]> {\r\n  return Array.from(new Array(Math.ceil(arr.length / size)), (_, i) =>\r\n    arr.slice(i * size, i * size + size)\r\n  );\r\n}\r\n\r\nexport function getSecondsDiff(startDate: Date, endDate: Date) {\r\n  const diff = endDate.getTime() - startDate.getTime();\r\n\r\n  return Math.abs(diff / 1000);\r\n}\r\n\r\nexport function sum(numbers: number[]): number {\r\n  return numbers.reduce((partialSum, a) => partialSum + a, 0);\r\n}\r\n\r\nexport function uniqBy<T, K>(arr: T[], getKey: (item: T) => K) {\r\n  let seen = new Set<K>();\r\n  return arr.filter((item) => {\r\n    let k = getKey(item);\r\n    return seen.has(k) ? false : seen.add(k);\r\n  });\r\n}\r\n\r\nexport function toLowerKeys(obj: { [key: string]: {} }) {\r\n  return Object.keys(obj).reduce((accumulator, key) => {\r\n    accumulator[key.toLowerCase()] = obj[key];\r\n    return accumulator;\r\n  }, {} as { [key: string]: {} });\r\n}\r\n\r\nexport function percentageIncrease(previous: number, current: number): number {\r\n  let percent;\r\n  if (current !== 0) {\r\n    if (previous !== 0) {\r\n      percent = ((current - previous) / previous) * 100;\r\n    } else {\r\n      percent = current * 100;\r\n    }\r\n  } else {\r\n    percent = -previous * 100;\r\n  }\r\n\r\n  return Math.floor(percent);\r\n}\r\n\r\nexport const numberToFixed = (num: number) =>\r\n  Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport const customNumberToFixed = (num: number): number => {\r\n  const str = Math.abs(num).toString();\r\n  const [integer, _] = str.split('.');\r\n  if (integer.length < 3) {\r\n    return numberToFixed(parseFloat(num.toFixed(2)));\r\n  } else if (integer.length < 4) {\r\n    return numberToFixed(parseFloat(num.toFixed(1)));\r\n  } else {\r\n    return parseFloat(num.toFixed(0));\r\n  }\r\n};\r\n\r\nexport function getNumberDescription(numIn: number, decPlaces: number): string {\r\n  const num = customNumberToFixed(numIn);\r\n  const prefix = num < 0 ? '-' : '';\r\n  // 2 decimal places => 100, 3 => 1000, etc\r\n  decPlaces = Math.pow(10, decPlaces);\r\n\r\n  // Enumerate num abbreviations\r\n  let abbrev = ['k', 'm', 'b', 't'];\r\n\r\n  let strResult: string = num.toString();\r\n  let result: number = Math.abs(num);\r\n\r\n  // Go through the array backwards, so we do the largest first\r\n  for (let i = abbrev.length - 1; i >= 0; i--) {\r\n    // Convert array index to \"1000\", \"1000000\", etc\r\n    let size = Math.pow(10, (i + 1) * 3);\r\n\r\n    // If the num is bigger or equal do the abbreviation\r\n    if (size <= result) {\r\n      // Here, we multiply by decPlaces, round, and then divide by decPlaces.\r\n      // This gives us nice rounding to a particular decimal place.\r\n      result = Math.round((result * decPlaces) / size) / decPlaces;\r\n\r\n      // Handle special case where we round up to the next abbreviation\r\n      if (result == 1000 && i < abbrev.length - 1) {\r\n        result = 1;\r\n        i++;\r\n      }\r\n\r\n      // Add the letter for the abbreviation\r\n      strResult = result.toString() + abbrev[i];\r\n\r\n      // We are done... stop\r\n      break;\r\n    }\r\n  }\r\n\r\n  return prefix + strResult;\r\n}\r\n\r\nexport const objectToLowerCase = <T>(obj: Record<string, T>) => {\r\n  const entries = Object.entries(obj);\r\n\r\n  return Object.fromEntries(\r\n    entries.map(([key, value]) => {\r\n      return [key.toLowerCase(), value];\r\n    })\r\n  );\r\n};\r\n\r\nexport const extractShtrudelSuffix = (str: string): string => {\r\n  const index = str.lastIndexOf('@');\r\n  return index >= 0 ? str.substring(0, index) : str;\r\n};\r\n","import { CUSTOM_METADATA_KEY } from '../configurations/commonConfigurations';\r\nimport {\r\n  CounterConfiguration,\r\n  CountersConfigurations,\r\n  GroupMembers,\r\n  MetadataKeyValue,\r\n} from '../types/customizeBarTypes';\r\nimport { MetaData, Trend } from '../types/modals';\r\nimport {\r\n  objectToLowerCase,\r\n  percentageIncrease,\r\n  sum,\r\n  toLowerKeys,\r\n} from './utils';\r\n\r\nexport function topGroupPercentCalculation(\r\n  metadataKeyValue: MetadataKeyValue | null,\r\n  metadata: MetaData,\r\n  _: Trend[],\r\n  countersConfigurations: CountersConfigurations,\r\n  __: number\r\n) {\r\n  const counter = getMetadataKeyValueConfiguration(\r\n    metadataKeyValue,\r\n    countersConfigurations\r\n  );\r\n  const groups = getCounterGroups(counter);\r\n  if (!counter || groups.length === 0) return { counter: counter, result: 0 };\r\n\r\n  const sums = groups.map((group) =>\r\n    calculateSumItemsInMetadata(group.members, [], metadata)\r\n  );\r\n  const max = Math.max(...sums);\r\n  const maxGroup = groups[sums.indexOf(max)];\r\n  const groupsSum = sum(sums);\r\n  return {\r\n    result: groupsSum === 0 ? 0 : (max / groupsSum) * 100,\r\n    counter: max > 0 ? maxGroup ?? counter : counter,\r\n    metadataKey: maxGroup.label,\r\n    value: undefined,\r\n  };\r\n}\r\n\r\nexport function groupsPercentsCalculation(\r\n  label: string,\r\n  metadata: MetaData,\r\n  _: Trend[],\r\n  countersConfigurations: CountersConfigurations,\r\n  __: number\r\n): {\r\n  result?: number;\r\n  counter?: CounterConfiguration;\r\n  metadataKey?: string;\r\n  value?: string;\r\n}[] {\r\n  const counter = getMetadataKeyValueConfiguration(\r\n    { key: label },\r\n    countersConfigurations\r\n  );\r\n  const groups = getCounterGroups(counter);\r\n  if (!counter || groups.length === 0) return [];\r\n\r\n  const sums = groups.map((group) => {\r\n    return {\r\n      group: group,\r\n      result: calculateSumItemsInMetadata(group.members, [], metadata),\r\n    };\r\n  });\r\n  const groupsSum = sum(sums.map((g) => g.result));\r\n  if (groupsSum === 0) return [];\r\n\r\n  return sums.map((groupSum) => {\r\n    return {\r\n      result: (groupSum.result / groupsSum) * 100,\r\n      counter: groupSum.group ?? counter,\r\n      metadataKey: groupSum.group.label,\r\n      value: undefined,\r\n    };\r\n  });\r\n}\r\n\r\nexport function topGroupCalculation(\r\n  metadataKeyValue: MetadataKeyValue | null,\r\n  metadata: MetaData,\r\n  _: Trend[],\r\n  countersConfigurations: CountersConfigurations,\r\n  __: number\r\n) {\r\n  const counter = getMetadataKeyValueConfiguration(\r\n    metadataKeyValue,\r\n    countersConfigurations\r\n  );\r\n  const groups = getCounterGroups(counter);\r\n  if (groups.length === 0)\r\n    return {\r\n      counter: counter,\r\n      result: 0,\r\n    };\r\n  const sums = groups.map((group) =>\r\n    calculateSumItemsInMetadata(group.members, [], metadata)\r\n  );\r\n  const max = Math.max(...sums);\r\n  const maxGroup = groups[sums.indexOf(max)];\r\n  return {\r\n    result: max,\r\n    counter: max > 0 ? maxGroup ?? counter : counter,\r\n    metadataKey: maxGroup.label,\r\n    value: undefined,\r\n  };\r\n}\r\n\r\nexport function topValuePercentCalculation(\r\n  metadataKeyValue: MetadataKeyValue | null,\r\n  metadata: MetaData,\r\n  _: Trend[],\r\n  countersConfigurations: CountersConfigurations,\r\n  __: number\r\n) {\r\n  const counter = getMetadataKeyValueConfiguration(\r\n    metadataKeyValue,\r\n    countersConfigurations\r\n  );\r\n  if (!counter) return { counter: counter, result: 0 };\r\n\r\n  const max = getMaxItemValue(counter.members, counter.items, metadata);\r\n  const sum = calculateSumItemsInMetadata(\r\n    counter.members,\r\n    counter.items,\r\n    metadata\r\n  );\r\n\r\n  return {\r\n    result: sum === 0 ? 0 : (max.count / sum) * 100,\r\n    counter:\r\n      getItemCounterConfiguration(\r\n        max.metadata,\r\n        max.value,\r\n        countersConfigurations\r\n      ) ?? counter,\r\n    metadataKey: max.metadata,\r\n    value: max.value,\r\n  };\r\n}\r\n\r\nexport function topValueCalculation(\r\n  metadataKeyValue: MetadataKeyValue | null,\r\n  metadata: MetaData,\r\n  _: Trend[],\r\n  countersConfigurations: CountersConfigurations,\r\n  __: number\r\n) {\r\n  const counter = getMetadataKeyValueConfiguration(\r\n    metadataKeyValue,\r\n    countersConfigurations\r\n  );\r\n  if (!counter) return { counter: counter, result: 0 };\r\n\r\n  const maxItem = getMaxItemValue(counter.members, counter.items, metadata);\r\n\r\n  return {\r\n    result: maxItem.count,\r\n    counter:\r\n      getItemCounterConfiguration(\r\n        maxItem.metadata,\r\n        maxItem.value,\r\n        countersConfigurations\r\n      ) ?? counter,\r\n    metadataKey: maxItem.metadata,\r\n    value: maxItem.value,\r\n  };\r\n}\r\n\r\nexport function totalSumCalculation(\r\n  metadataKeyValue: MetadataKeyValue | null,\r\n  metadata: MetaData,\r\n  _: Trend[],\r\n  countersConfigurations: CountersConfigurations,\r\n  __: number\r\n): {\r\n  counter: CounterConfiguration | null;\r\n  metadata?: string | undefined;\r\n  value?: string | undefined;\r\n  result: number;\r\n} {\r\n  const counter = getMetadataKeyValueConfiguration(\r\n    metadataKeyValue,\r\n    countersConfigurations\r\n  );\r\n  if (!counter) return { counter: counter, result: 0 };\r\n  return {\r\n    result: calculateSumItemsInMetadata(\r\n      counter.members,\r\n      counter.items,\r\n      metadata\r\n    ),\r\n    counter: counter,\r\n  };\r\n}\r\n\r\nexport function percentOfItemsCalculation(\r\n  metadataKeyValue: MetadataKeyValue | null,\r\n  metadata: MetaData,\r\n  _: Trend[],\r\n  countersConfigurations: CountersConfigurations,\r\n  __: number\r\n) {\r\n  if (!metadataKeyValue) return { counter: null, result: 0 };\r\n  const itemCounter = getMetadataKeyValueConfiguration(\r\n    metadataKeyValue,\r\n    countersConfigurations\r\n  );\r\n\r\n  const keyCounter = getMetadataKeyValueConfiguration(\r\n    { key: metadataKeyValue.key },\r\n    countersConfigurations\r\n  );\r\n\r\n  if (!itemCounter || !keyCounter) return { counter: null, result: 0 };\r\n\r\n  const itemCount = calculateSumItemsInMetadata(\r\n    itemCounter.members,\r\n    itemCounter.items,\r\n    metadata\r\n  );\r\n\r\n  const keyCount = calculateSumItemsInMetadata(\r\n    keyCounter.members,\r\n    keyCounter.items,\r\n    metadata\r\n  );\r\n\r\n  return {\r\n    result: keyCount === 0 ? 0 : (itemCount / keyCount) * 100,\r\n    counter: itemCounter ?? keyCounter,\r\n    metadataKey: metadataKeyValue.key,\r\n    value: metadataKeyValue.value,\r\n  };\r\n}\r\n\r\nexport function percentOfAllItemsCalculation(\r\n  metadataKeyValue: MetadataKeyValue | null,\r\n  metadata: MetaData,\r\n  _: Trend[],\r\n  countersConfigurations: CountersConfigurations,\r\n  totalItems: number\r\n) {\r\n  if (!metadataKeyValue) return { counter: null, result: 0 };\r\n  const itemCounter = getMetadataKeyValueConfiguration(\r\n    metadataKeyValue,\r\n    countersConfigurations\r\n  );\r\n\r\n  const keyCounter = getMetadataKeyValueConfiguration(\r\n    { key: CUSTOM_METADATA_KEY },\r\n    countersConfigurations\r\n  );\r\n\r\n  if (!itemCounter || !keyCounter) return { counter: null, result: 0 };\r\n\r\n  const itemCount = calculateSumItemsInMetadata(\r\n    itemCounter.members,\r\n    itemCounter.items,\r\n    metadata\r\n  );\r\n\r\n  const keyCount = calculateSumItemsInMetadata(\r\n    keyCounter.members,\r\n    keyCounter.items,\r\n    metadata\r\n  );\r\n\r\n  let result;\r\n  if (metadataKeyValue.key === CUSTOM_METADATA_KEY) {\r\n    result = totalItems === 0 ? 0 : (itemCount / totalItems) * 100;\r\n  } else {\r\n    result = keyCount === 0 ? 0 : (itemCount / keyCount) * 100;\r\n  }\r\n  return {\r\n    result: result,\r\n    counter: itemCounter ?? keyCounter,\r\n    metadataKey: metadataKeyValue.key,\r\n    value: metadataKeyValue.value,\r\n  };\r\n}\r\n\r\nexport function trendCalculation(\r\n  metadataKeyValue: MetadataKeyValue | null,\r\n  _: MetaData,\r\n  trends: Trend[],\r\n  countersConfigurations: CountersConfigurations\r\n) {\r\n  if (!metadataKeyValue || trends.length < 2)\r\n    return { counter: null, result: 0 };\r\n  const itemCounter = getMetadataKeyValueConfiguration(\r\n    metadataKeyValue,\r\n    countersConfigurations\r\n  );\r\n\r\n  const keyCounter = getMetadataKeyValueConfiguration(\r\n    { key: metadataKeyValue.key },\r\n    countersConfigurations\r\n  );\r\n\r\n  if (!itemCounter || !keyCounter) return { counter: null, result: 0 };\r\n\r\n  const trendsCounts = trends.map((trend) =>\r\n    calculateSumItemsInMetadata(\r\n      itemCounter.members,\r\n      itemCounter.items,\r\n      trend.metadata\r\n    )\r\n  );\r\n  const latestTrend = trendsCounts.at(0) ?? 0;\r\n  const previousTrendsSum = sum(trendsCounts.slice(1, trendsCounts.length));\r\n  const previousTrendsMean =\r\n    previousTrendsSum > 0 ? previousTrendsSum / trendsCounts.length - 1 : 0;\r\n  const trend = percentageIncrease(previousTrendsMean, latestTrend);\r\n\r\n  return {\r\n    result: trend,\r\n    counter: itemCounter ?? keyCounter,\r\n    metadataKey: metadataKeyValue.key,\r\n    value: metadataKeyValue.value,\r\n  };\r\n}\r\n\r\nexport function getMetadataKeyValueGroups(\r\n  metadataKeyValue: MetadataKeyValue | null,\r\n  countersConfigurations: CountersConfigurations\r\n): CounterConfiguration[] {\r\n  const counter = getMetadataKeyValueConfiguration(\r\n    metadataKeyValue,\r\n    countersConfigurations\r\n  );\r\n\r\n  return getCounterGroups(counter);\r\n}\r\n\r\nfunction getCounterGroups(\r\n  counter: CounterConfiguration | null\r\n): CounterConfiguration[] {\r\n  if (!counter) return [];\r\n\r\n  return counter.items?.filter((group) => group.isGroup ?? false) ?? [];\r\n}\r\n\r\nexport function hasMultipleMembers(\r\n  metadataKeyValue: MetadataKeyValue | null,\r\n  countersConfigurations: CountersConfigurations\r\n): boolean {\r\n  const counter = getMetadataKeyValueConfiguration(\r\n    metadataKeyValue,\r\n    countersConfigurations\r\n  );\r\n  if (!counter) return false;\r\n  if (counter.isGroup) return true;\r\n  let sum = 0;\r\n  counter.members?.forEach((member) => (sum += member.values?.length ?? 2));\r\n  return sum > 1;\r\n}\r\n\r\nexport function getMetadataKeyValueConfiguration(\r\n  metadataKeyValue: MetadataKeyValue | null,\r\n  countersConfigurations: CountersConfigurations\r\n): CounterConfiguration | null {\r\n  if (!metadataKeyValue) return null;\r\n  const keyConfig = objectToLowerCase(countersConfigurations)[\r\n    metadataKeyValue.key.toLowerCase()\r\n  ];\r\n  if (!keyConfig) return null;\r\n  if (!metadataKeyValue.value) return keyConfig;\r\n  const memberConfig = keyConfig.items?.find(\r\n    (group) =>\r\n      group.label?.toLowerCase() === metadataKeyValue.value?.toLowerCase()\r\n  );\r\n  if (!memberConfig || !memberConfig.display) return keyConfig;\r\n  return memberConfig;\r\n}\r\n\r\nexport function calculateSumItemsInMetadata(\r\n  members: GroupMembers[] | undefined,\r\n  groups: CounterConfiguration[] | undefined,\r\n  metadata: MetaData\r\n): number {\r\n  const items = getValuesAndCounts(members, groups, metadata);\r\n  return sum(items.map(({ count }) => count));\r\n}\r\n\r\nexport function getMaxItemValue(\r\n  members: GroupMembers[] | undefined,\r\n  groups: CounterConfiguration[] | undefined,\r\n  metadata: MetaData\r\n): { metadata?: string; value?: string; count: number } {\r\n  const items = getValuesAndCounts(members, groups, metadata);\r\n  if (items.length === 0) return { count: 0 };\r\n\r\n  return items.reduce((prev, current) =>\r\n    prev.count > current.count ? prev : current\r\n  );\r\n}\r\n\r\nfunction getValuesAndCounts(\r\n  members: GroupMembers[] | undefined,\r\n  groups: CounterConfiguration[] | undefined,\r\n  metadata: MetaData\r\n): { metadata?: string; value: string; count: number }[] {\r\n  const lowerKeysMetadata = toLowerKeys(metadata) as MetaData;\r\n  const membersData = filterRelevantValues(members, lowerKeysMetadata);\r\n\r\n  if (membersData.length > 0) return membersData;\r\n\r\n  return filterRelevantValues(\r\n    groups?.flatMap((group) => group.members ?? []) ?? [],\r\n    lowerKeysMetadata\r\n  );\r\n}\r\n\r\nfunction filterRelevantValues(\r\n  members: GroupMembers[] | undefined,\r\n  metadata: MetaData\r\n): { metadata?: string; value: string; count: number }[] {\r\n  return (\r\n    members?.flatMap((member) => {\r\n      const values = metadata[member.metadataName ?? ''];\r\n      if (!values) return [];\r\n\r\n      return (\r\n        member.values === undefined\r\n          ? values\r\n          : values.filter((k) => member.values?.includes(k.value))\r\n      ).map(({ value, count }) => {\r\n        return { metadata: member.metadataName, value: value, count: count };\r\n      });\r\n    }) ?? []\r\n  );\r\n}\r\n\r\nexport function getItemCounterConfiguration(\r\n  metadata: string | undefined,\r\n  value: string | undefined,\r\n  countersConfigurations: CountersConfigurations\r\n): CounterConfiguration | null {\r\n  if (!metadata || !value) return null;\r\n  const counterConfig = countersConfigurations[metadata];\r\n  const valueCounterConfig = counterConfig.items?.find(\r\n    (group) => group.label === value\r\n  );\r\n  if (!valueCounterConfig || !valueCounterConfig.display) return null;\r\n  return valueCounterConfig;\r\n}\r\n","import { CalculationConfiguration } from '../types/customizeBarTypes';\r\nimport {\r\n  percentOfAllItemsCalculation,\r\n  percentOfItemsCalculation,\r\n  topGroupCalculation,\r\n  topGroupPercentCalculation,\r\n  topValueCalculation,\r\n  topValuePercentCalculation,\r\n  totalSumCalculation,\r\n  trendCalculation,\r\n} from '../utils/countersUtils';\r\n\r\nexport const totalSumCalculationName = 'Total SUM';\r\nexport const topValueCalculationName = 'Top value total sum';\r\nexport const topValuePercentCalculationName = 'Top value %';\r\nexport const topGroupCalculationName = 'Top group total';\r\nexport const topGroupPercentCalculationName = 'Top group %';\r\nexport const percentOfItemsCalculationName = '% of items';\r\nexport const percentOfAllCalculationName = '% of all items';\r\nexport const trendCalculationName = 'trend';\r\n\r\nexport const totalSumCalculationConfiguration: CalculationConfiguration = {\r\n  name: totalSumCalculationName,\r\n  hasGroups: false,\r\n  hasMultipleMembers: false,\r\n  type: 'number',\r\n  calculate: totalSumCalculation,\r\n};\r\n\r\nexport const topValueCalculationConfiguration: CalculationConfiguration = {\r\n  name: topValueCalculationName,\r\n  hasGroups: false,\r\n  hasMultipleMembers: true,\r\n  type: 'number',\r\n  calculate: topValueCalculation,\r\n};\r\n\r\nexport const topValuePercentCalculationConfiguration: CalculationConfiguration =\r\n  {\r\n    name: topValuePercentCalculationName,\r\n    hasGroups: false,\r\n    hasMultipleMembers: true,\r\n    type: 'percentage',\r\n    calculate: topValuePercentCalculation,\r\n  };\r\n\r\nexport const topGroupCalculationConfiguration: CalculationConfiguration = {\r\n  name: topGroupCalculationName,\r\n  hasGroups: true,\r\n  hasMultipleMembers: false,\r\n  type: 'number',\r\n  calculate: topGroupCalculation,\r\n};\r\n\r\nexport const topGroupPercentCalculationConfiguration: CalculationConfiguration =\r\n  {\r\n    name: topGroupPercentCalculationName,\r\n    hasGroups: true,\r\n    hasMultipleMembers: false,\r\n    type: 'percentage',\r\n    calculate: topGroupPercentCalculation,\r\n  };\r\n\r\nexport const percentOfItemsCalculationConfiguration: CalculationConfiguration =\r\n  {\r\n    name: percentOfItemsCalculationName,\r\n    hasGroups: false,\r\n    hasMultipleMembers: false,\r\n    type: 'percentage',\r\n    calculate: percentOfItemsCalculation,\r\n  };\r\n\r\nexport const percentOfAllItemsCalculationConfiguration: CalculationConfiguration =\r\n  {\r\n    name: percentOfAllCalculationName,\r\n    hasGroups: false,\r\n    hasMultipleMembers: false,\r\n    type: 'percentage',\r\n    calculate: percentOfAllItemsCalculation,\r\n  };\r\n\r\nexport const trendCalculationConfiguration: CalculationConfiguration = {\r\n  name: trendCalculationName,\r\n  hasGroups: false,\r\n  hasMultipleMembers: false,\r\n  type: 'trend',\r\n  calculate: trendCalculation,\r\n};\r\n","import {\r\n  percentOfAllItemsCalculationConfiguration,\r\n  percentOfItemsCalculationConfiguration,\r\n  topGroupCalculationConfiguration,\r\n  topGroupPercentCalculationConfiguration,\r\n  topValueCalculationConfiguration,\r\n  topValuePercentCalculationConfiguration,\r\n  totalSumCalculationConfiguration,\r\n  trendCalculationConfiguration,\r\n} from './calculationsConfigurations';\r\n\r\nexport const CUSTOM_METADATA_KEY = 'item count';\r\nexport const countersStorageKey = 'oneAi-counters';\r\nexport const labelsStorageKey = 'oneAi-labels';\r\nexport const sizeAxisStorageKey = 'oneAi-sizeAxis';\r\nexport const colorAxisStorageKey = 'oneAi-colorAxis';\r\nexport const defaultCalculations = [\r\n  totalSumCalculationConfiguration,\r\n  topValueCalculationConfiguration,\r\n  topValuePercentCalculationConfiguration,\r\n  topGroupCalculationConfiguration,\r\n  topGroupPercentCalculationConfiguration,\r\n  percentOfItemsCalculationConfiguration,\r\n  percentOfAllItemsCalculationConfiguration,\r\n  trendCalculationConfiguration,\r\n];\r\nexport const PAGE_SIZE = 25;\r\n","import { OneAIDataNode } from '../types/componentsInputs';\r\nimport { Cluster, Item, MetaCluster, Phrase, Trend } from '../types/modals';\r\n\r\nexport const COLLECTION_TYPE = 'Collection';\r\n\r\nexport function getNodeText(node: OneAIDataNode): string {\r\n  return node.type === 'Cluster'\r\n    ? (node.data as Cluster).cluster_phrase\r\n    : node.type === 'Phrase'\r\n    ? (node.data as Phrase).text\r\n    : node.type === 'Meta'\r\n    ? (node.data as MetaCluster).meta_value\r\n    : (node.data as Item).original_text;\r\n}\r\n\r\nexport function getNodeId(node: OneAIDataNode): string {\r\n  return (\r\n    node.type === 'Cluster'\r\n      ? (node.data as Cluster).cluster_id\r\n      : node.type === 'Phrase'\r\n      ? (node.data as Phrase).phrase_id\r\n      : node.type === 'Meta'\r\n      ? (node.data as MetaCluster).meta_key +\r\n        '$$' +\r\n        (node.data as MetaCluster).meta_value\r\n      : (node.data as Item).id\r\n  ).toString();\r\n}\r\n\r\nexport function getNodeItemsCount(node: OneAIDataNode): number {\r\n  return node.type === 'Cluster'\r\n    ? (node.data as Cluster).items_count\r\n    : node.type === 'Phrase'\r\n    ? (node.data as Phrase).items_count\r\n    : node.type === 'Meta'\r\n    ? (node.data as MetaCluster).items_count\r\n    : 1;\r\n}\r\n\r\nexport function getNodeDetails(\r\n  node: OneAIDataNode | undefined,\r\n  collection: string\r\n): { id: string; type: string } {\r\n  const currentNodeType = node?.type ?? COLLECTION_TYPE;\r\n  const currentNodeId = node ? getNodeId(node) : collection;\r\n\r\n  return { id: currentNodeId, type: currentNodeType };\r\n}\r\n\r\nexport function getNodeTrends(node: OneAIDataNode | undefined): Trend[] {\r\n  if (!node) return [];\r\n  return node.type === 'Cluster'\r\n    ? (node.data as Cluster).trends ?? []\r\n    : node.type === 'Phrase'\r\n    ? (node.data as Phrase).trends ?? []\r\n    : node.type === 'Meta'\r\n    ? (node.data as MetaCluster).trends ?? []\r\n    : [];\r\n}\r\n\r\nexport const getNodeOriginalAndTranslatedText = (\r\n  node: OneAIDataNode | undefined\r\n) => {\r\n  if (!node) return { originalText: undefined, translatedText: undefined };\r\n  if (['Cluster', 'Phrase', 'Item'].includes(node.type)) {\r\n    const cluster = node.data as Cluster;\r\n    return {\r\n      originalText: cluster.item_original_text,\r\n      translatedText:\r\n        cluster.item_translated_text ?? cluster.item_original_text,\r\n    };\r\n  }\r\n\r\n  if (node.type === 'Meta') {\r\n    const item = node.data as MetaCluster;\r\n    return {\r\n      originalText: item.meta_value,\r\n      translatedText: item.meta_value,\r\n    };\r\n  }\r\n  return { originalText: undefined, translatedText: undefined };\r\n};\r\n","import React from 'react';\r\nimport { CountersConfigurations } from '../../types/customizeBarTypes';\r\nimport { getMetadataKeyValueConfiguration } from '../../utils/countersUtils';\r\n\r\nexport default function LabelDisplay({\r\n  metadataKey,\r\n  value,\r\n  countersConfiguration,\r\n  labelClicked,\r\n  tooltip = '',\r\n  width,\r\n  maxWidth = '10ch',\r\n  color,\r\n}: {\r\n  metadataKey: string;\r\n  value: string;\r\n  countersConfiguration: CountersConfigurations;\r\n  labelClicked: (key: string, value: string) => void;\r\n  tooltip?: string;\r\n  width?: string;\r\n  maxWidth?: string;\r\n  color?: string;\r\n}) {\r\n  const config = getMetadataKeyValueConfiguration(\r\n    { key: metadataKey, value: value },\r\n    countersConfiguration\r\n  );\r\n\r\n  return (\r\n    <span\r\n      data-for=\"global\"\r\n      data-tip={tooltip !== '' ? tooltip + ': ' + value : value}\r\n      className=\"flex items-center cursor-pointer text-gray-500 hover:text-gray-300\"\r\n      style={{ color }}\r\n      onClick={() => labelClicked(metadataKey, value)}\r\n    >\r\n      {config && config.display && config.display.icon !== null && (\r\n        <span\r\n          className={`w-[1em] h-[1em] ${\r\n            config.display.color === 'green'\r\n              ? 'text-emerald-400'\r\n              : config.display.color === 'red'\r\n              ? 'text-red-400'\r\n              : 'text-gray-500 dark:text-gray-300'\r\n          }`}\r\n        >\r\n          {config.display.icon}\r\n        </span>\r\n      )}\r\n      <span\r\n        style={{\r\n          width,\r\n          maxWidth,\r\n          marginLeft: metadataKey === 'topic' ? '-1px' : '1px',\r\n        }}\r\n        className=\"italic truncate pr-1\"\r\n      >\r\n        {value}\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n","import { Listbox, Transition } from '@headlessui/react';\r\nimport {\r\n  ChevronDownIcon,\r\n  ChevronUpDownIcon,\r\n  ChevronUpIcon,\r\n  FunnelIcon,\r\n} from '@heroicons/react/24/outline';\r\nimport React, { Fragment, useState } from 'react';\r\nimport {\r\n  CountersConfigurations,\r\n  MetadataKeyValue,\r\n} from '../../types/customizeBarTypes';\r\nimport { uniqBy } from '../../utils/utils';\r\n\r\nexport default function LabelsFiltersSelect({\r\n  selectedLabels,\r\n  countersConfigurations,\r\n  selectedMetadataKeyValueChange,\r\n}: {\r\n  selectedLabels: MetadataKeyValue[];\r\n  selectedMetadataKeyValueChange: (\r\n    newMetadataKeyValue: MetadataKeyValue\r\n  ) => void;\r\n  countersConfigurations: CountersConfigurations;\r\n}) {\r\n  return (\r\n    <Listbox>\r\n      <div className=\"relative\">\r\n        <Listbox.Button className=\"relative rounded-lg  py-2 pl-3 pr-10 text-left focus:outline-none sm:text-sm\">\r\n          <span\r\n            className=\"block truncate lowercase first-letter:uppercase text-black dark:text-white !text-xl\"\r\n            style={{ width: '1em', height: '1em' }}\r\n          >\r\n            <FunnelIcon />\r\n          </span>\r\n          <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\r\n            <ChevronUpDownIcon\r\n              className=\"h-5 w-5 text-gray-400\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          </span>\r\n        </Listbox.Button>\r\n        <Transition\r\n          as={Fragment}\r\n          leave=\"transition ease-in duration-100\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <Listbox.Options className=\"fixed mt-1 z-10 max-h-60 scrollbar-thin scrollbar-thumb-[#747189] scrollbar-track-[#272533] overflow-y-scroll scrollbar-thumb-rounded-full scrollbar-track-rounded-full rounded-md bg-gray-600 dark:bg-[#272533] py-1 text-base shadow-lg ring-1 ring-gray-500 dark:ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\r\n            {uniqBy(\r\n              Object.keys(countersConfigurations).sort((a, b) =>\r\n                a < b ? -1 : a > b ? 1 : 0\r\n              ),\r\n              (key) => key\r\n            )\r\n              .filter(\r\n                (meta) => (countersConfigurations[meta]?.items?.length ?? 0) > 0\r\n              )\r\n              .map((key, i) => (\r\n                <CascadedOption\r\n                  countersConfigurations={countersConfigurations}\r\n                  optionName={key}\r\n                  index={i}\r\n                  selected={selectedLabels ?? []}\r\n                  labelClicked={selectedMetadataKeyValueChange}\r\n                  key={i}\r\n                />\r\n              ))}\r\n          </Listbox.Options>\r\n        </Transition>\r\n      </div>\r\n    </Listbox>\r\n  );\r\n}\r\n\r\nfunction CascadedOption({\r\n  countersConfigurations,\r\n  optionName,\r\n  index,\r\n  selected,\r\n  labelClicked,\r\n}: {\r\n  countersConfigurations: CountersConfigurations;\r\n  optionName: string;\r\n  index: number;\r\n  selected: MetadataKeyValue[];\r\n  labelClicked: (newMetadataKeyValue: MetadataKeyValue) => void;\r\n}) {\r\n  const keySelected = selected.some((s) => s.key === optionName);\r\n  const [opened, setOpened] = useState(keySelected);\r\n  const configData = countersConfigurations[optionName];\r\n\r\n  return (\r\n    <Fragment key={index}>\r\n      <div className=\"w-full flex\">\r\n        <MetadataTitle label={optionName} key={optionName} />\r\n\r\n        {configData.items && configData.items.length > 0 && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"ml-auto mr-3\"\r\n            onClick={() => setOpened((opened) => !opened)}\r\n          >\r\n            {opened ? (\r\n              <ChevronUpIcon className=\"h-4 w-4 text-gray-300 \" />\r\n            ) : (\r\n              <ChevronDownIcon className=\"h-4 w-4 text-gray-300 \" />\r\n            )}\r\n            <span className=\"sr-only\">Open or Close metadata</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n      {opened &&\r\n        uniqBy(configData.items ?? [], (group) => group.label).map(\r\n          (group, i) => {\r\n            return (\r\n              <DropdownOption\r\n                label={group.label ?? ''}\r\n                value={\r\n                  { key: optionName, value: group.label } as MetadataKeyValue\r\n                }\r\n                selected={selected.some(\r\n                  (keyVal) =>\r\n                    keyVal.key === optionName && keyVal.value === group.label\r\n                )}\r\n                labelClicked={labelClicked}\r\n                pl={2}\r\n                key={optionName + group.label + i.toString()}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction MetadataTitle({ label }: { label: string }) {\r\n  return (\r\n    <Listbox.Option\r\n      style={{ paddingLeft: '1rem' }}\r\n      className={({ active }) =>\r\n        `relative cursor-default select-none py-2 pr-4 ${\r\n          active\r\n            ? 'bg-gray-400 dark:bg-[#444154] text-white'\r\n            : 'text-gray-300 dark:text-[#747189]'\r\n        }`\r\n      }\r\n      value={label}\r\n    >\r\n      <span className=\"w-full flex\">\r\n        <div className=\"flex items-center\">\r\n          <label\r\n            className={`text-sm ml-2 font-medium text-gray-900 dark:text-gray-300 block truncate lowercase first-letter:uppercase`}\r\n          >\r\n            {label}\r\n          </label>\r\n        </div>\r\n      </span>\r\n    </Listbox.Option>\r\n  );\r\n}\r\n\r\nfunction DropdownOption({\r\n  label,\r\n  value,\r\n  selected,\r\n  labelClicked,\r\n  pl = 1,\r\n}: {\r\n  label: string;\r\n  value: MetadataKeyValue;\r\n  selected: boolean;\r\n  labelClicked: (newMetadataKeyValue: MetadataKeyValue) => void;\r\n  pl?: number;\r\n}) {\r\n  return (\r\n    <Listbox.Option\r\n      style={{ paddingLeft: pl + 'rem' }}\r\n      className={({ active }) =>\r\n        `relative cursor-default select-none py-2 pr-4 ${\r\n          active\r\n            ? 'bg-gray-400 dark:bg-[#444154] text-white'\r\n            : 'text-gray-300 dark:text-[#747189]'\r\n        }`\r\n      }\r\n      onClick={() => labelClicked(value)}\r\n      value={value}\r\n    >\r\n      <span className=\"w-full flex\">\r\n        <div className=\"flex items-center\">\r\n          <input\r\n            checked={selected}\r\n            type=\"checkbox\"\r\n            className=\"w-4 h-4 text-[#4D4DFE] bg-gray-100 border-gray-300 focus:ring-[#4D4DFE] dark:ring-offset-gray-800 focus:ring-2 dark:bg-[#322F46] dark:border-[#322F46]\"\r\n          />\r\n          <label\r\n            className={`text-sm ml-2 font-medium text-gray-900 dark:text-gray-300 block truncate lowercase first-letter:uppercase ${\r\n              selected ? 'font-medium' : 'font-normal'\r\n            }`}\r\n          >\r\n            {label}\r\n          </label>\r\n        </div>\r\n      </span>\r\n    </Listbox.Option>\r\n  );\r\n}\r\n","import { Listbox, Transition } from '@headlessui/react';\r\nimport { ChevronDownIcon } from '@heroicons/react/24/outline';\r\nimport React, { Fragment } from 'react';\r\n\r\nexport default function SingleSelect({\r\n  options,\r\n  selectedLabel,\r\n  onSelect,\r\n}: {\r\n  options: string[];\r\n  selectedLabel: string;\r\n  onSelect: (selectedLabel: string) => void;\r\n}) {\r\n  return (\r\n    <Listbox>\r\n      <div className=\"relative\">\r\n        <Listbox.Button className=\"relative rounded-lg text-left focus:outline-none text-sm flex items-center\">\r\n          <span className=\"text-[#111111] dark:text-gray-300 text-sm mr-1\">\r\n            {selectedLabel}\r\n          </span>\r\n          <span>\r\n            <ChevronDownIcon\r\n              className=\"h-4 w-4 text-gray-200\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          </span>\r\n        </Listbox.Button>\r\n        <Transition\r\n          as={Fragment}\r\n          leave=\"transition ease-in duration-100\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <Listbox.Options className=\"fixed mt-1 z-10 p-1 max-h-60 scrollbar-thin scrollbar-thumb-[#747189] scrollbar-track-[#272533] overflow-y-scroll scrollbar-thumb-rounded-full scrollbar-track-rounded-full rounded-md bg-gray-600 dark:bg-[#272533] py-1 text-base shadow-lg ring-1 ring-gray-500 dark:ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\r\n            {options.map((key, i) => (\r\n              <DropdownOption\r\n                label={key}\r\n                value={key}\r\n                selected={selectedLabel === key}\r\n                labelClicked={onSelect}\r\n                key={i}\r\n              />\r\n            ))}\r\n          </Listbox.Options>\r\n        </Transition>\r\n      </div>\r\n    </Listbox>\r\n  );\r\n}\r\n\r\nfunction DropdownOption({\r\n  label,\r\n  value,\r\n  selected,\r\n  labelClicked,\r\n}: {\r\n  label: string;\r\n  value: string;\r\n  selected: boolean;\r\n  labelClicked: (label: string) => void;\r\n}) {\r\n  return (\r\n    <Listbox.Option\r\n      className={({ active }) =>\r\n        `relative cursor-default select-none py-2 pr-4 ${\r\n          active\r\n            ? 'bg-gray-400 dark:bg-[#444154] text-white'\r\n            : 'text-gray-300 dark:text-[#747189]'\r\n        }`\r\n      }\r\n      onClick={() => labelClicked(value)}\r\n      value={value}\r\n    >\r\n      <span className=\"w-full flex\">\r\n        <div className=\"flex items-center\">\r\n          <input\r\n            checked={selected}\r\n            onChange={() => {}}\r\n            type=\"radio\"\r\n            className=\"w-4 h-4 text-[#4D4DFE] bg-gray-100 border-gray-300 focus:ring-[#4D4DFE] dark:ring-offset-gray-800 focus:ring-2 dark:bg-[#322F46] dark:border-[#322F46]\"\r\n          />\r\n          <label\r\n            className={`text-sm ml-2 font-medium text-gray-900 dark:text-gray-300 block truncate lowercase first-letter:uppercase ${\r\n              selected ? 'font-medium' : 'font-normal'\r\n            }`}\r\n          >\r\n            {label}\r\n          </label>\r\n        </div>\r\n      </span>\r\n    </Listbox.Option>\r\n  );\r\n}\r\n","import {\r\n  CountersConfigurations,\r\n  CounterType,\r\n  MetadataKeyValue,\r\n} from '../types/customizeBarTypes';\r\nimport { MetaData, Trend } from '../types/modals';\r\nimport { getMetadataKeyValueGroups, hasMultipleMembers } from './countersUtils';\r\n\r\nexport const numberFormatter = new Intl.NumberFormat('en-US');\r\n\r\nexport function getMetadataKeyValueDisplay(metadataKeyValue: MetadataKeyValue) {\r\n  if (!metadataKeyValue.value) return metadataKeyValue.key;\r\n  return `${metadataKeyValue.key}.${metadataKeyValue.value}`;\r\n}\r\n\r\nexport function getBackgroundColorLayers(\r\n  colorAxis: CounterType[],\r\n  metadata: MetaData,\r\n  trends: Trend[],\r\n  countersConfiguration: CountersConfigurations,\r\n  totalItems: number\r\n) {\r\n  return groupCounters(colorAxis, countersConfiguration)\r\n    .map((countersGroup) => {\r\n      const groups = countersGroup.map((counter) =>\r\n        counter.calculationConfiguration.calculate(\r\n          counter.metadataKeyValue,\r\n          metadata,\r\n          trends,\r\n          countersConfiguration,\r\n          totalItems\r\n        )\r\n      );\r\n\r\n      if (!groups.some((group) => group.result && group.result > 0)) return '';\r\n      let backgroundString = '';\r\n      let totalPercentage = 0;\r\n      groups.forEach((group) => {\r\n        backgroundString =\r\n          backgroundString +\r\n          `,${\r\n            group.counter?.display?.color ?? 'rgba(255,0,0,0)'\r\n          } ${totalPercentage}% ${totalPercentage + group.result}%`;\r\n        totalPercentage += group.result;\r\n      });\r\n      backgroundString = `${backgroundString},rgba(255,0,0,0) ${totalPercentage}% ${\r\n        100 - totalPercentage\r\n      }%`;\r\n      return `linear-gradient(90deg${backgroundString})`;\r\n    })\r\n    .filter((str) => str !== '');\r\n}\r\n\r\nfunction groupCounters(\r\n  counters: CounterType[],\r\n  countersConfiguration: CountersConfigurations\r\n) {\r\n  return counters.reduce((groups, counter) => {\r\n    const index = groups.findIndex(\r\n      (group) =>\r\n        group.length > 0 &&\r\n        areCountersCanBeGrouped(counter, group.at(0), countersConfiguration)\r\n    );\r\n    if (index !== -1) {\r\n      groups[index].push(counter);\r\n    } else {\r\n      groups.push([counter]);\r\n    }\r\n    return groups;\r\n  }, [] as Array<CounterType[]>);\r\n}\r\n\r\nfunction areCountersCanBeGrouped(\r\n  firstCounter: CounterType,\r\n  secondCounter: CounterType | undefined,\r\n  countersConfiguration: CountersConfigurations\r\n): boolean {\r\n  if (\r\n    !firstCounter.metadataKeyValue ||\r\n    !secondCounter ||\r\n    !secondCounter.metadataKeyValue\r\n  )\r\n    return false;\r\n  if (\r\n    firstCounter.calculationConfiguration.name !==\r\n    secondCounter.calculationConfiguration.name\r\n  )\r\n    return false;\r\n  return areKeyValuesSameLevel(\r\n    firstCounter.metadataKeyValue,\r\n    secondCounter.metadataKeyValue,\r\n    countersConfiguration\r\n  );\r\n}\r\n\r\nfunction areKeyValuesSameLevel(\r\n  firstKeyValue: MetadataKeyValue,\r\n  secondKeyValue: MetadataKeyValue,\r\n  countersConfiguration: CountersConfigurations\r\n): boolean {\r\n  if (firstKeyValue.key !== secondKeyValue.key) return false;\r\n\r\n  const firstKeyValueHasGroups =\r\n    getMetadataKeyValueGroups(firstKeyValue, countersConfiguration).length > 0;\r\n  const secondKeyValueHasGroups =\r\n    getMetadataKeyValueGroups(secondKeyValue, countersConfiguration).length > 0;\r\n  if (firstKeyValueHasGroups !== secondKeyValueHasGroups) return false;\r\n\r\n  const firstKeyValueHasMultipleMembers = hasMultipleMembers(\r\n    firstKeyValue,\r\n    countersConfiguration\r\n  );\r\n  const secondKeyValueHasMultipleMembers = hasMultipleMembers(\r\n    secondKeyValue,\r\n    countersConfiguration\r\n  );\r\n  if (firstKeyValueHasMultipleMembers !== secondKeyValueHasMultipleMembers)\r\n    return false;\r\n\r\n  return true;\r\n}\r\n","import {\r\n  ArrowDownIcon,\r\n  ArrowsUpDownIcon,\r\n  ArrowUpIcon,\r\n} from '@heroicons/react/20/solid';\r\nimport React from 'react';\r\nimport {\r\n  CountersConfigurations,\r\n  CounterType,\r\n} from '../../types/customizeBarTypes';\r\nimport { MetaData, Trend } from '../../types/modals';\r\nimport {\r\n  getMetadataKeyValueDisplay,\r\n  numberFormatter,\r\n} from '../../utils/displayUtils';\r\nimport { customNumberToFixed, getNumberDescription } from '../../utils/utils';\r\n\r\nexport default function CounterDisplay({\r\n  counter,\r\n  metadata,\r\n  countersConfiguration,\r\n  trends,\r\n  totalItems,\r\n  width,\r\n  maxWidth = '6ch',\r\n}: {\r\n  counter: CounterType;\r\n  metadata: MetaData;\r\n  countersConfiguration: CountersConfigurations;\r\n  trends: Trend[];\r\n  totalItems: number;\r\n  width?: string;\r\n  maxWidth?: string;\r\n}) {\r\n  const metadataKeyValue = counter.metadataKeyValue;\r\n  if (!metadataKeyValue) return <></>;\r\n  const displayResult = counter.calculationConfiguration.calculate(\r\n    metadataKeyValue,\r\n    metadata,\r\n    trends,\r\n    countersConfiguration,\r\n    totalItems\r\n  );\r\n  if (!displayResult.counter) return <></>;\r\n\r\n  return (\r\n    <span\r\n      data-tip={\r\n        `${getMetadataKeyValueDisplay(metadataKeyValue)} - ${\r\n          counter.calculationConfiguration.name\r\n        }` +\r\n        getMetadataValueTitle(displayResult.metadataKey, displayResult.value) +\r\n        ' - ' +\r\n        numberFormatter.format(customNumberToFixed(displayResult.result))\r\n      }\r\n      data-for=\"global\"\r\n      className={`flex items-center text-sm ${\r\n        counter.calculationConfiguration.type !== 'trend' &&\r\n        displayResult.result < 1\r\n          ? 'text-gray-500 dark:text-gray-300'\r\n          : displayResult.counter.display\r\n          ? displayResult.counter.display.color === 'green'\r\n            ? 'text-emerald-400'\r\n            : displayResult.counter.display.color === 'red'\r\n            ? 'text-red-400'\r\n            : 'text-gray-500 dark:text-gray-300'\r\n          : 'text-gray-500 dark:text-gray-300'\r\n      }`}\r\n    >\r\n      {counter.calculationConfiguration.type === 'trend' &&\r\n      displayResult.result > 0 ? (\r\n        <span\r\n          className=\"text-emerald-400\"\r\n          style={{ width: '1em', height: '1em' }}\r\n        >\r\n          <ArrowUpIcon />\r\n        </span>\r\n      ) : counter.calculationConfiguration.type === 'trend' &&\r\n        displayResult.result < 0 ? (\r\n        <span className=\"text-red-400\" style={{ width: '1em', height: '1em' }}>\r\n          <ArrowDownIcon />\r\n        </span>\r\n      ) : (\r\n        counter.calculationConfiguration.type === 'trend' && (\r\n          <span\r\n            className=\"text-gray-300\"\r\n            style={{ width: '1em', height: '1em' }}\r\n          >\r\n            <ArrowsUpDownIcon />\r\n          </span>\r\n        )\r\n      )}\r\n      {displayResult.counter.display &&\r\n        displayResult.counter.display.icon !== null && (\r\n          <span style={{ width: '1em', height: '1em' }}>\r\n            {displayResult.counter.display.icon}\r\n          </span>\r\n        )}\r\n      <span\r\n        className={`${\r\n          counter.calculationConfiguration.type === 'trend'\r\n            ? displayResult.result > 0\r\n              ? 'text-emerald-400'\r\n              : displayResult.result < 0\r\n              ? 'text-red-400'\r\n              : 'text-gray-500 dark:text-gray-300'\r\n            : ''\r\n        }`}\r\n        style={{ width, maxWidth }}\r\n      >\r\n        {getNumberDescription(displayResult.result, 2)}\r\n        {counter.calculationConfiguration.type === 'percentage' ||\r\n        counter.calculationConfiguration.type === 'trend'\r\n          ? '%'\r\n          : null}\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction getMetadataValueTitle(\r\n  metadata: string | undefined,\r\n  value: string | undefined\r\n) {\r\n  if (metadata) {\r\n    if (value) return `(${metadata}.${value})`;\r\n    return `(${metadata})`;\r\n  }\r\n\r\n  if (value) {\r\n    return `(${value})`;\r\n  }\r\n\r\n  return '';\r\n}\r\n","import React from 'react';\r\nimport { CountersConfigurations } from '../../types/customizeBarTypes';\r\nimport { MetaData } from '../../types/modals';\r\nimport { toLowerKeys } from '../../utils/utils';\r\nimport LabelDisplay from './LabelDisplay';\r\n\r\nexport default function MaxLabelDisplay({\r\n  metadataKey,\r\n  metadata,\r\n  countersConfiguration,\r\n  labelClicked,\r\n  width,\r\n  maxWidth,\r\n}: {\r\n  metadataKey: string;\r\n  metadata: MetaData;\r\n  countersConfiguration: CountersConfigurations;\r\n  labelClicked: (key: string, value: string) => void;\r\n  width?: string;\r\n  maxWidth?: string;\r\n}) {\r\n  const lowerKeysMetadata = toLowerKeys(metadata) as MetaData;\r\n  const meta = lowerKeysMetadata[metadataKey.toLowerCase()]?.reduce(\r\n    (prev, current) => (prev.count > current.count ? prev : current)\r\n  );\r\n  if (!meta) return <></>;\r\n  return (\r\n    <LabelDisplay\r\n      metadataKey={metadataKey}\r\n      value={meta.value}\r\n      countersConfiguration={countersConfiguration}\r\n      labelClicked={labelClicked}\r\n      width={width}\r\n      maxWidth={maxWidth}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  CountersConfigurations,\r\n  CounterType,\r\n} from '../types/customizeBarTypes';\r\nimport { MetaData, Trend } from '../types/modals';\r\nimport CounterDisplay from './CountersLabels/CounterDisplay';\r\nimport MaxLabelDisplay from './CountersLabels/MaxLabelDisplay';\r\n\r\nexport default function CountersLabelsDisplay({\r\n  counters,\r\n  labels,\r\n  metadata,\r\n  countersConfiguration,\r\n  trends,\r\n  labelClicked,\r\n  counterWidth,\r\n  counterMaxWidth,\r\n  labelWidth,\r\n  labelMaxWidth,\r\n  totalItems,\r\n}: {\r\n  counters: CounterType[];\r\n  labels: string[];\r\n  metadata: MetaData;\r\n  countersConfiguration: CountersConfigurations;\r\n  trends: Trend[];\r\n  labelClicked: (key: string, value: string) => void;\r\n  totalItems: number;\r\n  counterWidth?: string;\r\n  counterMaxWidth?: string;\r\n  labelWidth?: string;\r\n  labelMaxWidth?: string;\r\n}) {\r\n  return (\r\n    <span className=\"truncate flex items-center\">\r\n      {counters\r\n        .filter((counter) => counter.metadataKeyValue !== null)\r\n        .map((counter, i) => (\r\n          <div key={i} className=\"mr-2\">\r\n            <CounterDisplay\r\n              counter={counter}\r\n              countersConfiguration={countersConfiguration}\r\n              metadata={metadata}\r\n              trends={trends}\r\n              width={counterWidth}\r\n              maxWidth={counterMaxWidth}\r\n              totalItems={totalItems}\r\n            />\r\n          </div>\r\n        ))}\r\n      {labels.map((label, i) => (\r\n        <div key={i} className=\"mr-1\">\r\n          <MaxLabelDisplay\r\n            countersConfiguration={countersConfiguration}\r\n            metadataKey={label}\r\n            labelClicked={labelClicked}\r\n            metadata={metadata}\r\n            width={labelWidth}\r\n            maxWidth={labelMaxWidth}\r\n          />\r\n        </div>\r\n      ))}\r\n    </span>\r\n  );\r\n}\r\n","import { Listbox } from '@headlessui/react';\r\nimport React from 'react';\r\nimport {\r\n  CalculationConfiguration,\r\n  MetadataKeyValue,\r\n} from '../../types/customizeBarTypes';\r\n\r\nexport default function DropdownOption({\r\n  label,\r\n  value,\r\n  pl = 1,\r\n}: {\r\n  label: string;\r\n  value: MetadataKeyValue | CalculationConfiguration | string;\r\n  pl?: number;\r\n}) {\r\n  return (\r\n    <Listbox.Option\r\n      style={{ paddingLeft: pl + 'rem' }}\r\n      className={({ active }) =>\r\n        `relative cursor-default select-none py-2 pr-4 ${\r\n          active\r\n            ? 'bg-gray-400 dark:bg-[#444154] text-white'\r\n            : 'text-gray-300 dark:text-[#747189]'\r\n        }`\r\n      }\r\n      value={value}\r\n    >\r\n      {({ selected }) => (\r\n        <span className=\"w-full flex\">\r\n          <div className=\"flex items-center\">\r\n            <input\r\n              checked={selected}\r\n              type=\"radio\"\r\n              className=\"w-4 h-4 text-[#4D4DFE] bg-gray-100 border-gray-300 focus:ring-[#4D4DFE] dark:ring-offset-gray-800 focus:ring-2 dark:bg-[#322F46] dark:border-[#322F46]\"\r\n            />\r\n            <label\r\n              className={`text-sm ml-2 font-medium text-gray-900 dark:text-gray-300 block truncate lowercase first-letter:uppercase ${\r\n                selected ? 'font-medium' : 'font-normal'\r\n              }`}\r\n            >\r\n              {label}\r\n            </label>\r\n          </div>\r\n        </span>\r\n      )}\r\n    </Listbox.Option>\r\n  );\r\n}\r\n","import { Listbox, Transition } from '@headlessui/react';\r\nimport {\r\n  ChevronDownIcon,\r\n  ChevronUpDownIcon,\r\n  ChevronUpIcon,\r\n} from '@heroicons/react/20/solid';\r\nimport React, { Fragment, useState } from 'react';\r\nimport {\r\n  CountersConfigurations,\r\n  MetadataKeyValue,\r\n} from '../../types/customizeBarTypes';\r\nimport { getMetadataKeyValueDisplay } from '../../utils/displayUtils';\r\nimport { uniqBy } from '../../utils/utils';\r\nimport DropdownOption from './DropdownOption';\r\n\r\nexport default function KeyValueSingleSelect({\r\n  metadataKeyValue,\r\n  countersConfigurations,\r\n  selectedMetadataKeyValueChange,\r\n  placeholder,\r\n}: {\r\n  metadataKeyValue: MetadataKeyValue | null;\r\n  selectedMetadataKeyValueChange: (\r\n    newMetadataKeyValue: MetadataKeyValue\r\n  ) => void;\r\n  countersConfigurations: CountersConfigurations;\r\n  placeholder: string;\r\n}) {\r\n  return (\r\n    <Listbox\r\n      value={metadataKeyValue}\r\n      onChange={selectedMetadataKeyValueChange}\r\n      by={(a, b) => a?.key === b?.key && a?.value === b?.value}\r\n    >\r\n      <div className=\"relative\">\r\n        <Listbox.Button className=\"relative rounded-lg bg-gray-600 dark:bg-[#272535] py-2 pl-3 pr-10 text-left focus:outline-none focus-visible:border-indigo-500 focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75 focus-visible:ring-offset-2 focus-visible:ring-offset-orange-300 sm:text-sm\">\r\n          <span className=\"block truncate lowercase first-letter:uppercase text-white\">\r\n            {metadataKeyValue\r\n              ? getMetadataKeyValueDisplay(metadataKeyValue)\r\n              : placeholder}\r\n          </span>\r\n          <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\r\n            <ChevronUpDownIcon\r\n              className=\"h-5 w-5 text-gray-400\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          </span>\r\n        </Listbox.Button>\r\n        <Transition\r\n          as={Fragment}\r\n          leave=\"transition ease-in duration-100\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <Listbox.Options className=\"fixed mt-1 z-10 max-h-60 scrollbar-thin scrollbar-thumb-[#747189] scrollbar-track-[#272533] overflow-y-scroll scrollbar-thumb-rounded-full scrollbar-track-rounded-full rounded-md bg-gray-600 dark:bg-[#272533] py-1 text-base shadow-lg ring-1 ring-gray-500 dark:ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\r\n            {uniqBy(\r\n              Object.keys(countersConfigurations).sort((a, b) =>\r\n                a < b ? -1 : a > b ? 1 : 0\r\n              ),\r\n              (key) => key\r\n            ).map((key, i) => (\r\n              <CascadedOption\r\n                countersConfigurations={countersConfigurations}\r\n                optionName={key}\r\n                index={i}\r\n                selected={\r\n                  (metadataKeyValue?.key ?? '') === key &&\r\n                  metadataKeyValue?.value !== undefined\r\n                }\r\n                key={i}\r\n              />\r\n            ))}\r\n          </Listbox.Options>\r\n        </Transition>\r\n      </div>\r\n    </Listbox>\r\n  );\r\n}\r\n\r\nfunction CascadedOption({\r\n  countersConfigurations,\r\n  optionName,\r\n  index,\r\n  selected,\r\n}: {\r\n  countersConfigurations: CountersConfigurations;\r\n  optionName: string;\r\n  index: number;\r\n  selected: boolean;\r\n}) {\r\n  const [opened, setOpened] = useState(selected);\r\n  const configData = countersConfigurations[optionName];\r\n\r\n  return (\r\n    <Fragment key={index}>\r\n      <div className=\"w-full flex\">\r\n        <DropdownOption\r\n          label={optionName}\r\n          value={{ key: optionName } as MetadataKeyValue}\r\n          key={optionName}\r\n        />\r\n\r\n        {configData.items && configData.items.length > 0 && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"ml-auto mr-3\"\r\n            onClick={() => setOpened((opened) => !opened)}\r\n          >\r\n            {opened ? (\r\n              <ChevronUpIcon className=\"h-4 w-4 text-gray-300 \" />\r\n            ) : (\r\n              <ChevronDownIcon className=\"h-4 w-4 text-gray-300 \" />\r\n            )}\r\n            <span className=\"sr-only\">Open or Close metadata</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n      {opened &&\r\n        uniqBy(configData.items ?? [], (group) => group.label).map(\r\n          (group, i) => {\r\n            return (\r\n              <DropdownOption\r\n                label={group.label ?? ''}\r\n                value={\r\n                  { key: optionName, value: group.label } as MetadataKeyValue\r\n                }\r\n                pl={2}\r\n                key={optionName + group.label + i.toString()}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n    </Fragment>\r\n  );\r\n}\r\n","import { Listbox, Transition } from '@headlessui/react';\r\nimport { ChevronUpDownIcon, XMarkIcon } from '@heroicons/react/20/solid';\r\nimport React, { Fragment } from 'react';\r\nimport {\r\n  topGroupPercentCalculationName,\r\n  topValuePercentCalculationName,\r\n} from '../../configurations/calculationsConfigurations';\r\nimport {\r\n  CalculationConfiguration,\r\n  CountersConfigurations,\r\n  CounterType,\r\n  MetadataKeyValue,\r\n} from '../../types/customizeBarTypes';\r\nimport {\r\n  getMetadataKeyValueGroups,\r\n  hasMultipleMembers,\r\n} from '../../utils/countersUtils';\r\nimport DropdownOption from '../CountersLabels/DropdownOption';\r\nimport KeyValueSingleSelect from '../CountersLabels/KeyValueSingleSelect';\r\n\r\nexport default function Counters({\r\n  countersConfigurations,\r\n  calculationsConfigurations,\r\n  currentCounters,\r\n  countersChanged,\r\n  addCounterText,\r\n  title,\r\n}: {\r\n  countersConfigurations: CountersConfigurations;\r\n  calculationsConfigurations: CalculationConfiguration[];\r\n  currentCounters: CounterType[];\r\n  countersChanged: (counters: CounterType[]) => void;\r\n  addCounterText: string;\r\n  title: string;\r\n}) {\r\n  const addCounter = (newMetadataKeyValue: MetadataKeyValue) => {\r\n    const allowedCalculations = getCalculationTypes(\r\n      calculationsConfigurations,\r\n      newMetadataKeyValue,\r\n      countersConfigurations\r\n    );\r\n    countersChanged([\r\n      ...currentCounters,\r\n      {\r\n        metadataKeyValue: newMetadataKeyValue,\r\n        calculationConfiguration: getDefaultCalculation(allowedCalculations),\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const deleteCounter = (index: number) => {\r\n    currentCounters.splice(index, 1);\r\n    countersChanged([...currentCounters]);\r\n  };\r\n\r\n  const updateCounter = (index: number, updatedCounter: CounterType) => {\r\n    currentCounters[index] = updatedCounter;\r\n    countersChanged([...currentCounters]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <p className=\"text-xl text-gray-500 dark:text-white mb-1\">{title}</p>\r\n      <div className=\"flex w-full flex-wrap items-center\">\r\n        {currentCounters.map((addedCounter, i) => (\r\n          <div className=\"ml-1 mb-1\" key={i}>\r\n            <Counter\r\n              counterData={addedCounter}\r\n              countersConfigurations={countersConfigurations}\r\n              calculationsConfigurations={calculationsConfigurations}\r\n              counterDeleted={() => deleteCounter(i)}\r\n              counterChanged={(counter) => updateCounter(i, counter)}\r\n            />\r\n          </div>\r\n        ))}\r\n        <div className=\"ml-1\">\r\n          <KeyValueSingleSelect\r\n            metadataKeyValue={null}\r\n            countersConfigurations={countersConfigurations}\r\n            selectedMetadataKeyValueChange={addCounter}\r\n            placeholder={addCounterText}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Counter({\r\n  counterData,\r\n  countersConfigurations,\r\n  calculationsConfigurations,\r\n  counterDeleted,\r\n  counterChanged,\r\n}: {\r\n  counterData: CounterType;\r\n  countersConfigurations: CountersConfigurations;\r\n  calculationsConfigurations: CalculationConfiguration[];\r\n  counterDeleted: () => void;\r\n  counterChanged: (counter: CounterType) => void;\r\n}) {\r\n  const selectedMetadataKeyValueChangeHandler = (\r\n    newMetadataKeyValue: MetadataKeyValue\r\n  ) => {\r\n    const allowedCalculations = getCalculationTypes(\r\n      calculationsConfigurations,\r\n      newMetadataKeyValue,\r\n      countersConfigurations\r\n    );\r\n    counterChanged({\r\n      metadataKeyValue: newMetadataKeyValue,\r\n      calculationConfiguration: allowedCalculations.some(\r\n        (calc) => calc.name === counterData.calculationConfiguration.name\r\n      )\r\n        ? counterData.calculationConfiguration\r\n        : getDefaultCalculation(allowedCalculations),\r\n    });\r\n  };\r\n\r\n  const counterChangeHandler = (newCounter: CalculationConfiguration) => {\r\n    counterChanged({\r\n      metadataKeyValue: counterData.metadataKeyValue,\r\n      calculationConfiguration: newCounter,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"flex bg-gray-600 dark:bg-[#272535] p-1 w-fit\">\r\n        <KeyValueSingleSelect\r\n          metadataKeyValue={counterData.metadataKeyValue}\r\n          countersConfigurations={countersConfigurations}\r\n          selectedMetadataKeyValueChange={selectedMetadataKeyValueChangeHandler}\r\n          placeholder=\"Select\"\r\n        />\r\n        <Listbox\r\n          value={counterData.calculationConfiguration}\r\n          onChange={counterChangeHandler}\r\n          by=\"name\"\r\n        >\r\n          <div className=\"relative ml-1\">\r\n            <Listbox.Button className=\"relative rounded-lg bg-gray-600 dark:bg-[#272535] py-2 pl-3 pr-10 text-left focus:outline-none focus-visible:border-indigo-500 focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75 focus-visible:ring-offset-2 focus-visible:ring-offset-orange-300 sm:text-sm\">\r\n              <span className=\"block truncate lowercase first-letter:uppercase text-white\">\r\n                {counterData.calculationConfiguration.name}\r\n              </span>\r\n              <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\r\n                <ChevronUpDownIcon\r\n                  className=\"h-5 w-5 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </span>\r\n            </Listbox.Button>\r\n            <Transition\r\n              as={Fragment}\r\n              leave=\"transition ease-in duration-100\"\r\n              leaveFrom=\"opacity-100\"\r\n              leaveTo=\"opacity-0\"\r\n            >\r\n              <Listbox.Options className=\"fixed mt-1 z-10 max-h-60 scrollbar-thin scrollbar-thumb-[#747189] scrollbar-track-[#272533] overflow-y-scroll scrollbar-thumb-rounded-full scrollbar-track-rounded-full rounded-md bg-gray-600 dark:bg-[#272533] py-1 text-base shadow-lg ring-1 ring-gray-500 dark:ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\r\n                {getCalculationTypes(\r\n                  calculationsConfigurations,\r\n                  counterData.metadataKeyValue,\r\n                  countersConfigurations\r\n                )\r\n                  .sort(function (a, b) {\r\n                    const textA = a.name.toLowerCase();\r\n                    const textB = b.name.toLowerCase();\r\n                    return textA < textB ? -1 : textA > textB ? 1 : 0;\r\n                  })\r\n                  .map((counter) => (\r\n                    <DropdownOption\r\n                      label={counter.name}\r\n                      value={counter}\r\n                      key={counter.name}\r\n                    />\r\n                  ))}\r\n              </Listbox.Options>\r\n            </Transition>\r\n          </div>\r\n        </Listbox>\r\n        <button type=\"button\" className=\"ml-1\" onClick={counterDeleted}>\r\n          <XMarkIcon className=\"h-4 w-4 text-gray-200 dark:text-gray-600 hover:scale-125 transition duration-100 ease-linear\" />\r\n          <span className=\"sr-only\">Delete counter</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getCalculationTypes(\r\n  calculationTypes: CalculationConfiguration[],\r\n  selectedMetadataKeyValue: MetadataKeyValue | null,\r\n  countersConfiguration: CountersConfigurations\r\n): CalculationConfiguration[] {\r\n  if (!selectedMetadataKeyValue)\r\n    return calculationTypes.filter(\r\n      (calc) => !calc.hasGroups && !calc.hasMultipleMembers\r\n    );\r\n\r\n  const hasGroups =\r\n    getMetadataKeyValueGroups(selectedMetadataKeyValue, countersConfiguration)\r\n      .length > 0;\r\n  if (hasGroups) return calculationTypes;\r\n\r\n  const keyValueHasMultipleMembers = hasMultipleMembers(\r\n    selectedMetadataKeyValue,\r\n    countersConfiguration\r\n  );\r\n  if (keyValueHasMultipleMembers)\r\n    return calculationTypes.filter((calc) => !calc.hasGroups);\r\n\r\n  return calculationTypes.filter(\r\n    (calc) => !calc.hasGroups && !calc.hasMultipleMembers\r\n  );\r\n}\r\n\r\nfunction getDefaultCalculation(\r\n  allowedCalculations: CalculationConfiguration[]\r\n): CalculationConfiguration {\r\n  return (\r\n    allowedCalculations.find(\r\n      (calc) => calc.name === topGroupPercentCalculationName\r\n    ) ??\r\n    allowedCalculations.find(\r\n      (calc) => calc.name === topValuePercentCalculationName\r\n    ) ??\r\n    allowedCalculations[0]\r\n  );\r\n}\r\n","import { Listbox, Transition } from '@headlessui/react';\r\nimport { ChevronUpDownIcon } from '@heroicons/react/20/solid';\r\nimport React, { Fragment, useState } from 'react';\r\nimport { uniqBy } from '../../utils/utils';\r\nimport DropdownOption from '../CountersLabels/DropdownOption';\r\n\r\nexport default function Labels({\r\n  currentLabels,\r\n  labelsOptions,\r\n  labelsChanged,\r\n  title = 'Labels',\r\n}: {\r\n  currentLabels: string[];\r\n  labelsOptions: string[];\r\n  labelsChanged: (labels: string[]) => void;\r\n  title?: string;\r\n}) {\r\n  const [selectedLabels, setSelectedLabels] = useState(\r\n    currentLabels as string[]\r\n  );\r\n\r\n  const handleChange = (newLabels: string[]) => {\r\n    setSelectedLabels(newLabels);\r\n    labelsChanged(newLabels);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <p className=\"text-xl text-gray-500 dark:text-white mb-1\">{title}</p>\r\n      <Listbox value={selectedLabels} onChange={handleChange} multiple>\r\n        <div className=\"relative\">\r\n          <Listbox.Button className=\"relative rounded-lg bg-gray-600 dark:bg-[#272535] py-2 pl-3 pr-10 text-left shadow-md focus:outline-none focus-visible:border-indigo-500 focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75 focus-visible:ring-offset-2 focus-visible:ring-offset-orange-300 sm:text-sm\">\r\n            <span className=\"block truncate lowercase first-letter:uppercase text-white\">\r\n              {selectedLabels.length === 0\r\n                ? 'Select'\r\n                : `${selectedLabels.length} labels selected`}\r\n            </span>\r\n            <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\r\n              <ChevronUpDownIcon\r\n                className=\"h-5 w-5 text-gray-400\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            </span>\r\n          </Listbox.Button>\r\n          <Transition\r\n            as={Fragment}\r\n            leave=\"transition ease-in duration-100\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Listbox.Options className=\"fixed mt-1 z-10 max-h-60 scrollbar-thin scrollbar-thumb-[#747189] scrollbar-track-[#272533] overflow-y-scroll scrollbar-thumb-rounded-full scrollbar-track-rounded-full rounded-md bg-gray-600 dark:bg-[#272533] py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\r\n              {uniqBy(labelsOptions, (key) => key).map((key) => (\r\n                <DropdownOption key={key} label={key} value={key} />\r\n              ))}\r\n            </Listbox.Options>\r\n          </Transition>\r\n        </div>\r\n      </Listbox>\r\n    </div>\r\n  );\r\n}\r\n","import { Popover, Transition } from '@headlessui/react';\r\nimport { ChevronDownIcon } from '@heroicons/react/20/solid';\r\nimport React, { Fragment } from 'react';\r\nimport {\r\n  CalculationConfiguration,\r\n  CountersConfigurations,\r\n  CounterType,\r\n  MetadataKeyValue,\r\n} from '../types/customizeBarTypes';\r\nimport KeyValueSingleSelect from './CountersLabels/KeyValueSingleSelect';\r\nimport Counters from './CustomizeTab/Counters';\r\nimport Labels from './CustomizeTab/Labels';\r\n\r\nexport default function CustomizeTab({\r\n  currentCounters,\r\n  selectedLabels,\r\n  countersConfigurations,\r\n  calculationsConfigurations,\r\n  labelsOptions,\r\n  countersChanged,\r\n  labelsChanged,\r\n  currentColorsAxis,\r\n  selectedSizeAxis,\r\n  colorsAxisChanged,\r\n  sizeAxisChanged,\r\n}: {\r\n  currentCounters: CounterType[];\r\n  selectedLabels: string[];\r\n  countersConfigurations: CountersConfigurations;\r\n  calculationsConfigurations: CalculationConfiguration[];\r\n  labelsOptions: string[];\r\n  countersChanged: (counters: CounterType[]) => void;\r\n  labelsChanged: (labels: string[]) => void;\r\n  currentColorsAxis: CounterType[];\r\n  selectedSizeAxis: MetadataKeyValue | null;\r\n  colorsAxisChanged: (counters: CounterType[]) => void;\r\n  sizeAxisChanged: (metadataKeyValue: MetadataKeyValue) => void;\r\n}) {\r\n  return (\r\n    <div className=\"max-w-sm\">\r\n      <Popover className=\"relative\">\r\n        {({ open }) => (\r\n          <>\r\n            <Popover.Button\r\n              className={`\r\n                ${open ? '' : 'text-opacity-90'}\r\n                group inline-flex items-center rounded-md px-3 py-2 text-base font-medium text-gray-500 dark:text-white hover:text-opacity-100 focus:outline-none `}\r\n            >\r\n              <span>Customize</span>\r\n              <ChevronDownIcon\r\n                className={`${open ? '' : 'text-opacity-70'}\r\n                  ml-2 h-5 w-5 text-blue-700 transition duration-150 ease-in-out group-hover:text-opacity-80`}\r\n                aria-hidden=\"true\"\r\n              />\r\n            </Popover.Button>\r\n            <Transition\r\n              as={Fragment}\r\n              enter=\"transition ease-out duration-200\"\r\n              enterFrom=\"opacity-0 translate-y-1\"\r\n              enterTo=\"opacity-100 translate-y-0\"\r\n              leave=\"transition ease-in duration-150\"\r\n              leaveFrom=\"opacity-100 translate-y-0\"\r\n              leaveTo=\"opacity-0 translate-y-1\"\r\n            >\r\n              <Popover.Panel\r\n                tabIndex={0}\r\n                className=\"absolute z-10 mt-3 w-screen max-w-sm transform lg:max-w-4xl\"\r\n              >\r\n                <div className=\"overflow-hidden rounded-lg shadow-lg ring-1 ring-gray-500 dark:ring-black ring-opacity-5\">\r\n                  <div className=\"relative bg-white dark:bg-[#1D1C27] p-5 max-h-[85vh] text-gray-500 dark:text-white\">\r\n                    <div className=\"w-full\">\r\n                      <p className=\"text-xl mb-1\">Size Axis</p>\r\n                      <KeyValueSingleSelect\r\n                        metadataKeyValue={selectedSizeAxis}\r\n                        placeholder=\"Select\"\r\n                        countersConfigurations={countersConfigurations}\r\n                        selectedMetadataKeyValueChange={sizeAxisChanged}\r\n                      />\r\n                    </div>\r\n                    <div className=\"w-full mt-2\">\r\n                      <Counters\r\n                        countersConfigurations={countersConfigurations}\r\n                        calculationsConfigurations={calculationsConfigurations.filter(\r\n                          (calc) => calc.type === 'percentage'\r\n                        )}\r\n                        currentCounters={currentColorsAxis}\r\n                        countersChanged={colorsAxisChanged}\r\n                        addCounterText=\"Add axis\"\r\n                        title=\"Color Axis\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"w-full mt-2\">\r\n                      <Counters\r\n                        countersConfigurations={countersConfigurations}\r\n                        calculationsConfigurations={calculationsConfigurations}\r\n                        currentCounters={currentCounters}\r\n                        countersChanged={countersChanged}\r\n                        addCounterText=\"Add counter\"\r\n                        title=\"Counters\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"w-full mt-2\">\r\n                      <Labels\r\n                        currentLabels={selectedLabels}\r\n                        labelsOptions={labelsOptions.sort()}\r\n                        labelsChanged={labelsChanged}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Popover.Panel>\r\n            </Transition>\r\n          </>\r\n        )}\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  format,\r\n  subMonths,\r\n  addMonths,\r\n  subYears,\r\n  addYears,\r\n  isEqual,\r\n  getDaysInMonth,\r\n  getDay,\r\n} from 'date-fns';\r\nimport React from 'react';\r\n\r\ntype DatepickerType = 'date' | 'month' | 'year';\r\n\r\nexport default function Datepicker({\r\n  selectedDate,\r\n  dateChanged,\r\n  placeholder = 'Select Date',\r\n}: {\r\n  selectedDate: Date | null;\r\n  placeholder?: string;\r\n  dateChanged: (date: Date) => void;\r\n}) {\r\n  const DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  const [dayCount, setDayCount] = useState<Array<number>>([]);\r\n  const [blankDays, setBlankDays] = useState<Array<number>>([]);\r\n  const [showDatepicker, setShowDatepicker] = useState(false);\r\n  const [datepickerHeaderDate, setDatepickerHeaderDate] = useState(new Date());\r\n  const [type, setType] = useState<DatepickerType>('date');\r\n\r\n  const decrement = () => {\r\n    switch (type) {\r\n      case 'date':\r\n        setDatepickerHeaderDate((prev) => subMonths(prev, 1));\r\n        break;\r\n      case 'month':\r\n        setDatepickerHeaderDate((prev) => subYears(prev, 1));\r\n        break;\r\n      case 'year':\r\n        setDatepickerHeaderDate((prev) => subMonths(prev, 1));\r\n        break;\r\n    }\r\n  };\r\n\r\n  const increment = () => {\r\n    switch (type) {\r\n      case 'date':\r\n        setDatepickerHeaderDate((prev) => addMonths(prev, 1));\r\n        break;\r\n      case 'month':\r\n        setDatepickerHeaderDate((prev) => addYears(prev, 1));\r\n        break;\r\n      case 'year':\r\n        setDatepickerHeaderDate((prev) => subMonths(prev, 1));\r\n        break;\r\n    }\r\n  };\r\n\r\n  const isToday = (date: number) =>\r\n    selectedDate &&\r\n    isEqual(\r\n      new Date(selectedDate.getFullYear(), selectedDate.getMonth(), date),\r\n      selectedDate\r\n    );\r\n\r\n  const setDateValue = (date: number) => () => {\r\n    dateChanged(\r\n      new Date(\r\n        datepickerHeaderDate.getFullYear(),\r\n        datepickerHeaderDate.getMonth(),\r\n        date\r\n      )\r\n    );\r\n    setShowDatepicker(false);\r\n  };\r\n\r\n  const getDayCount = (date: Date) => {\r\n    let daysInMonth = getDaysInMonth(date);\r\n\r\n    // find where to start calendar day of week\r\n    let dayOfWeek = getDay(new Date(date.getFullYear(), date.getMonth(), 1));\r\n    let blankDaysArray = [];\r\n    for (let i = 1; i <= dayOfWeek; i++) {\r\n      blankDaysArray.push(i);\r\n    }\r\n\r\n    let daysArray = [];\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      daysArray.push(i);\r\n    }\r\n\r\n    setBlankDays(blankDaysArray);\r\n    setDayCount(daysArray);\r\n  };\r\n\r\n  const isSelectedMonth = (month: number) =>\r\n    selectedDate &&\r\n    isEqual(\r\n      new Date(selectedDate.getFullYear(), month, selectedDate.getDate()),\r\n      selectedDate\r\n    );\r\n\r\n  const setMonthValue = (month: number) => () => {\r\n    setDatepickerHeaderDate(\r\n      new Date(\r\n        datepickerHeaderDate.getFullYear(),\r\n        month,\r\n        datepickerHeaderDate.getDate()\r\n      )\r\n    );\r\n    setType('date');\r\n  };\r\n\r\n  const toggleDatepicker = () => setShowDatepicker((prev) => !prev);\r\n\r\n  const showMonthPicker = () => setType('month');\r\n\r\n  const showYearPicker = () => setType('date');\r\n\r\n  useEffect(() => {\r\n    getDayCount(datepickerHeaderDate);\r\n  }, [datepickerHeaderDate]);\r\n\r\n  return (\r\n    <div className=\"mb-5 w-64\">\r\n      <label\r\n        htmlFor=\"datepicker\"\r\n        className=\"font-bold mb-1 text-gray-500 dark:text-white block\"\r\n      >\r\n        {placeholder}\r\n      </label>\r\n      <div className=\"relative\">\r\n        <input type=\"hidden\" name=\"date\" />\r\n        <input\r\n          type=\"text\"\r\n          readOnly\r\n          className=\"cursor-pointer w-full pl-4 pr-10 py-3 leading-none rounded-lg shadow-sm focus:outline-none focus:shadow-outline bg-gray-300 dark:bg-[#2C293D] text-gray-600 dark:text-white font-medium\"\r\n          placeholder=\"Select date\"\r\n          value={selectedDate ? format(selectedDate, 'dd/MM/yyyy') : ''}\r\n          onClick={toggleDatepicker}\r\n        />\r\n        <div\r\n          className=\"cursor-pointer absolute top-0 right-0 px-3 py-2\"\r\n          onClick={toggleDatepicker}\r\n        >\r\n          <svg\r\n            className=\"h-6 w-6 text-gray-600 dark:text-gray-300\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        {showDatepicker && (\r\n          <div\r\n            className=\"bg-gray-300 dark:bg-[#272535] mt-1 rounded-lg shadow p-4 fixed z-10 overflow-auto\"\r\n            style={{ width: '16rem' }}\r\n          >\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-400 hover:text-gray-900 dark:hover:bg-gray-200 dark:hover:text-gray-700 p-1 rounded-full\"\r\n                  onClick={decrement}\r\n                >\r\n                  <svg\r\n                    className=\"h-6 w-6 text-gray-500 dark:text-gray-300 hover:text-gray-700 inline-flex\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M15 19l-7-7 7-7\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              {type === 'date' && (\r\n                <div\r\n                  onClick={showMonthPicker}\r\n                  className=\"flex-grow p-1 text-lg font-bold text-gray-400 dark:text-gray-200 cursor-pointer hover:bg-gray-400 dark:hover:bg-gray-200 hover:text-gray-700 rounded-lg\"\r\n                >\r\n                  <p className=\"text-center\">\r\n                    {format(datepickerHeaderDate, 'MMMM')}\r\n                  </p>\r\n                </div>\r\n              )}\r\n              <div\r\n                onClick={showYearPicker}\r\n                className=\"flex-grow p-1 text-lg font-bold text-gray-400 dark:text-gray-200 cursor-pointer hover:bg-gray-400 dark:hover:bg-gray-200 hover:text-gray-700 rounded-lg\"\r\n              >\r\n                <p className=\"text-center\">\r\n                  {format(datepickerHeaderDate, 'yyyy')}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-400 dark:hover:bg-gray-200 hover:text-gray-700 p-1 rounded-full\"\r\n                  onClick={increment}\r\n                >\r\n                  <svg\r\n                    className=\"h-6 w-6 text-gray-500 dark:text-gray-300 hover:text-gray-700 inline-flex\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M9 5l7 7-7 7\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {type === 'date' && (\r\n              <>\r\n                <div className=\"flex flex-wrap mb-3 -mx-1\">\r\n                  {DAYS.map((day, i) => (\r\n                    <div key={i} style={{ width: '14.26%' }} className=\"px-1\">\r\n                      <div className=\"text-gray-400 font-medium text-center text-xs\">\r\n                        {day}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"flex flex-wrap -mx-1\">\r\n                  {blankDays.map((_, i) => (\r\n                    <div\r\n                      key={i}\r\n                      style={{ width: '14.26%' }}\r\n                      className=\"text-center border p-1 border-transparent text-sm\"\r\n                    ></div>\r\n                  ))}\r\n                  {dayCount.map((d, i) => (\r\n                    <div\r\n                      key={i}\r\n                      style={{ width: '14.26%' }}\r\n                      className=\"px-1 mb-1\"\r\n                    >\r\n                      <div\r\n                        onClick={setDateValue(d)}\r\n                        className={`cursor-pointer text-center text-sm rounded-full leading-loose transition ease-in-out duration-100 ${\r\n                          isToday(d)\r\n                            ? 'bg-blue-500 text-gray-300 dark:text-white'\r\n                            : 'text-gray-400 dark:text-gray-200 hover:bg-blue-200'\r\n                        }`}\r\n                      >\r\n                        {d}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </>\r\n            )}\r\n            {type === 'month' && (\r\n              <div className=\"flex flex-wrap -mx-1\">\r\n                {Array(12)\r\n                  .fill(null)\r\n                  .map((_, i) => (\r\n                    <div\r\n                      key={i}\r\n                      onClick={setMonthValue(i)}\r\n                      style={{ width: '25%' }}\r\n                    >\r\n                      <div\r\n                        className={`cursor-pointer p-5 font-semibold text-center text-sm rounded-lg hover:bg-gray-200 hover:text-gray-700 ${\r\n                          isSelectedMonth(i)\r\n                            ? 'bg-blue-500 text-gray-500 dark:text-white'\r\n                            : 'text-gray-600 dark:text-gray-200 hover:bg-blue-200'\r\n                        }`}\r\n                      >\r\n                        {format(\r\n                          new Date(\r\n                            datepickerHeaderDate.getFullYear(),\r\n                            i,\r\n                            datepickerHeaderDate.getDate()\r\n                          ),\r\n                          'MMM'\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            )}{' '}\r\n            {/* {type === \"year\" && (\r\n                      <Datepicker\r\n                        datepickerHeaderDate={datepickerHeaderDate}\r\n                        selectedDate={selectedDate}\r\n                        setSelectedDate={setSelectedDate}\r\n                        closeDatepicker={() => setShowDatepicker(false)}\r\n                      />\r\n                    )} */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Popover, Transition } from '@headlessui/react';\r\nimport {\r\n  CalendarDaysIcon,\r\n  ChevronDownIcon,\r\n  XMarkIcon,\r\n} from '@heroicons/react/20/solid';\r\nimport React, { Fragment } from 'react';\r\nimport Datepicker from './CustomizeTab/Datepicker';\r\n\r\nexport default function DatesFilters({\r\n  fromDate,\r\n  toDate,\r\n  fromDateChanged,\r\n  toDateChanged,\r\n  trendPeriods,\r\n  trendPeriodsChanged,\r\n}: {\r\n  fromDate: Date | null;\r\n  toDate: Date | null;\r\n  fromDateChanged: (date: Date | null) => void;\r\n  toDateChanged: (date: Date | null) => void;\r\n  trendPeriods?: number;\r\n  trendPeriodsChanged?: (index: number) => void;\r\n}) {\r\n  return (\r\n    <Popover className=\"relative\">\r\n      {({ open }) => (\r\n        <>\r\n          <Popover.Button\r\n            className={`\r\n                ${open ? '' : 'text-opacity-90'}\r\n                group inline-flex items-center rounded-md px-3 py-2 text-base font-medium text-gray-500 dark:text-white hover:text-opacity-100 focus:outline-none `}\r\n          >\r\n            <CalendarDaysIcon className=\"h-7 w-7\" />\r\n            <ChevronDownIcon\r\n              className={`${open ? '' : 'text-opacity-70'}\r\n                  ml-2 h-5 w-5 text-blue-700 transition duration-150 ease-in-out group-hover:text-opacity-80`}\r\n              aria-hidden=\"true\"\r\n            />\r\n          </Popover.Button>\r\n          <Transition\r\n            as={Fragment}\r\n            enter=\"transition ease-out duration-200\"\r\n            enterFrom=\"opacity-0 translate-y-1\"\r\n            enterTo=\"opacity-100 translate-y-0\"\r\n            leave=\"transition ease-in duration-150\"\r\n            leaveFrom=\"opacity-100 translate-y-0\"\r\n            leaveTo=\"opacity-0 translate-y-1\"\r\n          >\r\n            <Popover.Panel\r\n              tabIndex={0}\r\n              className=\"absolute z-10 mt-3 transform max-w-md\"\r\n            >\r\n              <div className=\"overflow-hidden rounded-lg shadow-lg ring-1 ring-gray-500 dark:ring-black ring-opacity-5\">\r\n                <div className=\"relative bg-white dark:bg-[#272535] p-5\">\r\n                  <div className=\"w-full\">\r\n                    <div className=\"flex flex-wrap w-full mt-3 justify-between\">\r\n                      <div className=\"flex items-center\">\r\n                        <Datepicker\r\n                          selectedDate={fromDate}\r\n                          dateChanged={fromDateChanged}\r\n                          placeholder=\"From\"\r\n                        />\r\n                        <div className=\"ml-1\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => fromDateChanged(null)}\r\n                          >\r\n                            <XMarkIcon className=\"h-4 w-4 text-gray-500 dark:text-gray-200 hover:scale-125 transition duration-100 ease-linear\" />\r\n                            <span className=\"sr-only\">Clear dates filters</span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center\">\r\n                        <Datepicker\r\n                          selectedDate={toDate}\r\n                          dateChanged={toDateChanged}\r\n                          placeholder=\"To\"\r\n                        />\r\n                        <div className=\"ml-1\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => toDateChanged(null)}\r\n                          >\r\n                            <XMarkIcon className=\"h-4 w-4 text-gray-200 hover:scale-125 transition duration-100 ease-linear\" />\r\n                            <span className=\"sr-only\">Clear dates filters</span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      {trendPeriods !== undefined && trendPeriodsChanged && (\r\n                        <div className=\"flex items-center\">\r\n                          <div>\r\n                            <label\r\n                              htmlFor=\"small-input\"\r\n                              className=\"block mb-2 text-sm font-medium text-gray-500 dark:text-gray-300\"\r\n                            >\r\n                              Trend periods amount\r\n                            </label>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"small-input\"\r\n                              onChange={(e) =>\r\n                                trendPeriodsChanged(Number(e.target.value))\r\n                              }\r\n                              value={trendPeriods}\r\n                              className=\"block p-2 w-1/2 rounded-lg border sm:text-xs bg-gray-300 dark:bg-gray-700 border-gray-300 dark:border-gray-600 placeholder-gray-700 dark:placeholder-gray-400 text-gray-500 dark:text-white focus:ring-blue-500 focus:border-blue-500\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Popover.Panel>\r\n          </Transition>\r\n        </>\r\n      )}\r\n    </Popover>\r\n  );\r\n}\r\n","import { Dialog, RadioGroup, Switch, Transition } from '@headlessui/react';\r\nimport React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport { NodeType } from '../types/componentsInputs';\r\n\r\nexport default function ItemActions({\r\n  node,\r\n  searchSimilarClusters,\r\n  splitPhrase,\r\n  mergeClusters,\r\n  translationEnabled,\r\n}: {\r\n  node: { type: NodeType; id: string; text: string } | null;\r\n  searchSimilarClusters?: (\r\n    text: string,\r\n    controller: AbortController\r\n  ) => Promise<\r\n    { id: string; text: string; translation: string | null | undefined }[]\r\n  >;\r\n  splitPhrase?: (\r\n    phraseId: string,\r\n    controller: AbortController\r\n  ) => Promise<{ status: 'Success' | 'error'; message: string }>;\r\n  mergeClusters?: (\r\n    source: string[],\r\n    destination: string,\r\n    controller: AbortController\r\n  ) => Promise<{ status: 'Success' | 'error'; message: string }>;\r\n  translationEnabled: boolean;\r\n}) {\r\n  const controller = useRef(null as AbortController | null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [action, setAction] = useState(null as 'Split' | 'Merge' | null);\r\n  const [similarClusters, setSimilarClusters] = useState(\r\n    null as\r\n      | { id: string; text: string; translation: string | null | undefined }[]\r\n      | null\r\n  );\r\n  const [selectedClusters, setSelectedClusters] = useState(\r\n    null as string[] | null\r\n  );\r\n  const [searchText, setSearchText] = useState(null as string | null);\r\n  const [error, setError] = useState(null as string | null);\r\n  const [mergeTo, setMergeTo] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!node || !searchSimilarClusters) return;\r\n    if (node.type === 'Cluster') {\r\n      setAction('Merge');\r\n      setSearchText('');\r\n    } else if (node.type === 'Phrase') {\r\n      setAction('Split');\r\n    }\r\n    setIsOpen(true);\r\n  }, [node]);\r\n\r\n  useEffect(() => {\r\n    if (controller.current && !isOpen) controller.current.abort();\r\n    if (!isOpen) {\r\n      setError(null);\r\n      setLoading(false);\r\n      setAction(null);\r\n      setSimilarClusters(null);\r\n      setSelectedClusters(null);\r\n      setSearchText(null);\r\n      controller.current = new AbortController();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (searchText === null || !node || !searchSimilarClusters) return;\r\n    const fetchData = async (controller: AbortController) => {\r\n      try {\r\n        setLoading(true);\r\n        const res = await searchSimilarClusters(\r\n          searchText === '' ? node.text : searchText,\r\n          controller\r\n        );\r\n        setSimilarClusters(res);\r\n      } catch (e) {\r\n        console.error(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const currentController = new AbortController();\r\n    fetchData(currentController).catch((e) => {\r\n      console.error(e);\r\n    });\r\n\r\n    return () => {\r\n      currentController.abort();\r\n    };\r\n  }, [searchText, node, searchSimilarClusters]);\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n    setSelectedClusters(null);\r\n    setMergeTo(false);\r\n    setSearchText(null);\r\n    setError(null);\r\n    setLoading(false);\r\n    setSimilarClusters(null);\r\n    setAction(null);\r\n  }\r\n\r\n  async function invokeAction() {\r\n    if (!splitPhrase || !mergeClusters || !controller.current || !node)\r\n      return closeModal();\r\n    setError(null);\r\n    setLoading(true);\r\n    if (action === 'Split') {\r\n      const res = await splitPhrase(node.id, controller.current);\r\n      if (res.message) {\r\n        setError(res.message);\r\n      } else {\r\n        closeModal();\r\n      }\r\n    } else {\r\n      const firstSelectedCluster = selectedClusters?.at(0);\r\n      if (\r\n        selectedClusters &&\r\n        selectedClusters.length > 0 &&\r\n        firstSelectedCluster\r\n      ) {\r\n        let res;\r\n        if (mergeTo) {\r\n          res = await mergeClusters(\r\n            [node.id],\r\n            firstSelectedCluster,\r\n            controller.current\r\n          );\r\n        } else {\r\n          res = await mergeClusters(\r\n            selectedClusters,\r\n            node.id,\r\n            controller.current\r\n          );\r\n        }\r\n\r\n        if (res && res.message) {\r\n          setError(res.message);\r\n        } else {\r\n          closeModal();\r\n        }\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  function clusterSelected(clusterId: string, selected: boolean) {\r\n    if (selected)\r\n      return setSelectedClusters(\r\n        (current) => current?.filter((c) => c !== clusterId) ?? []\r\n      );\r\n\r\n    if (mergeTo) {\r\n      return setSelectedClusters([clusterId]);\r\n    }\r\n\r\n    return setSelectedClusters((selected) => {\r\n      return [...(selected ?? []), clusterId];\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Transition appear show={isOpen} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-10\" onClose={closeModal}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-opacity-25\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-[#272535] p-6 text-left align-middle shadow-xl transition-all\">\r\n                <Dialog.Title\r\n                  as=\"h3\"\r\n                  className=\"text-center text-lg font-medium leading-6 text-gray-900 dark:text-white\"\r\n                >\r\n                  {action === 'Merge' ? (\r\n                    <div>Merging:</div>\r\n                  ) : (\r\n                    <span>Split to a new cluster:</span>\r\n                  )}\r\n                  <span className=\"group relative flex w-full\">\r\n                    \"<span className=\"truncate\">{node?.text}</span>\"\r\n                    <span className=\"absolute hidden group-hover:flex -left-5 -translate-y-full px-2 py-1 bg-gray-700 rounded-lg text-center text-white text-sm after:content-[''] after:absolute after:left-1/2 after:top-[100%] after:-translate-x-1/2 after:border-8 after:border-x-transparent after:border-b-transparent after:border-t-gray-700\">\r\n                      {node?.text}\r\n                    </span>\r\n                  </span>\r\n                </Dialog.Title>\r\n                {error && (\r\n                  <p\r\n                    id=\"filled_error_help\"\r\n                    className=\"mt-2 text-xs text-red-600 dark:text-red-400\"\r\n                  >\r\n                    <span className=\"font-medium\">Oh, snapp!</span> {error}\r\n                  </p>\r\n                )}\r\n                {searchText !== null ? (\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={searchText}\r\n                      onChange={(e) => setSearchText(e.target.value)}\r\n                      id=\"search\"\r\n                      className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                      placeholder=\"Search for clusters\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n                {action === 'Merge' ? (\r\n                  <div className=\"flex w-full mt-1 items-center align-middle justify-center\">\r\n                    <span\r\n                      className={`mr-1 ${\r\n                        mergeTo ? 'text-gray-400 ' : 'text-white'\r\n                      }`}\r\n                    >\r\n                      Merge From\r\n                    </span>\r\n                    <Switch\r\n                      checked={mergeTo}\r\n                      onChange={() =>\r\n                        setMergeTo((state) => {\r\n                          setSelectedClusters([]);\r\n                          return !state;\r\n                        })\r\n                      }\r\n                      className={`${mergeTo ? 'bg-teal-900' : 'bg-teal-700'}\r\n          relative inline-flex h-[38px] w-[74px] shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus-visible:ring-2  focus-visible:ring-white focus-visible:ring-opacity-75`}\r\n                    >\r\n                      <span className=\"sr-only\">Use setting</span>\r\n                      <span\r\n                        aria-hidden=\"true\"\r\n                        className={`${\r\n                          mergeTo ? 'translate-x-9' : 'translate-x-0'\r\n                        }\r\n            pointer-events-none inline-block h-[34px] w-[34px] transform rounded-full bg-white shadow-lg ring-0 transition duration-200 ease-in-out`}\r\n                      />\r\n                    </Switch>\r\n                    <span\r\n                      className={`ml-1 ${\r\n                        mergeTo ? 'text-white ' : 'text-gray-400'\r\n                      }`}\r\n                    >\r\n                      Merge To\r\n                    </span>\r\n                  </div>\r\n                ) : null}\r\n                {loading ? (\r\n                  <div className=\"grow w-full justify-center items-center flex mt-2\">\r\n                    <div className=\"text-center\">\r\n                      <div role=\"status\">\r\n                        <svg\r\n                          className=\"inline mr-2 w-8 h-8 text-gray-200 animate-spin fill-blue-600\"\r\n                          viewBox=\"0 0 100 101\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                          <path\r\n                            d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n                            fill=\"currentColor\"\r\n                          />\r\n                          <path\r\n                            d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n                            fill=\"currentFill\"\r\n                          />\r\n                        </svg>\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  similarClusters && (\r\n                    <div className=\"overflow-y-auto max-h-64 mt-2\">\r\n                      <ClustersList\r\n                        clusters={similarClusters.filter(\r\n                          (c) => c.id.toString() !== node?.id\r\n                        )}\r\n                        selected={selectedClusters}\r\n                        clusterSelected={clusterSelected}\r\n                        translationEnabled={translationEnabled}\r\n                      />\r\n                    </div>\r\n                  )\r\n                )}\r\n\r\n                <div className=\"mt-4 flex justify-between\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-center w-1/3 rounded-md border border-transparent bg-green-100 px-4 py-2 text-sm font-medium text-green-900 hover:bg-green-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-green-500 focus-visible:ring-offset-2\"\r\n                    onClick={invokeAction}\r\n                    disabled={\r\n                      loading || (action === 'Merge' && !selectedClusters)\r\n                    }\r\n                  >\r\n                    {action}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-center w-1/3 rounded-md border border-transparent bg-blue-100 px-4 py-2 text-sm font-medium text-blue-900 hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\r\n                    onClick={closeModal}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n}\r\n\r\nfunction ClustersList({\r\n  clusters,\r\n  selected,\r\n  clusterSelected,\r\n  translationEnabled,\r\n}: {\r\n  clusters: {\r\n    id: string;\r\n    text: string;\r\n    translation: string | null | undefined;\r\n  }[];\r\n  selected: string[] | null;\r\n  clusterSelected: (cluster: string, selected: boolean) => void;\r\n  translationEnabled: boolean;\r\n}) {\r\n  return (\r\n    <div className=\"w-full pr-1 py-2\">\r\n      <div className=\"mx-auto w-full max-w-md\">\r\n        <RadioGroup>\r\n          <RadioGroup.Label className=\"sr-only\">\r\n            Select Destination Cluster\r\n          </RadioGroup.Label>\r\n          <div className=\"space-y-2\">\r\n            {clusters.map((cluster) => {\r\n              const checked = selected?.some((c) => c === cluster.id) ?? false;\r\n              return (\r\n                <RadioGroup.Option\r\n                  key={cluster.id}\r\n                  value={cluster}\r\n                  onClick={() => clusterSelected(cluster.id, checked)}\r\n                  className={`\r\n                  ${\r\n                    checked ? 'bg-sky-900 bg-opacity-75 text-white' : 'bg-white'\r\n                  }\r\n                    relative flex cursor-pointer rounded-lg px-5 py-4 shadow-md focus:outline-none`}\r\n                >\r\n                  <div className=\"flex w-full items-center justify-between\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"text-sm\">\r\n                        <RadioGroup.Label\r\n                          as=\"p\"\r\n                          className={`font-medium  ${\r\n                            checked ? 'text-white' : 'text-gray-900'\r\n                          }`}\r\n                        >\r\n                          {translationEnabled && cluster.translation\r\n                            ? cluster.translation\r\n                            : cluster.text}\r\n                        </RadioGroup.Label>\r\n                      </div>\r\n                    </div>\r\n                    {checked && (\r\n                      <div className=\"shrink-0 text-white\">\r\n                        <CheckIcon className=\"h-6 w-6\" />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </RadioGroup.Option>\r\n              );\r\n            })}\r\n          </div>\r\n        </RadioGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CheckIcon(\r\n  props: JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>\r\n) {\r\n  return (\r\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\r\n      <circle cx={12} cy={12} r={12} fill=\"#fff\" opacity=\"0.2\" />\r\n      <path\r\n        d=\"M7 13l3 3 7-7\"\r\n        stroke=\"#fff\"\r\n        strokeWidth={1.5}\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import { CountersConfigurations } from '../types/customizeBarTypes';\r\nimport {\r\n  FaceFrownIcon,\r\n  FaceSmileIcon,\r\n  UserIcon,\r\n  HandThumbDownIcon,\r\n  HandThumbUpIcon,\r\n  GlobeAltIcon,\r\n  BuildingOffice2Icon,\r\n  MapPinIcon,\r\n  UsersIcon,\r\n  ScaleIcon,\r\n  CalendarIcon,\r\n  HeartIcon,\r\n  KeyIcon,\r\n} from '@heroicons/react/24/outline';\r\nimport React from 'react';\r\nimport { FilmIcon, HashtagIcon } from '@heroicons/react/20/solid';\r\n\r\nexport const defaultCountersConfigurations: CountersConfigurations = {\r\n  signals: {\r\n    display: {\r\n      color: 'white',\r\n      icon: (\r\n        <span className=\"flex flex-col\" style={{ height: '1em' }}>\r\n          <HandThumbUpIcon />\r\n          <HandThumbDownIcon />\r\n        </span>\r\n      ),\r\n    },\r\n    items: [\r\n      {\r\n        label: 'positive',\r\n        display: {\r\n          color: 'green',\r\n          icon: <FaceSmileIcon />,\r\n        },\r\n        members: [\r\n          { metadataName: 'emotion', values: ['happiness'] },\r\n          { metadataName: 'sentiment', values: ['POS'] },\r\n        ],\r\n        isGroup: true,\r\n      },\r\n      {\r\n        label: 'negative',\r\n        display: {\r\n          color: 'red',\r\n          icon: <FaceFrownIcon />,\r\n        },\r\n        members: [\r\n          { metadataName: 'emotion', values: ['anger', 'sadness'] },\r\n          { metadataName: 'sentiment', values: ['NEG'] },\r\n        ],\r\n        isGroup: true,\r\n      },\r\n    ],\r\n  },\r\n  person: {\r\n    display: {\r\n      color: 'white',\r\n      icon: <UserIcon />,\r\n    },\r\n  },\r\n  topic: {\r\n    display: {\r\n      color: 'white',\r\n      icon: <HashtagIcon />,\r\n    },\r\n  },\r\n  keyword: {\r\n    display: {\r\n      color: 'white',\r\n      icon: <KeyIcon />,\r\n    },\r\n  },\r\n  geo: {\r\n    display: {\r\n      color: 'white',\r\n      icon: <GlobeAltIcon />,\r\n    },\r\n  },\r\n  org: {\r\n    display: {\r\n      color: 'white',\r\n      icon: <BuildingOffice2Icon />,\r\n    },\r\n  },\r\n  location: {\r\n    display: {\r\n      color: 'white',\r\n      icon: <MapPinIcon />,\r\n    },\r\n  },\r\n  groups: {\r\n    display: {\r\n      color: 'white',\r\n      icon: <UsersIcon />,\r\n    },\r\n  },\r\n  art: {\r\n    display: {\r\n      color: 'white',\r\n      icon: <FilmIcon />,\r\n    },\r\n  },\r\n  law: {\r\n    display: {\r\n      color: 'white',\r\n      icon: <ScaleIcon />,\r\n    },\r\n  },\r\n  event: {\r\n    display: {\r\n      color: 'white',\r\n      icon: <CalendarIcon />,\r\n    },\r\n  },\r\n  sentiment: {\r\n    display: {\r\n      color: 'white',\r\n      icon: (\r\n        <span className=\"flex flex-col\" style={{ height: '1em' }}>\r\n          <HandThumbUpIcon />\r\n          <HandThumbDownIcon />\r\n        </span>\r\n      ),\r\n    },\r\n    items: [\r\n      {\r\n        label: 'POS',\r\n        display: {\r\n          color: 'green',\r\n          icon: <HandThumbUpIcon />,\r\n        },\r\n      },\r\n      {\r\n        label: 'NEG',\r\n        display: {\r\n          color: 'red',\r\n          icon: <HandThumbDownIcon />,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  emotion: {\r\n    display: {\r\n      color: 'white',\r\n      icon: <HeartIcon />,\r\n    },\r\n    items: [\r\n      {\r\n        label: 'positive',\r\n        display: {\r\n          color: 'green',\r\n          icon: <FaceSmileIcon />,\r\n        },\r\n        members: [{ values: ['happiness'] }],\r\n        isGroup: true,\r\n      },\r\n      {\r\n        label: 'negative',\r\n        display: {\r\n          color: 'red',\r\n          icon: <FaceFrownIcon />,\r\n        },\r\n        members: [{ values: ['anger', 'sadness'] }],\r\n        isGroup: true,\r\n      },\r\n      {\r\n        label: 'happiness',\r\n        display: {\r\n          color: 'green',\r\n          icon: <FaceSmileIcon />,\r\n        },\r\n      },\r\n      {\r\n        label: 'surprise',\r\n        display: {\r\n          color: 'green',\r\n          icon: <FaceSmileIcon />,\r\n        },\r\n      },\r\n      {\r\n        label: 'anger',\r\n        display: {\r\n          color: 'red',\r\n          icon: <FaceFrownIcon />,\r\n        },\r\n      },\r\n      {\r\n        label: 'sadness',\r\n        display: {\r\n          color: 'red',\r\n          icon: <FaceFrownIcon />,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  score: {\r\n    display: {\r\n      color: 'white',\r\n      icon: (\r\n        <span className=\"flex flex-col\" style={{ height: '1em' }}>\r\n          <HandThumbUpIcon />\r\n          <HandThumbDownIcon />\r\n        </span>\r\n      ),\r\n    },\r\n    items: [\r\n      {\r\n        label: '2',\r\n        display: {\r\n          color: 'green',\r\n          icon: <HandThumbUpIcon />,\r\n        },\r\n      },\r\n      {\r\n        label: '1',\r\n        display: {\r\n          color: 'green',\r\n          icon: <HandThumbUpIcon />,\r\n        },\r\n      },\r\n      {\r\n        label: '-1',\r\n        display: {\r\n          color: 'red',\r\n          icon: <HandThumbDownIcon />,\r\n        },\r\n      },\r\n      {\r\n        label: '-2',\r\n        display: {\r\n          color: 'red',\r\n          icon: <HandThumbDownIcon />,\r\n        },\r\n      },\r\n      {\r\n        label: 'positive',\r\n        display: {\r\n          color: 'green',\r\n          icon: <HandThumbUpIcon />,\r\n        },\r\n        members: [{ values: ['1', '2'] }],\r\n        isGroup: true,\r\n      },\r\n      {\r\n        label: 'positive',\r\n        display: {\r\n          color: 'red',\r\n          icon: <HandThumbDownIcon />,\r\n        },\r\n        members: [{ values: ['-1', '-2'] }],\r\n        isGroup: true,\r\n      },\r\n    ],\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nexport function ColorsAxis({\r\n  width,\r\n  colorsConfig,\r\n}: {\r\n  width: number;\r\n  colorsConfig: string[];\r\n}) {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: width,\r\n        opacity: 0.9,\r\n      }}\r\n      className=\"h-full fixed flex flex-col\"\r\n    >\r\n      {colorsConfig.map((colorConfig, i) => (\r\n        <div\r\n          key={i}\r\n          className=\"w-full\"\r\n          style={{\r\n            background: colorConfig,\r\n            height: '4px',\r\n            marginTop: i === 0 ? 'auto' : '1px',\r\n          }}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { EllipsisHorizontalIcon } from '@heroicons/react/24/outline';\r\nimport { extent, scaleBand, scaleLinear } from 'd3';\r\nimport React, { FC, useEffect, useMemo, useState } from 'react';\r\nimport { ColorsAxis } from '../common/components/CountersLabels/ColorsAxis';\r\nimport CounterDisplay from '../common/components/CountersLabels/CounterDisplay';\r\nimport MaxLabelDisplay from '../common/components/CountersLabels/MaxLabelDisplay';\r\nimport { CUSTOM_METADATA_KEY } from '../common/configurations/commonConfigurations';\r\nimport { BarChartProps } from '../common/types/componentsInputs';\r\nimport { totalSumCalculation } from '../common/utils/countersUtils';\r\nimport { getBackgroundColorLayers } from '../common/utils/displayUtils';\r\n\r\nconst BAR_PADDING = 0.1;\r\n\r\nexport const BarChart: FC<BarChartProps> = ({\r\n  dataNodes,\r\n  height,\r\n  width,\r\n  nodeClicked,\r\n  barColor,\r\n  fontFamily,\r\n  textColor,\r\n  counters,\r\n  countersConfiguration,\r\n  labels,\r\n  labelClicked,\r\n  sizeAxis,\r\n  colorAxis,\r\n  translate,\r\n  totalItems,\r\n  nodeActionsClicked,\r\n}) => {\r\n  const [actionsVisible, setActionsVisible] = useState(null as number | null);\r\n  const barsHeight = dataNodes.length * 40;\r\n\r\n  const [groups, setGroups] = useState([] as string[]);\r\n\r\n  useEffect(() => {\r\n    // Y axis is for groups since the barplot is horizontal\r\n    setGroups(\r\n      dataNodes\r\n        .sort((a, b) =>\r\n          sizeAxis?.key === CUSTOM_METADATA_KEY\r\n            ? b.amount - a.amount\r\n            : totalSumCalculation(\r\n                sizeAxis,\r\n                b.metadata,\r\n                b.trends,\r\n                countersConfiguration,\r\n                totalItems\r\n              ).result -\r\n              totalSumCalculation(\r\n                sizeAxis,\r\n                a.metadata,\r\n                b.trends,\r\n                countersConfiguration,\r\n                totalItems\r\n              ).result\r\n        )\r\n        .map((d) => d.text ?? '')\r\n    );\r\n  }, [dataNodes, sizeAxis]);\r\n\r\n  const yScale = useMemo(() => {\r\n    return scaleBand()\r\n      .domain(groups)\r\n      .range([0, barsHeight])\r\n      .padding(BAR_PADDING);\r\n  }, [height, groups]);\r\n\r\n  const max = useMemo(\r\n    () =>\r\n      extent(\r\n        dataNodes.map((d) =>\r\n          sizeAxis?.key === CUSTOM_METADATA_KEY\r\n            ? d.amount\r\n            : totalSumCalculation(\r\n                sizeAxis,\r\n                d.metadata,\r\n                d.trends,\r\n                countersConfiguration,\r\n                totalItems\r\n              ).result\r\n        )\r\n      )[1] ?? 20,\r\n    [dataNodes, sizeAxis]\r\n  );\r\n\r\n  // X axis\r\n  const xScale = useMemo(() => {\r\n    return scaleLinear()\r\n      .domain([0, max || 10])\r\n      .range([0, width]);\r\n  }, [width, max]);\r\n\r\n  // Build the shapes\r\n  const allShapes = dataNodes.map((d, i) => {\r\n    const x = 24;\r\n    const y = yScale(d.text ?? '') ?? 0;\r\n    const result =\r\n      sizeAxis?.key === CUSTOM_METADATA_KEY\r\n        ? d.amount\r\n        : totalSumCalculation(\r\n            sizeAxis,\r\n            d.metadata,\r\n            d.trends,\r\n            countersConfiguration,\r\n            totalItems\r\n          ).result;\r\n    const xWidth =\r\n      xScale(result === max ? result : Math.min(max - 1, result + max * 0.1)) -\r\n      24;\r\n    const barWidth = xWidth > 0 ? xWidth : 0;\r\n    const barHeight = 36;\r\n    const opacity = 1;\r\n    const fill = barColor;\r\n    const fillOpacity = 1;\r\n    const rx = 1;\r\n\r\n    const colorsConfig = getBackgroundColorLayers(\r\n      colorAxis,\r\n      d.metadata,\r\n      d.trends,\r\n      countersConfiguration,\r\n      totalItems\r\n    );\r\n\r\n    return (\r\n      <g key={i}>\r\n        <rect\r\n          x={x}\r\n          y={y}\r\n          width={barWidth}\r\n          height={barHeight}\r\n          opacity={opacity}\r\n          fill={fill}\r\n          fillOpacity={fillOpacity}\r\n          rx={rx}\r\n        />\r\n        <foreignObject\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={barHeight}\r\n          opacity={opacity}\r\n          fill={fill}\r\n          fillOpacity={fillOpacity}\r\n          rx={rx}\r\n        >\r\n          <div\r\n            className=\"h-full w-full\"\r\n            onMouseEnter={() => {\r\n              nodeActionsClicked(d);\r\n              setActionsVisible(i);\r\n            }}\r\n            onMouseLeave={() => {\r\n              setActionsVisible(null);\r\n            }}\r\n          >\r\n            <ColorsAxis width={barWidth} colorsConfig={colorsConfig} />\r\n            <div\r\n              className=\"flex h-full w-full items-center ml-1 relative text-gray-500\"\r\n              style={{\r\n                fontFamily: fontFamily,\r\n                fontWeight: 300,\r\n                fontStyle: 'normal',\r\n                color: textColor,\r\n                fontSize: '14px',\r\n              }}\r\n            >\r\n              <span className=\"flex items-center max-w-[30%] truncate mr-2\">\r\n                {counters\r\n                  .filter((counter) => counter.metadataKeyValue !== null)\r\n                  .map((counter, i) => (\r\n                    <div key={i} className=\"ml-1\">\r\n                      <CounterDisplay\r\n                        counter={counter}\r\n                        countersConfiguration={countersConfiguration}\r\n                        metadata={d.metadata}\r\n                        trends={d.trends}\r\n                        width=\"6ch\"\r\n                        totalItems={totalItems}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n              </span>\r\n              <span\r\n                className=\"truncate w-3/6 hover:text-gray-400 dark:hover:text-gray-300 hover:cursor-pointer\"\r\n                onClick={() => nodeClicked(d)}\r\n                dir=\"auto\"\r\n              >\r\n                {translate &&\r\n                d.item_translated_text !== undefined &&\r\n                d.item_translated_text !== null &&\r\n                d.item_translated_text !== ''\r\n                  ? d.item_translated_text\r\n                  : d.item_original_text}\r\n              </span>\r\n              <span className=\"truncate flex items-center w-2/6 ml-auto\">\r\n                {labels.map((label, i) => (\r\n                  <div key={i}>\r\n                    <MaxLabelDisplay\r\n                      countersConfiguration={countersConfiguration}\r\n                      metadataKey={label}\r\n                      labelClicked={labelClicked}\r\n                      metadata={d.metadata}\r\n                      width=\"15ch\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </span>\r\n              <div\r\n                data-for=\"global-actions\"\r\n                data-tip\r\n                data-event=\"click\"\r\n                className={`self-end mr-1 hover:cursor-pointer hover:text-white ${\r\n                  actionsVisible === i ? 'visible' : 'invisible'\r\n                }`}\r\n              >\r\n                <EllipsisHorizontalIcon className=\"h-4 w-4\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </foreignObject>\r\n      </g>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <svg width={width} height={barsHeight}>\r\n      {allShapes}\r\n    </svg>\r\n  );\r\n};\r\n","import { format, parse } from 'date-fns';\r\nimport React, { FC } from 'react';\r\nimport CounterDisplay from '../common/components/CountersLabels/CounterDisplay';\r\nimport MaxLabelDisplay from '../common/components/CountersLabels/MaxLabelDisplay';\r\nimport { CUSTOM_METADATA_KEY } from '../common/configurations/commonConfigurations';\r\nimport { ItemsDisplayComponentProps } from '../common/types/componentsInputs';\r\nimport { getMetadataKeyValueDisplay } from '../common/utils/displayUtils';\r\n\r\nexport const ItemsListDisplay: FC<ItemsDisplayComponentProps> = ({\r\n  items,\r\n  bgColor,\r\n  textColor,\r\n  counters,\r\n  labels,\r\n  countersConfiguration,\r\n  labelClicked,\r\n  translate,\r\n  totalItems,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"overflow-x-auto text-black bg-[#F7F7F7] dark:bg-[#272535] dark:text-white\"\r\n      style={{ backgroundColor: bgColor, color: textColor }}\r\n    >\r\n      <table className=\"table-auto w-full h-full text-left\">\r\n        <thead className=\"border-b-2 border-b-slate-500\">\r\n          <tr>\r\n            <th className=\"p-1\">Items</th>\r\n            <th className=\"p-1\">Time</th>\r\n            {counters\r\n              .filter(\r\n                (counter) =>\r\n                  counter.metadataKeyValue?.key !== CUSTOM_METADATA_KEY\r\n              )\r\n              .map((counter, i) => (\r\n                <th className=\"p-1 lowercase first-letter:uppercase\" key={i}>\r\n                  {counter.metadataKeyValue\r\n                    ? getMetadataKeyValueDisplay(counter.metadataKeyValue)\r\n                    : ''}\r\n                </th>\r\n              ))}\r\n            {labels.map((label, i) => (\r\n              <th className=\"p-1 lowercase first-letter:uppercase\" key={i}>\r\n                {label}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.map((item, i) => {\r\n            const item_date = parseDate(item.create_date);\r\n            return (\r\n              <tr key={i}>\r\n                <td className=\"max-w-[60ch] truncate p-1\">\r\n                  {translate &&\r\n                  item.item_translated_text !== undefined &&\r\n                  item.item_translated_text !== null &&\r\n                  item.item_translated_text !== ''\r\n                    ? item.item_translated_text\r\n                    : item.original_text}\r\n                </td>\r\n                <td\r\n                  className=\"p-1\"\r\n                  data-for=\"global\"\r\n                  data-tip={item_date}\r\n                  style={{ width: '1em', height: '1em' }}\r\n                >\r\n                  {item_date.split(' ').at(0)}\r\n                </td>\r\n                {counters\r\n                  .filter(\r\n                    (counter) =>\r\n                      counter.metadataKeyValue?.key !== CUSTOM_METADATA_KEY\r\n                  )\r\n                  .map((counter, i) => (\r\n                    <td key={i} className=\"p-1\">\r\n                      <CounterDisplay\r\n                        counter={counter}\r\n                        countersConfiguration={countersConfiguration}\r\n                        metadata={item.metadata}\r\n                        trends={[]}\r\n                        totalItems={totalItems}\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                {labels.map((label, i) => (\r\n                  <td key={i}>\r\n                    <MaxLabelDisplay\r\n                      metadataKey={label}\r\n                      labelClicked={labelClicked}\r\n                      countersConfiguration={countersConfiguration}\r\n                      metadata={item.metadata}\r\n                    />\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction parseDate(date: string | undefined): string {\r\n  if (!date) return '';\r\n\r\n  return format(\r\n    parse(date, 'yyyy-MM-dd HH:mm:ss.SSSSSS', new Date()),\r\n    'dd/MM/yyyy HH:mm'\r\n  );\r\n}\r\n","import { EllipsisHorizontalIcon } from '@heroicons/react/24/outline';\r\nimport { scale, valid } from 'chroma-js';\r\nimport { hierarchy, treemap } from 'd3';\r\nimport React, { FC, useMemo, useState } from 'react';\r\nimport { ColorsAxis } from '../common/components/CountersLabels/ColorsAxis';\r\nimport CountersLabelsDisplay from '../common/components/CountersLabelsDisplay';\r\nimport { CUSTOM_METADATA_KEY } from '../common/configurations/commonConfigurations';\r\nimport { DataNode, TreemapProps } from '../common/types/componentsInputs';\r\nimport { totalSumCalculation } from '../common/utils/countersUtils';\r\nimport { getBackgroundColorLayers } from '../common/utils/displayUtils';\r\nimport { calculateFontSize } from '../common/utils/utils';\r\n\r\ntype TreemapNode = DataNode & { children: TreemapNode[] };\r\n\r\nconst BIG_COLOR_DEFAULT = '#322F46';\r\nconst SMALL_COLOR_DEFAULT = '#2C293D';\r\n\r\nexport const Treemap: FC<TreemapProps> = ({\r\n  dataNodes,\r\n  nodeClicked,\r\n  height,\r\n  width,\r\n  bigColor,\r\n  smallColor,\r\n  countFontSize = 14,\r\n  fontFamily,\r\n  textColor,\r\n  borderWidth = 0,\r\n  borderColor,\r\n  labels,\r\n  counters,\r\n  countersConfiguration,\r\n  labelClicked,\r\n  sizeAxis,\r\n  colorAxis,\r\n  nodeActionsClicked,\r\n  translate,\r\n  totalItems,\r\n}) => {\r\n  const mainNode: TreemapNode = useMemo(() => {\r\n    return {\r\n      id: '',\r\n      children: dataNodes.map((c) => {\r\n        return {\r\n          ...c,\r\n          amount:\r\n            sizeAxis?.key === CUSTOM_METADATA_KEY\r\n              ? c.amount\r\n              : totalSumCalculation(\r\n                  sizeAxis,\r\n                  c.metadata,\r\n                  c.trends,\r\n                  countersConfiguration,\r\n                  totalItems\r\n                ).result,\r\n          children: [],\r\n        };\r\n      }),\r\n      amount: 0,\r\n      metadata: {},\r\n      trends: [],\r\n      type: '',\r\n      properties: {},\r\n    };\r\n  }, [dataNodes, sizeAxis]);\r\n\r\n  const treeHierarchy = useMemo(() => {\r\n    const elementsValues = mainNode.children!.map((item) => item.amount);\r\n    const maxElementValue = Math.max(...elementsValues);\r\n    const elementsSum = elementsValues.reduce(\r\n      (a: number, b: number) => a + b,\r\n      0\r\n    );\r\n    const growFactor =\r\n      maxElementValue > elementsSum * 0.9\r\n        ? 0.1 / (1 - maxElementValue / elementsSum)\r\n        : 1;\r\n\r\n    return hierarchy(mainNode)\r\n      .sum((d) => {\r\n        return maxElementValue === d.amount ? d.amount : d.amount * growFactor;\r\n      })\r\n      .sort((n1, n2) => n2.data.amount - n1.data.amount);\r\n  }, [mainNode]);\r\n\r\n  const root = useMemo(() => {\r\n    const treeGenerator = treemap<DataNode>().size([width, height]).padding(0);\r\n    return treeGenerator(treeHierarchy);\r\n  }, [treeHierarchy, width, height]);\r\n\r\n  const colors = useMemo(() => {\r\n    const len = root.leaves().length;\r\n    if (!bigColor || !smallColor || !(valid(bigColor) && valid(smallColor)))\r\n      return scale([BIG_COLOR_DEFAULT, SMALL_COLOR_DEFAULT]).domain([0, len]);\r\n\r\n    return scale([bigColor, smallColor]).domain([0, len]);\r\n  }, [root, bigColor, smallColor]);\r\n\r\n  const [actionsVisible, setActionsVisible] = useState(null as number | null);\r\n\r\n  const allShapes = root.leaves().map((leaf, index) => {\r\n    const height = leaf.y1 - leaf.y0;\r\n    const width = leaf.x1 - leaf.x0;\r\n    const fontSize = calculateFontSize(height, width);\r\n    const lineHeight = fontSize * 1.1 + 5;\r\n    const paddingY = 10;\r\n    const lines = Math.max(\r\n      1,\r\n      Math.floor((height - paddingY + 20) / lineHeight) - 3\r\n    ); // -2 is for the d.data.value and <br />, 20 is for the value absolute top padding\r\n\r\n    const colorsConfig = getBackgroundColorLayers(\r\n      colorAxis,\r\n      leaf.data.metadata,\r\n      leaf.data.trends,\r\n      countersConfiguration,\r\n      totalItems\r\n    );\r\n\r\n    return (\r\n      <g key={index}>\r\n        <rect\r\n          x={leaf.x0}\r\n          y={leaf.y0}\r\n          width={width}\r\n          height={height}\r\n          stroke=\"transparent\"\r\n          fill={colors(index).hex()}\r\n        />\r\n        <foreignObject x={leaf.x0} y={leaf.y0} width={width} height={height}>\r\n          <div\r\n            className=\"h-full w-full\"\r\n            onMouseEnter={() => {\r\n              nodeActionsClicked(leaf.data);\r\n              setActionsVisible(index);\r\n            }}\r\n            onMouseLeave={() => {\r\n              setActionsVisible(null);\r\n            }}\r\n          >\r\n            <ColorsAxis width={width} colorsConfig={colorsConfig} />\r\n            <div\r\n              className=\"flex flex-col h-full w-full p-1 relative border-slate-500 dark:border-[#272535] text-black dark:text-white\"\r\n              style={{\r\n                fontFamily: fontFamily,\r\n                fontWeight: 300,\r\n                fontStyle: 'normal',\r\n                color: textColor,\r\n                borderRightWidth: `${borderWidth}px`,\r\n                borderLeftWidth: `${borderWidth}px`,\r\n                borderBottomWidth: `${borderWidth}px`,\r\n                borderColor: borderColor,\r\n              }}\r\n            >\r\n              <div\r\n                className=\"flex\"\r\n                style={{\r\n                  fontSize: `${countFontSize}px`,\r\n                }}\r\n              >\r\n                <CountersLabelsDisplay\r\n                  counters={counters}\r\n                  labels={labels}\r\n                  metadata={leaf.data.metadata}\r\n                  trends={leaf.data.trends}\r\n                  countersConfiguration={countersConfiguration}\r\n                  labelClicked={labelClicked}\r\n                  totalItems={totalItems}\r\n                />\r\n              </div>\r\n              <span\r\n                className=\"items-center flex justify-center h-full hover:cursor-pointer\"\r\n                onClick={() => nodeClicked(leaf.data)}\r\n                style={{\r\n                  fontSize: `${fontSize}px`,\r\n                }}\r\n              >\r\n                <span\r\n                  data-element=\"rect-text\"\r\n                  className=\"overflow-hidden text-center\"\r\n                  dir=\"auto\"\r\n                  style={{\r\n                    lineHeight: `${lineHeight}px`,\r\n                    wordBreak: 'break-word',\r\n                    WebkitLineClamp: lines,\r\n                    WebkitTouchCallout: 'none',\r\n                    display: '-webkit-box',\r\n                    WebkitBoxOrient: 'vertical',\r\n                  }}\r\n                >\r\n                  {translate &&\r\n                  leaf.data.item_translated_text !== undefined &&\r\n                  leaf.data.item_translated_text !== null &&\r\n                  leaf.data.item_translated_text !== ''\r\n                    ? leaf.data.item_translated_text\r\n                    : leaf.data.item_original_text}\r\n                </span>\r\n              </span>\r\n              <div\r\n                data-for=\"global-actions\"\r\n                data-tip\r\n                data-event=\"click\"\r\n                className={`self-end hover:cursor-pointer hover:text-white ${\r\n                  actionsVisible === index ? 'visible' : 'invisible'\r\n                }`}\r\n              >\r\n                <EllipsisHorizontalIcon className=\"h-4 w-4\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </foreignObject>\r\n      </g>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <svg width={width} height={height}>\r\n      {allShapes}\r\n    </svg>\r\n  );\r\n};\r\n","import { HomeIcon, XMarkIcon } from '@heroicons/react/20/solid';\r\nimport {\r\n  ArrowPathIcon,\r\n  EyeIcon,\r\n  EyeSlashIcon,\r\n  LanguageIcon,\r\n} from '@heroicons/react/24/outline';\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { useResizeDetector } from 'react-resize-detector';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport LabelDisplay from '../common/components/CountersLabels/LabelDisplay';\r\nimport LabelsFiltersSelect from '../common/components/CountersLabels/LabelsFiltersSelect';\r\nimport SingleSelect from '../common/components/CountersLabels/SingleSelect';\r\nimport CountersLabelsDisplay from '../common/components/CountersLabelsDisplay';\r\nimport CustomizeTab from '../common/components/CustomizeTab';\r\nimport DatesFilters from '../common/components/DatesFilters';\r\nimport ItemActions from '../common/components/ItemActions';\r\nimport {\r\n  percentOfAllCalculationName,\r\n  percentOfItemsCalculationName,\r\n  topGroupCalculationName,\r\n  totalSumCalculationName,\r\n} from '../common/configurations/calculationsConfigurations';\r\nimport {\r\n  colorAxisStorageKey,\r\n  countersStorageKey,\r\n  CUSTOM_METADATA_KEY,\r\n  defaultCalculations,\r\n  labelsStorageKey,\r\n  sizeAxisStorageKey,\r\n} from '../common/configurations/commonConfigurations';\r\nimport { defaultCountersConfigurations } from '../common/configurations/countersConfigurations';\r\nimport {\r\n  DataNode,\r\n  NodeType,\r\n  OneAiAnalyticsProps,\r\n} from '../common/types/componentsInputs';\r\nimport {\r\n  CalculationConfiguration,\r\n  CounterConfiguration,\r\n  CountersConfigurations,\r\n  CountersLocalStorageObject,\r\n  CounterType,\r\n  MetadataKeyValue,\r\n} from '../common/types/customizeBarTypes';\r\nimport { Item, MetaData, Properties, Trend } from '../common/types/modals';\r\nimport {\r\n  COLLECTION_TYPE,\r\n  getNodeId,\r\n  getNodeItemsCount,\r\n  getNodeOriginalAndTranslatedText,\r\n  getNodeText,\r\n  getNodeTrends,\r\n} from '../common/utils/modalsUtils';\r\nimport { BarChart } from './BarChart';\r\nimport { ItemsListDisplay } from './ItemsListDisplay';\r\nimport { Treemap } from './Treemap';\r\nimport { extractShtrudelSuffix } from '../common/utils/utils';\r\n\r\nexport type Displays = 'Treemap' | 'BarChart';\r\n\r\n// Please do not use types off of a default export module or else Storybook Docs will suffer.\r\n// see: https://github.com/storybookjs/storybook/issues/9556\r\n/**\r\n * One Ai Analytics Component\r\n */\r\nexport const OneAiAnalytics: FC<OneAiAnalyticsProps> = ({\r\n  dataNodes = { totalItems: 0, nodes: [] },\r\n  currentNode,\r\n  currentPage = 0,\r\n  totalPagesAmount = 0,\r\n  goBackClicked = () => {},\r\n  nodeClicked = () => {},\r\n  nextPageClicked = () => {},\r\n  prevPageClicked = () => {},\r\n  itemsDisplay = ItemsListDisplay,\r\n  darkMode = true,\r\n  background,\r\n  treemapBigColor = darkMode ? '#322F46' : '#F7F7F7',\r\n  treemapSmallColor = darkMode ? '#2C293D' : '#F7F7F7',\r\n  treemapCountFontSize = 14,\r\n  fontFamily = \"'Poppins', sans-serif\",\r\n  textColor = darkMode ? 'white' : '#111111',\r\n  treemapBorderWidth = 1,\r\n  navbarColor,\r\n  treemapBorderColor = darkMode ? '#272535' : 'white',\r\n  barColor = darkMode ? '#322F46' : '#F7F7F7',\r\n  loading,\r\n  error = null,\r\n  nodesPath = [],\r\n  dateRangeChanged = () => {},\r\n  labelsFilters,\r\n  labelClicked = () => {},\r\n  labelFilterDeleted = () => {},\r\n  trendPeriods,\r\n  trendPeriodsChanged,\r\n  splitPhrase,\r\n  mergeClusters,\r\n  searchSimilarClusters,\r\n  translationEnabled = true,\r\n  toggleHide = () => {},\r\n  propertiesFilters = {},\r\n  setPropertiesFilters = () => {},\r\n  metaOptions,\r\n  currentMetaOption,\r\n  metaOptionsChanged = () => {},\r\n  refresh = () => {},\r\n}) => {\r\n  const [display, setDisplay] = useState('Treemap' as Displays);\r\n  const { width, height, ref } = useResizeDetector();\r\n  const [metaData, setMetaData] = useState({} as MetaData);\r\n  const [nodes, setNodes] = useState([] as DataNode[]);\r\n  const [labels, setLabels] = useState([] as string[]);\r\n  const [counters, setCounters] = useState([] as CounterType[]);\r\n  const [sizeAxis, setSizeAxis] = useState(null as MetadataKeyValue | null);\r\n  const [colorAxis, setColorAxis] = useState([] as CounterType[]);\r\n  const [countersConfigurations, setCountersConfigurations] = useState(\r\n    {} as CountersConfigurations\r\n  );\r\n  const [currentNodeActions, setCurrentNodeActions] = useState(\r\n    null as { type: NodeType; id: string; text: string } | null\r\n  );\r\n  const [translate, setTranslate] = useState(false);\r\n  const [fromDate, setFromDate] = useState(null as Date | null);\r\n  const [toDate, setToDate] = useState(null as Date | null);\r\n  const loadedNodes = useRef([] as { type: string; id: string }[]);\r\n  const currentCollection = useRef(null as string | null);\r\n  const [currentHoveredNode, setCurrentHoveredNode] = useState(\r\n    null as {\r\n      type: NodeType;\r\n      id: string;\r\n      text: string;\r\n      properties: Properties;\r\n    } | null\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !nodesPath ||\r\n      nodesPath.length === 0 ||\r\n      currentCollection.current === nodesPath[0].text\r\n    )\r\n      return;\r\n\r\n    currentCollection.current = nodesPath[0].text;\r\n    setLabels(\r\n      JSON.parse(\r\n        localStorage.getItem(\r\n          getCurrentStorageKey(labelsStorageKey, currentCollection.current)\r\n        ) ?? '[]'\r\n      )\r\n    );\r\n\r\n    setCounters(\r\n      getInitialCounterTypes(\r\n        defaultCalculations,\r\n        [\r\n          {\r\n            metadataKeyValue: { key: CUSTOM_METADATA_KEY },\r\n            calculationName: percentOfAllCalculationName,\r\n          },\r\n          {\r\n            metadataKeyValue: { key: CUSTOM_METADATA_KEY },\r\n            calculationName: totalSumCalculationName,\r\n          },\r\n          {\r\n            metadataKeyValue: { key: 'signals' },\r\n            calculationName: topGroupCalculationName,\r\n          },\r\n        ],\r\n        currentCollection.current,\r\n        countersStorageKey\r\n      ) as CounterType[]\r\n    );\r\n\r\n    const storedSizeAxis = localStorage.getItem(\r\n      getCurrentStorageKey(sizeAxisStorageKey, currentCollection.current)\r\n    );\r\n    setSizeAxis(\r\n      storedSizeAxis ? JSON.parse(storedSizeAxis) : { key: CUSTOM_METADATA_KEY }\r\n    );\r\n\r\n    setColorAxis(\r\n      getInitialCounterTypes(\r\n        defaultCalculations,\r\n        [\r\n          {\r\n            metadataKeyValue: { key: 'signals', value: 'positive' },\r\n            calculationName: percentOfItemsCalculationName,\r\n          },\r\n          {\r\n            metadataKeyValue: { key: 'signals', value: 'negative' },\r\n            calculationName: percentOfItemsCalculationName,\r\n          },\r\n        ],\r\n        currentCollection.current,\r\n        colorAxisStorageKey\r\n      ) as CounterType[]\r\n    );\r\n  }, [nodesPath]);\r\n\r\n  useEffect(() => {\r\n    setMetaData((currentMetadata) => {\r\n      const newMetadata = currentNode\r\n        ? loadedNodes.current.some(\r\n            (loadedNode) =>\r\n              loadedNode.type === currentNode.type &&\r\n              loadedNode.id === getNodeId(currentNode)\r\n          )\r\n          ? currentMetadata\r\n          : mergeMetadata(currentMetadata, currentNode?.data.metadata ?? {})\r\n        : nodes\r\n            .filter(\r\n              (node) =>\r\n                !loadedNodes.current.some(\r\n                  (loadedNode) =>\r\n                    loadedNode.id === node.id && loadedNode.type === node.type\r\n                )\r\n            )\r\n            .reduce(\r\n              (finalMetadata, currentNode) =>\r\n                mergeMetadata(finalMetadata, currentNode.metadata),\r\n              currentMetadata\r\n            );\r\n      loadedNodes.current.push({\r\n        type: currentNode?.type ?? COLLECTION_TYPE,\r\n        id: currentNode ? getNodeId(currentNode) : COLLECTION_TYPE,\r\n      });\r\n\r\n      if (!currentNode)\r\n        loadedNodes.current.push(\r\n          ...nodes.map((node) => {\r\n            return { type: node.type, id: node.id };\r\n          })\r\n        );\r\n      return newMetadata;\r\n    });\r\n  }, [currentNode, nodes]);\r\n\r\n  useEffect(() => {\r\n    setNodes(\r\n      dataNodes.nodes.map((d) => {\r\n        const itemsCount = getNodeItemsCount(d);\r\n        const nodeText = getNodeText(d);\r\n        const { originalText, translatedText } =\r\n          getNodeOriginalAndTranslatedText(d);\r\n        return {\r\n          id: getNodeId(d),\r\n          amount: itemsCount,\r\n          text: nodeText,\r\n          item_original_text: originalText ?? nodeText,\r\n          item_translated_text: translatedText,\r\n          metadata: {\r\n            [CUSTOM_METADATA_KEY]: [\r\n              { value: CUSTOM_METADATA_KEY, count: itemsCount },\r\n            ],\r\n            ...d.data.metadata,\r\n          },\r\n          trends: getNodeTrends(d),\r\n          type: d.type,\r\n          properties: d.data.properties,\r\n        };\r\n      })\r\n    );\r\n  }, [dataNodes]);\r\n\r\n  useEffect(() => {\r\n    const newCountersConfigurations: CountersConfigurations = {};\r\n    Object.keys(metaData)\r\n      .concat(Object.keys(defaultCountersConfigurations))\r\n      .forEach((key) => {\r\n        const defaultConfig = defaultCountersConfigurations[key];\r\n        const valuesConfigured =\r\n          defaultConfig?.items?.map((group) => group.label) ?? [];\r\n        const counterConfiguration: CounterConfiguration = {\r\n          label: (defaultConfig?.label ?? key).toLowerCase(),\r\n          display: defaultConfig?.display,\r\n          members: defaultConfig?.members ?? [{ metadataName: key }],\r\n          isGroup: defaultConfig?.isGroup ?? false,\r\n          items:\r\n            key === CUSTOM_METADATA_KEY\r\n              ? undefined\r\n              : (\r\n                  defaultConfig?.items?.map((group) => {\r\n                    return {\r\n                      label: group.label,\r\n                      display: group.display,\r\n                      isGroup: group.isGroup,\r\n                      members: group.members?.map((member) => {\r\n                        return {\r\n                          metadataName: member.metadataName ?? key,\r\n                          values: member.values,\r\n                        };\r\n                      }) ?? [\r\n                        { metadataName: key, values: [group.label ?? ''] },\r\n                      ],\r\n                    };\r\n                  }) ?? []\r\n                ).concat(\r\n                  metaData[key]\r\n                    ?.filter((meta) => !valuesConfigured.includes(meta.value))\r\n                    .map((meta) => {\r\n                      return {\r\n                        label: meta.value,\r\n                        members: [{ metadataName: key, values: [meta.value] }],\r\n                        display: undefined,\r\n                        isGroup: false,\r\n                      };\r\n                    }) ?? []\r\n                ),\r\n        };\r\n        newCountersConfigurations[key] = counterConfiguration;\r\n      });\r\n\r\n    setCountersConfigurations(newCountersConfigurations);\r\n  }, [metaData]);\r\n\r\n  useEffect(() => {\r\n    const storedCounters = counters.map((counter) => {\r\n      return {\r\n        metadataKeyValue: counter.metadataKeyValue,\r\n        calculationName: counter.calculationConfiguration.name,\r\n      } as CountersLocalStorageObject;\r\n    });\r\n\r\n    const storedColorAxis = colorAxis.map((counter) => {\r\n      return {\r\n        metadataKeyValue: counter.metadataKeyValue,\r\n        calculationName: counter.calculationConfiguration.name,\r\n      } as CountersLocalStorageObject;\r\n    });\r\n\r\n    if (currentCollection.current) {\r\n      localStorage.setItem(\r\n        getCurrentStorageKey(countersStorageKey, currentCollection.current),\r\n        JSON.stringify(storedCounters)\r\n      );\r\n      localStorage.setItem(\r\n        getCurrentStorageKey(labelsStorageKey, currentCollection.current),\r\n        JSON.stringify(labels)\r\n      );\r\n      localStorage.setItem(\r\n        getCurrentStorageKey(colorAxisStorageKey, currentCollection.current),\r\n        JSON.stringify(storedColorAxis)\r\n      );\r\n      localStorage.setItem(\r\n        getCurrentStorageKey(sizeAxisStorageKey, currentCollection.current),\r\n        JSON.stringify(sizeAxis)\r\n      );\r\n    }\r\n  }, [counters, labels, sizeAxis, colorAxis]);\r\n\r\n  useEffect(() => {\r\n    dateRangeChanged(fromDate, toDate);\r\n  }, [fromDate, toDate]);\r\n\r\n  useEffect(() => {\r\n    ReactTooltip.hide();\r\n    ReactTooltip.rebuild();\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`oneai-analytics-namespace h-full w-full overflow-hidden ${\r\n        darkMode ? 'dark' : ''\r\n      }`}\r\n    >\r\n      <div\r\n        id=\"headlessui-portal-root\"\r\n        className={`h-full w-full flex flex-col overflow-hidden bg-[#f3e5e5] dark:bg-[#161414] p-1 ${\r\n          darkMode ? 'dark' : ''\r\n        }`}\r\n        style={{ background: background }}\r\n      >\r\n        <ReactTooltip id=\"global\" />\r\n        <ReactTooltip\r\n          id=\"global-actions\"\r\n          place=\"top\"\r\n          effect=\"solid\"\r\n          clickable={true}\r\n          className=\"!p-1\"\r\n        >\r\n          <div className=\"flex flex-col w-full h-full items-baseline\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                ReactTooltip.hide();\r\n                setCurrentNodeActions(currentHoveredNode);\r\n              }}\r\n              className=\"text-gray-900 w-full bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-2 py-2 mr-1 mb-1 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700\"\r\n            >\r\n              {currentHoveredNode?.type === 'Cluster' ? 'Merge' : 'Split'}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                ReactTooltip.hide();\r\n                ReactTooltip.rebuild();\r\n                toggleHide(\r\n                  currentHoveredNode,\r\n                  currentHoveredNode?.properties?.['hide'] === 'true'\r\n                    ? 'false'\r\n                    : 'true'\r\n                );\r\n              }}\r\n              className=\"text-gray-900 w-full bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-2 py-2 mr-1 mb-1 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700\"\r\n            >\r\n              {currentHoveredNode?.properties?.['hide'] === 'true'\r\n                ? 'Show'\r\n                : 'Hide'}\r\n            </button>\r\n          </div>\r\n        </ReactTooltip>\r\n        <ItemActions\r\n          node={currentNodeActions}\r\n          splitPhrase={splitPhrase}\r\n          mergeClusters={mergeClusters}\r\n          searchSimilarClusters={searchSimilarClusters}\r\n          translationEnabled={translate}\r\n        />\r\n        <div\r\n          className=\"w-full mb-1 rounded-md bg-white dark:bg-[#272535]\"\r\n          style={{\r\n            height: '65px',\r\n            background: navbarColor,\r\n            fontFamily: fontFamily,\r\n          }}\r\n        >\r\n          <div className=\"flex flex-row items-center py-5 ml-[24px] h-full\">\r\n            <div className=\"flex flex-row w-5/12 justify-start items-center\">\r\n              <div className=\"h-full flex\">\r\n                <svg\r\n                  className={getVisualizationLogoClasses(display === 'Treemap')}\r\n                  onClick={() => setDisplay('Treemap')}\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path d=\"M3.5 5.89477C3.5 5.06635 4.17157 4.39478 5 4.39478H19C19.8284 4.39478 20.5 5.06635 20.5 5.89478V11.9211H3.5V5.89477Z\" />\r\n                  <path d=\"M3.5 11.9736H13.8684V19.4999H5C4.17157 19.4999 3.5 18.8284 3.5 17.9999V11.9736Z\" />\r\n                  <path d=\"M13.9211 11.9736H20.5001V17.9999C20.5001 18.8284 19.8285 19.4999 19.0001 19.4999H13.9211V11.9736Z\" />\r\n                  <path d=\"M8.68433 4.36841V11.4737\" />\r\n                </svg>\r\n\r\n                <svg\r\n                  className={getVisualizationLogoClasses(\r\n                    display === 'BarChart'\r\n                  )}\r\n                  onClick={() => setDisplay('BarChart')}\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path d=\"M3.75 20.25V3.75\" />\r\n                  <path d=\"M3.75 9.75H15.75C15.75 11.5074 15.75 12.4926 15.75 14.25H3.75\" />\r\n                  <path d=\"M20.25 5.25H3.75V9.75H20.25V5.25Z\" />\r\n                  <path d=\"M12.75 14.25V18.75H3.75\" />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <CustomizeTab\r\n                  currentCounters={counters}\r\n                  selectedLabels={labels}\r\n                  countersConfigurations={countersConfigurations}\r\n                  labelsOptions={Object.keys(metaData).filter(\r\n                    (key) => key !== CUSTOM_METADATA_KEY\r\n                  )}\r\n                  calculationsConfigurations={defaultCalculations}\r\n                  countersChanged={setCounters}\r\n                  labelsChanged={setLabels}\r\n                  selectedSizeAxis={sizeAxis}\r\n                  sizeAxisChanged={setSizeAxis}\r\n                  currentColorsAxis={colorAxis}\r\n                  colorsAxisChanged={setColorAxis}\r\n                />\r\n              </div>\r\n              <div>\r\n                <DatesFilters\r\n                  fromDate={fromDate}\r\n                  fromDateChanged={setFromDate}\r\n                  toDate={toDate}\r\n                  toDateChanged={setToDate}\r\n                  trendPeriods={trendPeriods}\r\n                  trendPeriodsChanged={trendPeriodsChanged}\r\n                />\r\n              </div>\r\n              <div>\r\n                <LabelsFiltersSelect\r\n                  selectedLabels={labelsFilters ?? []}\r\n                  countersConfigurations={countersConfigurations}\r\n                  selectedMetadataKeyValueChange={(metadataKeyValue) =>\r\n                    labelClicked(metadataKeyValue.key, metadataKeyValue.value!)\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-row w-full justify-end items-center\">\r\n              <ArrowPathIcon\r\n                onClick={refresh}\r\n                data-for=\"global\"\r\n                data-tip=\"Refresh data\"\r\n                className=\"h-6 w-6 p-1 mr-1 hover:cursor-pointer focus:outline-none text-[#747189] dark:hover:text-white\"\r\n              />\r\n              {propertiesFilters['hide'] === 'true' ? (\r\n                <EyeIcon\r\n                  onClick={() => setPropertiesFilters({ hide: 'false' })}\r\n                  data-for=\"global\"\r\n                  data-tip=\"Show hidden nodes\"\r\n                  className=\"h-6 w-6 p-1 mr-1 hover:cursor-pointer focus:outline-none text-[#747189] dark:hover:text-white\"\r\n                />\r\n              ) : (\r\n                <EyeSlashIcon\r\n                  onClick={() => setPropertiesFilters({ hide: 'true' })}\r\n                  data-for=\"global\"\r\n                  data-tip=\"Hide hidden nodes\"\r\n                  className=\"h-6 w-6 p-1 mr-1 hover:cursor-pointer focus:outline-none bg-[#EFEFEF] dark:text-white dark:bg-[#322F46]\"\r\n                />\r\n              )}\r\n              {translationEnabled ? (\r\n                <LanguageIcon\r\n                  onClick={() => setTranslate((translate) => !translate)}\r\n                  data-for=\"global\"\r\n                  data-tip={\r\n                    translate ? 'Disable translation' : 'Enable translation'\r\n                  }\r\n                  className={`h-6 w-6 p-1 mr-1 hover:cursor-pointer focus:outline-none ${\r\n                    translate\r\n                      ? 'bg-[#EFEFEF] dark:text-white dark:bg-[#322F46]'\r\n                      : 'text-[#747189] hover:cursor-pointer dark:hover:text-white'\r\n                  }`}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"w-full rounded-md grow flex flex-col overflow-hidden bg-white dark:bg-[#272535]\"\r\n          style={{ background: navbarColor }}\r\n        >\r\n          <div\r\n            className=\"w-full\"\r\n            style={{\r\n              height: '65px',\r\n              fontFamily: fontFamily,\r\n            }}\r\n          >\r\n            <div className=\"flex flex-row items-center ml-[24px] h-full\">\r\n              <div\r\n                className=\"flex flex-row justify-start mr-4 items-center w-full\"\r\n                style={{\r\n                  fontFamily: fontFamily,\r\n                  fontWeight: 300,\r\n                  fontStyle: 'normal',\r\n                  fontSize: '14px',\r\n                }}\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => goBackClicked(1)}\r\n                  disabled={currentNode === null}\r\n                  className={`rounded-lg inline-flex ${\r\n                    currentNode\r\n                      ? 'hover:bg-[#EFEFEF] dark:hover:bg-slate-700'\r\n                      : 'hover:cursor-default'\r\n                  }`}\r\n                >\r\n                  {currentNode ? (\r\n                    <svg\r\n                      className=\"h-[1em] w-[1em] self-center text-[#111111] dark:text-white\"\r\n                      width=\"24\"\r\n                      height=\"24\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      strokeWidth=\"2\"\r\n                      stroke=\"currentColor\"\r\n                      fill=\"none\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      {' '}\r\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" />{' '}\r\n                      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />{' '}\r\n                      <line x1=\"5\" y1=\"12\" x2=\"9\" y2=\"16\" />{' '}\r\n                      <line x1=\"5\" y1=\"12\" x2=\"9\" y2=\"8\" />\r\n                    </svg>\r\n                  ) : (\r\n                    <HomeIcon className=\"h-[0.9em] w-[1em] text-[#111111] dark:text-white\" />\r\n                  )}\r\n\r\n                  <span className=\"sr-only\">Go back</span>\r\n                </button>\r\n\r\n                <div className=\"ml-1 text-[#111111] dark:text-gray-300 truncate flex items-center\">\r\n                  {nodesPath.map((node, i) => (\r\n                    <div key={i} className=\"flex\">\r\n                      <div className=\"max-w-[50ch] truncate\">\r\n                        <span\r\n                          className=\"cursor-pointer hover:text-gray-600 dark:hover:text-gray-50\"\r\n                          onClick={() =>\r\n                            goBackClicked(nodesPath.length - 1 - i)\r\n                          }\r\n                          dir=\"auto\"\r\n                        >\r\n                          {translate && node.translated\r\n                            ? extractShtrudelSuffix(node.translated)\r\n                            : extractShtrudelSuffix(node.text)}\r\n                        </span>\r\n                      </div>\r\n                      {nodesPath.length - 1 !== i && (\r\n                        <span className=\"ml-1 mr-1\">/</span>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  {metaOptions && nodesPath.length === 1 ? (\r\n                    <span className=\"ml-1 flex text-[#111111] dark:text-gray-300\">\r\n                      <span className=\"mr-1\">/ </span>\r\n                      <SingleSelect\r\n                        options={metaOptions}\r\n                        selectedLabel={currentMetaOption ?? 'text'}\r\n                        onSelect={metaOptionsChanged}\r\n                      />\r\n                    </span>\r\n                  ) : null}\r\n                  {(labelsFilters?.length ?? 0) > 0 &&\r\n                    labelsFilters\r\n                      ?.filter((label) => label.value)\r\n                      .map((keyValue, i) => (\r\n                        <span key={i} className=\"flex items-center\">\r\n                          <span className=\"text-gray-500 ml-1\">/ </span>\r\n                          <LabelDisplay\r\n                            metadataKey={keyValue.key}\r\n                            value={keyValue.value ?? ''}\r\n                            countersConfiguration={countersConfigurations}\r\n                            labelClicked={() => {}}\r\n                            maxWidth=\"20ch\"\r\n                            color=\"#747189\"\r\n                          />\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => labelFilterDeleted(i)}\r\n                          >\r\n                            <XMarkIcon className=\"h-4 w-4 text-gray-400 hover:scale-125 transition duration-100 ease-linear\" />\r\n                            <span className=\"sr-only\">Delete label filter</span>\r\n                          </button>\r\n                        </span>\r\n                      ))}\r\n                  {totalPagesAmount > 1 && currentPage > 0 && (\r\n                    <span className=\"ml-1 text-gray-500\">\r\n                      / {currentPage + 1}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                {!loading && (\r\n                  <CountersLabelsDisplay\r\n                    counters={counters}\r\n                    labels={labels}\r\n                    metadata={nodes.reduce(\r\n                      (finalMetadata, currentNode) =>\r\n                        mergeMetadata(\r\n                          finalMetadata,\r\n                          currentNode.metadata,\r\n                          dataNodes.totalItems\r\n                        ),\r\n                      {}\r\n                    )}\r\n                    trends={nodes.reduce(\r\n                      (finalMetadata, currentNode) =>\r\n                        mergeTrends(finalMetadata, currentNode.trends),\r\n                      [] as Trend[]\r\n                    )}\r\n                    countersConfiguration={countersConfigurations}\r\n                    labelClicked={labelClicked}\r\n                    totalItems={dataNodes.totalItems}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full h-full flex flex-col overflow-x-hidden\">\r\n            {loading && (\r\n              <div className=\"grow w-full justify-center items-center flex\">\r\n                <div className=\"text-center\">\r\n                  <div role=\"status\">\r\n                    <svg\r\n                      className=\"inline mr-2 w-8 h-8 text-gray-200 animate-spin fill-blue-600\"\r\n                      viewBox=\"0 0 100 101\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n                        fill=\"currentColor\"\r\n                      />\r\n                      <path\r\n                        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n                        fill=\"currentFill\"\r\n                      />\r\n                    </svg>\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div\r\n              className={`flex flex-row flex-grow ${\r\n                loading\r\n                  ? 'invisible pointer-events-none w-0 h-0'\r\n                  : 'w-full h-full'\r\n              }`}\r\n            >\r\n              {currentPage > 0 && (\r\n                <div\r\n                  className=\"h-full flex items-center justify-center hover:cursor-pointer dark:bg-[#322F46]\"\r\n                  onClick={prevPageClicked}\r\n                  style={{ width: '3%', backgroundColor: treemapBigColor }}\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-slate-500 hover:text-slate-700 font-medium rounded-lg text-sm text-center inline-flex items-center\"\r\n                  >\r\n                    <svg\r\n                      aria-hidden=\"true\"\r\n                      className=\"w-5 h-5 rotate-180\"\r\n                      fill=\"currentColor\"\r\n                      viewBox=\"0 0 20 20\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        fillRule=\"evenodd\"\r\n                        d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\r\n                        clipRule=\"evenodd\"\r\n                      ></path>\r\n                    </svg>\r\n                    <span className=\"sr-only\">Prev</span>\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              <div\r\n                ref={ref}\r\n                className=\"h-full w-full overflow-y-auto no-scrollbar overflow-x-hidden\"\r\n              >\r\n                {error !== null ? (\r\n                  <p className=\"h-full w-full text-center dark:text-white\">\r\n                    {error}\r\n                  </p>\r\n                ) : currentNode && currentNode.type === 'Phrase' ? (\r\n                  itemsDisplay({\r\n                    items: dataNodes.nodes.map(\r\n                      (dataNode) => dataNode.data as Item\r\n                    ),\r\n                    bgColor: navbarColor,\r\n                    textColor: textColor,\r\n                    counters: counters,\r\n                    labels: labels,\r\n                    labelClicked: labelClicked,\r\n                    countersConfiguration: countersConfigurations,\r\n                    translate: translate,\r\n                    totalItems: dataNodes.totalItems,\r\n                  })\r\n                ) : display === 'Treemap' ? (\r\n                  <Treemap\r\n                    dataNodes={nodes}\r\n                    height={height ?? 0}\r\n                    width={width ?? 0}\r\n                    nodeClicked={(node) => {\r\n                      ReactTooltip.hide();\r\n                      nodeClicked({\r\n                        type: !currentNode\r\n                          ? 'Cluster'\r\n                          : currentNode.type === 'Cluster'\r\n                          ? 'Phrase'\r\n                          : 'Item',\r\n                        id: node.id,\r\n                      });\r\n                    }}\r\n                    labels={labels}\r\n                    counters={counters}\r\n                    bigColor={treemapBigColor}\r\n                    smallColor={treemapSmallColor}\r\n                    countFontSize={treemapCountFontSize}\r\n                    fontFamily={fontFamily}\r\n                    textColor={textColor}\r\n                    borderWidth={treemapBorderWidth}\r\n                    borderColor={treemapBorderColor}\r\n                    countersConfiguration={countersConfigurations}\r\n                    labelClicked={labelClicked}\r\n                    sizeAxis={sizeAxis}\r\n                    colorAxis={colorAxis}\r\n                    nodeActionsClicked={(node) => {\r\n                      setCurrentHoveredNode({\r\n                        type: !currentNode\r\n                          ? 'Cluster'\r\n                          : currentNode.type === 'Cluster'\r\n                          ? 'Phrase'\r\n                          : 'Item',\r\n                        id: node.id,\r\n                        text: node.text ?? '',\r\n                        properties: node.properties,\r\n                      });\r\n                    }}\r\n                    translate={translate}\r\n                    totalItems={dataNodes.totalItems}\r\n                  />\r\n                ) : (\r\n                  <BarChart\r\n                    dataNodes={nodes}\r\n                    height={height ?? 0}\r\n                    width={width ?? 0}\r\n                    nodeClicked={(node) => {\r\n                      ReactTooltip.hide();\r\n                      nodeClicked({\r\n                        type: !currentNode\r\n                          ? 'Cluster'\r\n                          : currentNode.type === 'Cluster'\r\n                          ? 'Phrase'\r\n                          : 'Item',\r\n                        id: node.id,\r\n                      });\r\n                    }}\r\n                    fontFamily={fontFamily}\r\n                    textColor={textColor}\r\n                    barColor={barColor}\r\n                    labels={labels}\r\n                    counters={counters}\r\n                    countersConfiguration={countersConfigurations}\r\n                    labelClicked={labelClicked}\r\n                    sizeAxis={sizeAxis}\r\n                    colorAxis={colorAxis}\r\n                    nodeActionsClicked={(node) => {\r\n                      setCurrentHoveredNode({\r\n                        type: !currentNode\r\n                          ? 'Cluster'\r\n                          : currentNode.type === 'Cluster'\r\n                          ? 'Phrase'\r\n                          : 'Item',\r\n                        id: node.id,\r\n                        text: node.text ?? '',\r\n                        properties: node.properties,\r\n                      });\r\n                    }}\r\n                    translate={translate}\r\n                    totalItems={dataNodes.totalItems}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              {currentPage < totalPagesAmount - 1 && (\r\n                <div\r\n                  className=\"h-full flex items-center justify-center hover:cursor-pointer\"\r\n                  onClick={nextPageClicked}\r\n                  style={{ width: '3%', backgroundColor: treemapSmallColor }}\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-slate-500 hover:text-slate-700 font-medium rounded-lg text-sm text-center inline-flex items-center\"\r\n                  >\r\n                    <svg\r\n                      aria-hidden=\"true\"\r\n                      className=\"w-5 h-5\"\r\n                      fill=\"currentColor\"\r\n                      viewBox=\"0 0 20 20\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        fillRule=\"evenodd\"\r\n                        d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\r\n                        clipRule=\"evenodd\"\r\n                      ></path>\r\n                    </svg>\r\n                    <span className=\"sr-only\">Next</span>\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getVisualizationLogoClasses(active: boolean) {\r\n  return `h-7 w-7 mr-1 p-1 rounded-md ${\r\n    active\r\n      ? 'bg-[#EFEFEF] dark:text-white dark:bg-[#322F46]'\r\n      : 'text-[#747189] hover:cursor-pointer dark:hover:text-white'\r\n  }`;\r\n}\r\n\r\nfunction mergeMetadata(\r\n  metadata1: MetaData,\r\n  metadata2: MetaData,\r\n  totalItems?: number\r\n): MetaData {\r\n  const newMetadata: MetaData = {};\r\n  Array.from(\r\n    new Set([...Object.keys(metadata1), ...Object.keys(metadata2)])\r\n  ).forEach((key) => {\r\n    if (totalItems === undefined || key !== CUSTOM_METADATA_KEY)\r\n      newMetadata[key] = [...(metadata1[key] ?? []), ...(metadata2[key] ?? [])];\r\n  });\r\n\r\n  if (totalItems === undefined) return newMetadata;\r\n  newMetadata[CUSTOM_METADATA_KEY] = [\r\n    { value: CUSTOM_METADATA_KEY, count: totalItems },\r\n  ];\r\n\r\n  return newMetadata;\r\n}\r\n\r\nfunction mergeTrends(trends1?: Trend[], trends2?: Trend[]): Trend[] {\r\n  if (!trends1 || !trends2) return [];\r\n  const newTrends: Trend[] = [];\r\n  const sourceTrends = trends1.length >= trends2.length ? trends1 : trends2;\r\n  sourceTrends.forEach((_, i) => {\r\n    newTrends.push({\r\n      days: sourceTrends[i].days,\r\n      period_start_date: sourceTrends[i].period_start_date,\r\n      period_end_date: sourceTrends[i].period_end_date,\r\n      items_count:\r\n        (trends1.at(i)?.items_count ?? 0) + (trends2.at(i)?.items_count ?? 0),\r\n      phrases_count:\r\n        (trends1.at(i)?.phrases_count ?? 0) +\r\n        (trends2.at(i)?.phrases_count ?? 0),\r\n      metadata: mergeMetadata(\r\n        trends1.at(i)?.metadata ?? {},\r\n        trends2.at(i)?.metadata ?? {}\r\n      ),\r\n    });\r\n  });\r\n\r\n  return newTrends;\r\n}\r\n\r\nfunction getInitialCounterTypes(\r\n  calculationConfiguration: CalculationConfiguration[],\r\n  defaultCounters: CountersLocalStorageObject[],\r\n  collection: string,\r\n  storageKey: string\r\n): CounterType[] {\r\n  const storedCounters: CountersLocalStorageObject[] = JSON.parse(\r\n    localStorage.getItem(getCurrentStorageKey(storageKey, collection)) ?? '[]'\r\n  );\r\n  const counters = storedCounters.length > 0 ? storedCounters : defaultCounters;\r\n\r\n  return counters\r\n    .map((counter) => {\r\n      return {\r\n        calculationConfiguration: calculationConfiguration.find(\r\n          (calc) => calc.name === counter.calculationName\r\n        ),\r\n        metadataKeyValue: counter.metadataKeyValue,\r\n      } as CounterType;\r\n    })\r\n    .filter((calc) => calc.calculationConfiguration !== undefined);\r\n}\r\n\r\nfunction getCurrentStorageKey(prefix: string, collection: string) {\r\n  return `${prefix}-${collection}`;\r\n}\r\n","import { format } from 'date-fns';\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { PAGE_SIZE } from '../common/configurations/commonConfigurations';\r\nimport {\r\n  NodeType,\r\n  OneAIAnalyticsApiWrapperProps,\r\n  OneAIDataNode,\r\n} from '../common/types/componentsInputs';\r\nimport { MetadataKeyValue } from '../common/types/customizeBarTypes';\r\nimport {\r\n  Cluster,\r\n  Item,\r\n  MetaCluster,\r\n  Phrase,\r\n  Properties,\r\n} from '../common/types/modals';\r\nimport {\r\n  COLLECTION_TYPE,\r\n  getNodeDetails,\r\n  getNodeId,\r\n  getNodeOriginalAndTranslatedText,\r\n  getNodeText,\r\n} from '../common/utils/modalsUtils';\r\nimport { getSecondsDiff, uniqBy } from '../common/utils/utils';\r\nimport { OneAiAnalytics } from '../components/OneAiAnalytics';\r\n\r\nconst cache: Map<\r\n  string,\r\n  { nodes: OneAIDataNode[]; totalItems: number; totalPages: number; time: Date }\r\n> = new Map();\r\n\r\nconst nodeToPageCache: Map<string, number> = new Map();\r\n\r\n// Please do not use types off of a default export module or else Storybook Docs will suffer.\r\n// see: https://github.com/storybookjs/storybook/issues/9556\r\n/**\r\n * One AI Analytics api wrapper component\r\n */\r\nexport const OneAIAnalyticsApiWrapper: FC<OneAIAnalyticsApiWrapperProps> = ({\r\n  domain = 'https://api.oneai.com',\r\n  apiKey = '',\r\n  collection = '',\r\n  refreshToken = '',\r\n  ...rest\r\n}) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null as string | null);\r\n  const [currentNodes, setCurrentNodes] = useState({\r\n    totalItems: 0,\r\n    nodes: [],\r\n  } as { totalItems: number; nodes: OneAIDataNode[] });\r\n  const [clickedNodes, setClickedNodes] = useState([] as OneAIDataNode[]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [dateRange, setDateRange] = useState([\r\n    null,\r\n    null,\r\n  ] as Array<Date | null>);\r\n  const [labelsFilters, setLabelsFilters] = useState([] as MetadataKeyValue[]);\r\n  const [localRefreshToken, setLocalRefreshToken] = useState(refreshToken);\r\n  const [trendPeriods, setTrendPeriods] = useState(0);\r\n  const [propertiesFilters, setPropertiesFilters] = useState({\r\n    hide: 'true',\r\n  } as Properties);\r\n  const [metaOptions, setMetaOptions] = useState([] as string[]);\r\n  const [currentMetaGroup, setCurrentMetaGroup] = useState('text');\r\n  const [metaGroupClicked, setMetaGroupClicked] = useState(\r\n    null as MetadataKeyValue | null\r\n  );\r\n\r\n  const previousValues = useRef({\r\n    domain: null as string | null,\r\n    apiKey: null as string | null,\r\n    collection: null as string | null,\r\n    refreshToken: null as string | null,\r\n    localRefreshToken: null as string | null,\r\n    clickedNodes: null as OneAIDataNode[] | null,\r\n    currentPage: null as number | null,\r\n    lastMetaGroup: 'text' as string,\r\n  });\r\n\r\n  const fetchMetaClusters = async (controller: AbortController) => {\r\n    const metaClusters = await fetchMetaClustersApi(\r\n      controller,\r\n      domain,\r\n      collection,\r\n      apiKey,\r\n      0,\r\n      dateRange[0],\r\n      dateRange[1],\r\n      labelsFilters,\r\n      trendPeriods,\r\n      propertiesFilters\r\n    );\r\n\r\n    const newNodes = metaClusters.data.map((c) => {\r\n      return { type: 'Meta' as NodeType, data: c };\r\n    });\r\n\r\n    const mappedNodes = newNodes.map((n) => n.data.meta_key);\r\n    setMetaOptions(mappedNodes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      previousValues.current.domain !== domain ||\r\n      previousValues.current.apiKey !== apiKey ||\r\n      previousValues.current.collection !== collection ||\r\n      previousValues.current.refreshToken !== refreshToken ||\r\n      previousValues.current.localRefreshToken !== localRefreshToken ||\r\n      previousValues.current.lastMetaGroup !== currentMetaGroup\r\n    ) {\r\n      setCurrentNodes({ totalItems: 0, nodes: [] });\r\n      setClickedNodes([]);\r\n      setCurrentPage(0);\r\n      cache.clear();\r\n\r\n      previousValues.current = {\r\n        domain,\r\n        apiKey,\r\n        collection,\r\n        refreshToken,\r\n        localRefreshToken,\r\n        clickedNodes: null,\r\n        currentPage: null,\r\n        lastMetaGroup: currentMetaGroup,\r\n      };\r\n    }\r\n  }, [\r\n    domain,\r\n    apiKey,\r\n    collection,\r\n    refreshToken,\r\n    localRefreshToken,\r\n    currentMetaGroup,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async (controller: AbortController) => {\r\n      setLoading(true);\r\n      const currentClicked = clickedNodes.at(-1);\r\n\r\n      if (currentMetaGroup !== 'text' && !currentClicked) {\r\n        const cached = getNodesFromCache(\r\n          COLLECTION_TYPE,\r\n          collection + '_meta',\r\n          currentPage\r\n        );\r\n\r\n        if (cached) {\r\n          setCurrentNodes({\r\n            totalItems: cached.totalItems,\r\n            nodes: cached.nodes,\r\n          });\r\n          setTotalPages(cached.totalPages);\r\n        } else {\r\n          const metaClusters = await fetchMetaClustersApi(\r\n            controller,\r\n            domain,\r\n            collection,\r\n            apiKey,\r\n            0,\r\n            dateRange[0],\r\n            dateRange[1],\r\n            labelsFilters,\r\n            trendPeriods,\r\n            propertiesFilters,\r\n            currentMetaGroup\r\n          );\r\n          if (metaClusters.error) {\r\n            if (metaClusters.error.includes('AbortError')) {\r\n              return;\r\n            }\r\n\r\n            setError(metaClusters.error);\r\n            return setLoading(false);\r\n          }\r\n          setError(null);\r\n\r\n          const newNodes = metaClusters.data\r\n            .sort((m1, m2) => m2.items_count - m1.items_count)\r\n            .map((c) => {\r\n              return { type: 'Meta' as NodeType, data: c };\r\n            });\r\n          const totalPages = Math.ceil(metaClusters.data.length / PAGE_SIZE);\r\n          const totalItems = metaClusters.data.reduce(\r\n            (prev, current) => prev + current.items_count,\r\n            0\r\n          );\r\n          const slicedNodes = newNodes.slice(\r\n            currentPage * PAGE_SIZE,\r\n            (currentPage + 1) * PAGE_SIZE\r\n          );\r\n\r\n          if (clickedNodes.at(-1) == currentClicked) {\r\n            setCurrentNodes({\r\n              totalItems: totalItems,\r\n              nodes: slicedNodes,\r\n            });\r\n\r\n            setTotalPages(totalPages);\r\n          }\r\n\r\n          setNodesDataInCache(\r\n            'Collection',\r\n            collection + '_meta',\r\n            currentPage,\r\n            slicedNodes,\r\n            totalPages,\r\n            totalItems\r\n          );\r\n        }\r\n      } else if (!currentClicked) {\r\n        const cached = getNodesFromCache(\r\n          COLLECTION_TYPE,\r\n          collection,\r\n          currentPage\r\n        );\r\n        if (cached) {\r\n          setTotalPages(cached.totalPages);\r\n          setCurrentNodes({\r\n            totalItems: cached.totalItems,\r\n            nodes: cached.nodes,\r\n          });\r\n        } else {\r\n          const clusters = await fetchClusters(\r\n            controller,\r\n            domain,\r\n            collection,\r\n            apiKey,\r\n            currentPage,\r\n            dateRange[0],\r\n            dateRange[1],\r\n            [...labelsFilters, ...(metaGroupClicked ? [metaGroupClicked] : [])],\r\n            trendPeriods,\r\n            propertiesFilters\r\n          );\r\n          if (clusters.error) {\r\n            if (clusters.error.includes('AbortError')) {\r\n              return;\r\n            }\r\n\r\n            setError(clusters.error);\r\n            return setLoading(false);\r\n          }\r\n          setError(null);\r\n\r\n          const newNodes = clusters.data.map((c) => {\r\n            return { type: 'Cluster' as NodeType, data: c };\r\n          });\r\n\r\n          if (clickedNodes.at(-1) == currentClicked) {\r\n            setCurrentNodes({\r\n              totalItems: clusters.totalItems,\r\n              nodes: newNodes,\r\n            });\r\n            setTotalPages(clusters.totalPages);\r\n          }\r\n\r\n          setNodesDataInCache(\r\n            'Collection',\r\n            collection,\r\n            currentPage,\r\n            newNodes,\r\n            clusters.totalPages,\r\n            clusters.totalItems\r\n          );\r\n        }\r\n      } else if (currentClicked.type === 'Cluster') {\r\n        const clusterId = (\r\n          currentClicked.data as Cluster\r\n        ).cluster_id.toString();\r\n        const cached = getNodesFromCache(\r\n          currentClicked.type,\r\n          clusterId,\r\n          currentPage\r\n        );\r\n        if (cached) {\r\n          setTotalPages(cached.totalPages);\r\n          setCurrentNodes({\r\n            totalItems: cached.totalItems,\r\n            nodes: cached.nodes,\r\n          });\r\n        } else {\r\n          const phrases = await fetchPhrases(\r\n            controller,\r\n            domain,\r\n            collection,\r\n            clusterId,\r\n            apiKey,\r\n            currentPage,\r\n            dateRange[0],\r\n            dateRange[1],\r\n            [...labelsFilters, ...(metaGroupClicked ? [metaGroupClicked] : [])],\r\n            trendPeriods,\r\n            propertiesFilters\r\n          );\r\n          if (phrases.error) {\r\n            if (phrases.error.includes('AbortError')) {\r\n              return;\r\n            }\r\n            setError(phrases.error);\r\n            return setLoading(false);\r\n          }\r\n          setError(null);\r\n\r\n          const newNodes = phrases.data.map((p) => {\r\n            return { type: 'Phrase' as NodeType, data: p };\r\n          });\r\n\r\n          if (clickedNodes.at(-1) == currentClicked) {\r\n            setCurrentNodes({\r\n              totalItems: phrases.totalItems,\r\n              nodes: newNodes,\r\n            });\r\n            setTotalPages(phrases.totalPages);\r\n          }\r\n          setNodesDataInCache(\r\n            currentClicked.type,\r\n            clusterId,\r\n            currentPage,\r\n            newNodes,\r\n            phrases.totalPages,\r\n            phrases.totalItems\r\n          );\r\n        }\r\n      } else if (currentClicked.type === 'Phrase') {\r\n        const phraseId = (currentClicked.data as Phrase).phrase_id.toString();\r\n        const cached = getNodesFromCache(\r\n          currentClicked.type,\r\n          phraseId,\r\n          currentPage\r\n        );\r\n        if (cached) {\r\n          setTotalPages(cached.totalPages);\r\n          setCurrentNodes({\r\n            totalItems: cached.totalItems,\r\n            nodes: cached.nodes,\r\n          });\r\n        } else {\r\n          const items = await fetchItems(\r\n            controller,\r\n            domain,\r\n            collection,\r\n            phraseId,\r\n            apiKey,\r\n            currentPage,\r\n            dateRange[0],\r\n            dateRange[1],\r\n            [...labelsFilters, ...(metaGroupClicked ? [metaGroupClicked] : [])],\r\n            trendPeriods,\r\n            propertiesFilters\r\n          );\r\n          if (items.error) {\r\n            if (items.error.includes('AbortError')) {\r\n              return;\r\n            }\r\n            setError(items.error);\r\n            return setLoading(false);\r\n          }\r\n          setError(null);\r\n\r\n          const newNodes = items.data.map((i) => {\r\n            return { type: 'Item' as NodeType, data: i };\r\n          });\r\n\r\n          if (clickedNodes.at(-1) == currentClicked) {\r\n            setCurrentNodes({ totalItems: items.totalItems, nodes: newNodes });\r\n            setTotalPages(items.totalPages);\r\n          }\r\n\r\n          setNodesDataInCache(\r\n            currentClicked.type,\r\n            phraseId,\r\n            currentPage,\r\n            newNodes,\r\n            items.totalPages,\r\n            items.totalItems\r\n          );\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n    const controller = new AbortController();\r\n    if (\r\n      previousValues.current.domain !== domain ||\r\n      previousValues.current.apiKey !== apiKey ||\r\n      previousValues.current.collection !== collection ||\r\n      previousValues.current.clickedNodes != clickedNodes ||\r\n      previousValues.current.currentPage !== currentPage ||\r\n      previousValues.current.lastMetaGroup !== currentMetaGroup\r\n    ) {\r\n      fetchMetaClusters(controller).catch((e) => {\r\n        console.error(e);\r\n      });\r\n      fetchData(controller).catch((e) => {\r\n        console.error(e);\r\n        setLoading(false);\r\n      });\r\n\r\n      previousValues.current = {\r\n        domain,\r\n        apiKey,\r\n        collection,\r\n        clickedNodes,\r\n        currentPage,\r\n        refreshToken,\r\n        localRefreshToken,\r\n        lastMetaGroup: currentMetaGroup,\r\n      };\r\n    }\r\n\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [domain, collection, apiKey, clickedNodes, currentPage, currentMetaGroup]);\r\n\r\n  const nodeClicked = (node: { type: NodeType; id: string }) => {\r\n    const currentNodeDetails = getNodeDetails(clickedNodes.at(-1), collection);\r\n\r\n    if (currentMetaGroup !== 'text') {\r\n      return setLocalRefreshToken((current) => {\r\n        const [key, value] = node.id.split('$$');\r\n        setMetaGroupClicked({ key, value });\r\n        setCurrentMetaGroup('text');\r\n        return current.length > 2 ? '1' : current + '1';\r\n      });\r\n    }\r\n\r\n    setNodePageNumberInCache(\r\n      currentNodeDetails.type,\r\n      currentNodeDetails.id,\r\n      currentPage\r\n    );\r\n    let clickedNode: OneAIDataNode | null = null;\r\n    if (node.type === 'Cluster') {\r\n      clickedNode =\r\n        currentNodes.nodes.find(\r\n          (n) => (n.data as Cluster).cluster_id.toString() === node.id\r\n        ) ?? null;\r\n    } else if (node.type === 'Phrase') {\r\n      clickedNode =\r\n        currentNodes.nodes.find(\r\n          (n) => (n.data as Phrase).phrase_id.toString() === node.id\r\n        ) ?? null;\r\n    }\r\n\r\n    if (clickedNode) {\r\n      const nodeCachedPage = getNodePageNumberFromCache(\r\n        clickedNode.type,\r\n        getNodeId(clickedNode)\r\n      );\r\n      setCurrentPage(nodeCachedPage);\r\n      setClickedNodes((currentClickedCluster) => [\r\n        ...currentClickedCluster,\r\n        clickedNode as OneAIDataNode,\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const goBack = (skip: number = 1) => {\r\n    if (skip === 0) {\r\n      if (currentMetaGroup !== 'text') {\r\n        setMetaGroupClicked(null);\r\n        setCurrentMetaGroup('text');\r\n      }\r\n      return;\r\n    }\r\n\r\n    setClickedNodes((clickedClusters) => {\r\n      const originalClickedAmount = clickedClusters.length;\r\n      for (let i = 0; i < skip; i++) {\r\n        clickedClusters.pop();\r\n      }\r\n      const currentNodeDetails = getNodeDetails(\r\n        clickedClusters.at(-1),\r\n        collection\r\n      );\r\n      const nodeCachedPage = getNodePageNumberFromCache(\r\n        currentNodeDetails.type,\r\n        currentNodeDetails.id\r\n      );\r\n      setCurrentPage(nodeCachedPage);\r\n      const extraBackNodes = originalClickedAmount - skip;\r\n      if (extraBackNodes < 0) {\r\n        setLocalRefreshToken((current) => {\r\n          if (extraBackNodes === -1) {\r\n            setCurrentMetaGroup(metaGroupClicked?.key ?? 'text');\r\n            setMetaGroupClicked(null);\r\n          } else {\r\n            setMetaGroupClicked(null);\r\n            setCurrentMetaGroup('text');\r\n          }\r\n          return current.length > 2 ? '1' : current + '1';\r\n        });\r\n      }\r\n      return [...clickedClusters];\r\n    });\r\n  };\r\n\r\n  return currentNodes ? (\r\n    <OneAiAnalytics\r\n      dataNodes={currentNodes ?? { totalItems: 0, nodes: [] }}\r\n      currentNode={clickedNodes.at(-1)}\r\n      nodeClicked={nodeClicked}\r\n      goBackClicked={goBack}\r\n      currentPage={currentPage}\r\n      totalPagesAmount={totalPages}\r\n      nextPageClicked={() => setCurrentPage((page) => page + 1)}\r\n      prevPageClicked={() => setCurrentPage((page) => page - 1)}\r\n      loading={loading}\r\n      error={error}\r\n      nodesPath={[\r\n        { text: collection },\r\n        ...(metaGroupClicked\r\n          ? [\r\n              { text: metaGroupClicked.key },\r\n              { text: metaGroupClicked.value ?? '' },\r\n            ]\r\n          : []),\r\n        ...clickedNodes.map((node) => {\r\n          const { originalText, translatedText } =\r\n            getNodeOriginalAndTranslatedText(node);\r\n          return {\r\n            text: originalText ?? getNodeText(node),\r\n            translated: translatedText,\r\n          };\r\n        }),\r\n      ]}\r\n      dateRangeChanged={(from, to) =>\r\n        setLocalRefreshToken((current) => {\r\n          setDateRange([from, to]);\r\n          return current + '1';\r\n        })\r\n      }\r\n      labelsFilters={labelsFilters}\r\n      labelClicked={(key, value) => {\r\n        if (\r\n          !labelsFilters.some(\r\n            (keyValue) =>\r\n              keyValue.key.toLowerCase() === key.toLowerCase() &&\r\n              keyValue.value?.toLowerCase() === value.toLowerCase()\r\n          )\r\n        )\r\n          setLocalRefreshToken((current) => {\r\n            setLabelsFilters((labels) => [...labels, { key, value }]);\r\n            return current.length > 2 ? '1' : current + '1';\r\n          });\r\n      }}\r\n      labelFilterDeleted={(i) =>\r\n        setLocalRefreshToken((current) => {\r\n          setLabelsFilters((filters) => {\r\n            filters.splice(i, 1);\r\n            return [...filters];\r\n          });\r\n          return current.length > 2 ? '1' : current + '1';\r\n        })\r\n      }\r\n      trendPeriods={trendPeriods}\r\n      trendPeriodsChanged={(newTrendPeriod) =>\r\n        setLocalRefreshToken((current) => {\r\n          setTrendPeriods(newTrendPeriod);\r\n          return current + '1';\r\n        })\r\n      }\r\n      searchSimilarClusters={(text, controller) =>\r\n        searchSimilarClusters(controller, domain, collection, apiKey, text)\r\n      }\r\n      splitPhrase={(phraseId, controller) =>\r\n        splitPhrase(\r\n          controller,\r\n          domain,\r\n          collection,\r\n          apiKey,\r\n          phraseId,\r\n          setLocalRefreshToken\r\n        )\r\n      }\r\n      mergeClusters={(source, destination, controller) =>\r\n        mergeClusters(\r\n          controller,\r\n          domain,\r\n          collection,\r\n          apiKey,\r\n          source,\r\n          destination,\r\n          setLocalRefreshToken\r\n        )\r\n      }\r\n      toggleHide={(node, hide) =>\r\n        toggleHide(\r\n          domain,\r\n          collection,\r\n          apiKey,\r\n          node,\r\n          hide,\r\n          clickedNodes.at(-1),\r\n          setLocalRefreshToken\r\n        )\r\n      }\r\n      propertiesFilters={propertiesFilters}\r\n      setPropertiesFilters={(properties) =>\r\n        setLocalRefreshToken((current) => {\r\n          setPropertiesFilters(properties);\r\n          return current.length > 2 ? '1' : current + '1';\r\n        })\r\n      }\r\n      metaOptions={['text', ...uniqBy(metaOptions, (m) => m.toLowerCase())]}\r\n      currentMetaOption={currentMetaGroup}\r\n      metaOptionsChanged={(metaOptions) => setCurrentMetaGroup(metaOptions)}\r\n      refresh={() =>\r\n        setLocalRefreshToken((current) => {\r\n          return current.length > 2 ? '1' : current + '1';\r\n        })\r\n      }\r\n      {...rest}\r\n    />\r\n  ) : null;\r\n};\r\n\r\nasync function fetchClusters(\r\n  controller: AbortController,\r\n  domain: string,\r\n  collection: string,\r\n  apiKey: string,\r\n  page: number,\r\n  from: Date | null,\r\n  to: Date | null,\r\n  labelsFilters: MetadataKeyValue[],\r\n  trendPeriods: number,\r\n  propertiesFilters: Properties\r\n): Promise<{\r\n  totalPages: number;\r\n  totalItems: number;\r\n  data: Cluster[];\r\n  error: string | null;\r\n}> {\r\n  return await fetchApi(\r\n    controller,\r\n    `${domain}/clustering/v1/collections/${collection}/clusters`,\r\n    apiKey,\r\n    'clusters',\r\n    page,\r\n    from,\r\n    to,\r\n    labelsFilters,\r\n    trendPeriods,\r\n    propertiesFilters\r\n  );\r\n}\r\n\r\nasync function fetchPhrases(\r\n  controller: AbortController,\r\n  domain: string,\r\n  collection: string,\r\n  clusterId: string,\r\n  apiKey: string,\r\n  page: number,\r\n  from: Date | null,\r\n  to: Date | null,\r\n  labelsFilters: MetadataKeyValue[],\r\n  trendPeriods: number,\r\n  propertiesFilters: Properties\r\n): Promise<{\r\n  totalPages: number;\r\n  totalItems: number;\r\n  data: Phrase[];\r\n  error: string | null;\r\n}> {\r\n  return await fetchApi(\r\n    controller,\r\n    `${domain}/clustering/v1/collections/${collection}/clusters/${clusterId}/phrases`,\r\n    apiKey,\r\n    'phrases',\r\n    page,\r\n    from,\r\n    to,\r\n    labelsFilters,\r\n    trendPeriods,\r\n    propertiesFilters\r\n  );\r\n}\r\n\r\nasync function fetchItems(\r\n  controller: AbortController,\r\n  domain: string,\r\n  collection: string,\r\n  phraseId: string,\r\n  apiKey: string,\r\n  page: number,\r\n  from: Date | null,\r\n  to: Date | null,\r\n  labelsFilters: MetadataKeyValue[],\r\n  trendPeriods: number,\r\n  propertiesFilters: Properties\r\n): Promise<{\r\n  totalPages: number;\r\n  totalItems: number;\r\n  data: Item[];\r\n  error: string | null;\r\n}> {\r\n  return await fetchApi(\r\n    controller,\r\n    `${domain}/clustering/v1/collections/${collection}/phrases/${phraseId}/items`,\r\n    apiKey,\r\n    'items',\r\n    page,\r\n    from,\r\n    to,\r\n    labelsFilters,\r\n    trendPeriods,\r\n    propertiesFilters\r\n  );\r\n}\r\n\r\nasync function fetchMetaClustersApi(\r\n  controller: AbortController,\r\n  domain: string,\r\n  collection: string,\r\n  apiKey: string,\r\n  page: number,\r\n  from: Date | null,\r\n  to: Date | null,\r\n  labelsFilters: MetadataKeyValue[],\r\n  trendPeriods: number,\r\n  propertiesFilters: Properties,\r\n  metaGroup?: string\r\n): Promise<{\r\n  totalPages: number;\r\n  totalItems: number;\r\n  data: MetaCluster[];\r\n  error: string | null;\r\n}> {\r\n  return await fetchApi(\r\n    controller,\r\n    `${domain}/clustering/v1/collections/${collection}/metadata${\r\n      metaGroup ? `/${metaGroup}` : ''\r\n    }`,\r\n    apiKey,\r\n    'content',\r\n    page,\r\n    from,\r\n    to,\r\n    labelsFilters,\r\n    trendPeriods,\r\n    propertiesFilters,\r\n    `&group-by-meta-value=true${metaGroup ? '&include-metadata=true' : ''}`,\r\n    1000\r\n  );\r\n}\r\n\r\nasync function fetchApi<T>(\r\n  controller: AbortController,\r\n  url: string,\r\n  apiKey: string,\r\n  accessor: string,\r\n  page: number,\r\n  from: Date | null,\r\n  to: Date | null,\r\n  labelsFilters: MetadataKeyValue[],\r\n  trendPeriods: number,\r\n  propertiesFilters: Properties,\r\n  extraParams?: string,\r\n  limit?: number\r\n): Promise<{\r\n  totalPages: number;\r\n  totalItems: number;\r\n  data: T[];\r\n  error: string | null;\r\n}> {\r\n  const labelsFiltersString = labelsFilters\r\n    .map((metadataKeyValue) =>\r\n      metadataKeyValue.key && metadataKeyValue.value\r\n        ? `${metadataKeyValue.key} eq '${metadataKeyValue.value}'`\r\n        : ''\r\n    )\r\n    .filter((str) => str !== '');\r\n\r\n  const propertiesFiltersString = Object.keys(propertiesFilters).map((key) => {\r\n    const value = propertiesFilters[key];\r\n    if (value) {\r\n      return `${key} neq '${value}'`;\r\n    }\r\n\r\n    return '';\r\n  });\r\n\r\n  try {\r\n    const res = await fetch(\r\n      encodeURI(\r\n        `${url}?page=${page}&limit=${\r\n          limit !== undefined ? limit : PAGE_SIZE\r\n        }&translate=true` +\r\n          (from ? `&from-date=${format(from, 'yyyy-MM-dd')}` : '') +\r\n          (to ? `&to-date=${format(to, 'yyyy-MM-dd')}` : '') +\r\n          (labelsFiltersString.length > 0\r\n            ? `&item-metadata=${labelsFiltersString.join(' and ')}`\r\n            : '') +\r\n          (trendPeriods > 1\r\n            ? `&include-trends=true&trend-periods-limit=${trendPeriods}`\r\n            : '') +\r\n          (propertiesFiltersString.length > 0\r\n            ? `&properties-query=${propertiesFiltersString.join(' and ')}`\r\n            : '') +\r\n          (extraParams ? extraParams : '')\r\n      ),\r\n      {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json', 'api-key': apiKey },\r\n        signal: controller.signal,\r\n      }\r\n    );\r\n\r\n    if (res.status !== 200 || !res.ok)\r\n      return {\r\n        totalPages: 0,\r\n        totalItems: 0,\r\n        data: [],\r\n        error:\r\n          'Error fetching data, status: ' +\r\n          res.status +\r\n          ': ' +\r\n          (await res.text()),\r\n      };\r\n\r\n    const json = await res.json();\r\n\r\n    return {\r\n      totalPages: json['total_pages'],\r\n      totalItems: json['total_items'],\r\n      data: json[accessor],\r\n      error: null,\r\n    };\r\n  } catch (e) {\r\n    const error = String(e);\r\n    console.error('error occurred ->', error);\r\n\r\n    return {\r\n      totalPages: 0,\r\n      totalItems: 0,\r\n      data: [],\r\n      error: `Error fetching data, ${error}`,\r\n    };\r\n  }\r\n}\r\n\r\nfunction getNodesFromCache(\r\n  parentType: string,\r\n  parentId: string,\r\n  page: number\r\n): {\r\n  nodes: OneAIDataNode[];\r\n  totalItems: number;\r\n  totalPages: number;\r\n  time: Date;\r\n} | null {\r\n  const cached = cache.get(assembleCacheId(parentType, parentId, page));\r\n  if (cached && getSecondsDiff(cached.time, new Date()) < 90) {\r\n    return cached;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction setNodesDataInCache(\r\n  parentType: string,\r\n  parentId: string,\r\n  page: number,\r\n  nodes: OneAIDataNode[],\r\n  totalPages: number,\r\n  totalItems: number\r\n) {\r\n  cache.set(assembleCacheId(parentType, parentId, page), {\r\n    nodes: nodes,\r\n    totalPages: totalPages,\r\n    time: new Date(),\r\n    totalItems: totalItems,\r\n  });\r\n}\r\n\r\nfunction getNodePageNumberFromCache(nodeType: string, nodeId: string): number {\r\n  const cached = nodeToPageCache.get(assembleCacheId(nodeType, nodeId));\r\n  if (cached) {\r\n    return cached;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nfunction setNodePageNumberInCache(\r\n  nodeType: string,\r\n  nodeId: string,\r\n  page: number\r\n) {\r\n  nodeToPageCache.set(assembleCacheId(nodeType, nodeId), page);\r\n}\r\n\r\nfunction assembleCacheId(type: string, id: string, page: number = 0): string {\r\n  return `${type}-${id}-${page}`;\r\n}\r\n\r\nasync function searchSimilarClusters(\r\n  controller: AbortController,\r\n  domain: string,\r\n  collection: string,\r\n  apiKey: string,\r\n  text: string\r\n): Promise<\r\n  { id: string; text: string; translation: string | null | undefined }[]\r\n> {\r\n  try {\r\n    const res = await fetch(\r\n      `${domain}/clustering/v1/collections/${collection}/clusters/find?text=${text}&translate=true`,\r\n      {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json', 'api-key': apiKey },\r\n        signal: controller.signal,\r\n      }\r\n    );\r\n\r\n    if (res.status !== 200 || !res.ok) return [];\r\n\r\n    const clusters = (await res.json()) as {\r\n      cluster_id: string;\r\n      cluster_text: string;\r\n      similarity: number;\r\n      item_original_text: string;\r\n      item_translated_text?: null | string;\r\n    }[];\r\n    if (!clusters || clusters.length === 0) return [];\r\n\r\n    return clusters\r\n      .sort((c1, c2) => c2.similarity - c1.similarity)\r\n      .map((c) => {\r\n        return {\r\n          id: c.cluster_id,\r\n          text: c.cluster_text,\r\n          translation: c.item_translated_text,\r\n        };\r\n      });\r\n  } catch (e) {\r\n    console.error('error occurred ->', e);\r\n    return [];\r\n  }\r\n}\r\n\r\nasync function splitPhrase(\r\n  controller: AbortController,\r\n  domain: string,\r\n  collection: string,\r\n  apiKey: string,\r\n  phraseId: string,\r\n  setLocalRefreshToken: React.Dispatch<React.SetStateAction<string>>\r\n): Promise<{ status: 'Success' | 'error'; message: string }> {\r\n  try {\r\n    const res = await fetch(\r\n      `${domain}/clustering/v1/collections/${collection}/phrases/${phraseId}/split`,\r\n      {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json', 'api-key': apiKey },\r\n        signal: controller.signal,\r\n      }\r\n    );\r\n\r\n    if (res.status !== 200 || !res.ok)\r\n      return { status: 'error', message: 'unknown' };\r\n\r\n    const json = await res.json();\r\n\r\n    if (!json.message) {\r\n      setLocalRefreshToken((current) => {\r\n        if (current.length > 5) {\r\n          return '';\r\n        }\r\n\r\n        return current + '1';\r\n      });\r\n    }\r\n\r\n    return json;\r\n  } catch (e) {\r\n    console.error('error occurred ->', e);\r\n    return { status: 'error', message: String(e) };\r\n  }\r\n}\r\n\r\nasync function mergeClusters(\r\n  controller: AbortController,\r\n  domain: string,\r\n  collection: string,\r\n  apiKey: string,\r\n  source: string[],\r\n  destination: string,\r\n  setLocalRefreshToken: React.Dispatch<React.SetStateAction<string>>\r\n): Promise<{ status: 'Success' | 'error'; message: string }> {\r\n  try {\r\n    const res = await fetch(\r\n      `${domain}/clustering/v1/collections/${collection}/merge`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          'api-key': apiKey,\r\n        },\r\n        body: JSON.stringify({\r\n          source_clusters: source,\r\n          destination_cluster: destination,\r\n        }),\r\n        signal: controller.signal,\r\n      }\r\n    );\r\n\r\n    if (res.status !== 200 || !res.ok)\r\n      return { status: 'error', message: 'unknown' };\r\n\r\n    const json = await res.json();\r\n\r\n    if (!json.message) {\r\n      setLocalRefreshToken((current) => {\r\n        if (current.length > 5) {\r\n          return '';\r\n        }\r\n\r\n        return current + '1';\r\n      });\r\n    }\r\n\r\n    return json;\r\n  } catch (e) {\r\n    console.error('error occurred ->', e);\r\n    return { status: 'error', message: String(e) };\r\n  }\r\n}\r\n\r\nasync function toggleHide(\r\n  domain: string,\r\n  collection: string,\r\n  apiKey: string,\r\n  node: {\r\n    type: NodeType;\r\n    id: string;\r\n    text: string;\r\n    properties: Properties;\r\n  } | null,\r\n  hide: string,\r\n  currentClickedNode: OneAIDataNode | null | undefined,\r\n  setLocalRefreshToken: React.Dispatch<React.SetStateAction<string>>\r\n): Promise<void> {\r\n  if (!node) return;\r\n  try {\r\n    const clusterId =\r\n      node.type === 'Cluster' ? node.id : getNodeId(currentClickedNode!);\r\n    const res = await fetch(\r\n      `${domain}/clustering/v1/collections/${collection}/clusters/${clusterId}${\r\n        node.type === 'Phrase' ? `/phrases/${node.id}` : ''\r\n      }/settings`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          'api-key': apiKey,\r\n        },\r\n        body: JSON.stringify({\r\n          properties: {\r\n            hide: hide,\r\n          },\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (res.status !== 200 || !res.ok) return;\r\n\r\n    setLocalRefreshToken((current) => {\r\n      if (current.length > 5) {\r\n        return '';\r\n      }\r\n\r\n      return current + '1';\r\n    });\r\n  } catch (e) {\r\n    console.error('error occurred ->', e);\r\n  }\r\n}\r\n","import React, { FC, useEffect, useMemo, useState } from 'react';\r\nimport { PAGE_SIZE } from '../common/configurations/commonConfigurations';\r\nimport {\r\n  ExampleNode,\r\n  NodeType,\r\n  OneAIAnalyticsStaticDataWrapperProps,\r\n  OneAIDataNode,\r\n} from '../common/types/componentsInputs';\r\nimport { Cluster, Item, Phrase } from '../common/types/modals';\r\nimport { chunks } from '../common/utils/utils';\r\nimport { OneAiAnalytics } from '../components/OneAiAnalytics';\r\n\r\n// Please do not use types off of a default export module or else Storybook Docs will suffer.\r\n// see: https://github.com/storybookjs/storybook/issues/9556\r\n/**\r\n * One AI Analytics static data wrapper component\r\n */\r\nexport const OneAIAnalyticsStaticDataWrapper: FC<OneAIAnalyticsStaticDataWrapperProps> =\r\n  ({ exampleNodes, collection = '', ...rest }) => {\r\n    const [currentNodes, setCurrentNodes] = useState(\r\n      exampleNodes as ExampleNode[]\r\n    );\r\n    const [clickedNodes, setClickedNodes] = useState([] as ExampleNode[]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const currentPages = useMemo(\r\n      () => chunks(currentNodes, PAGE_SIZE),\r\n      [currentNodes]\r\n    );\r\n\r\n    useEffect(() => {\r\n      setClickedNodes([]);\r\n      setCurrentPage(0);\r\n      setCurrentNodes(exampleNodes);\r\n    }, [exampleNodes]);\r\n\r\n    const nodeClicked = (node: { type: NodeType; id: string }) => {\r\n      setCurrentNodes((currentClusters) => {\r\n        const clickedNode = currentPages.at(currentPage)?.at(Number(node.id));\r\n        if (clickedNode) {\r\n          setClickedNodes((currentClickedCluster) => [\r\n            ...currentClickedCluster,\r\n            clickedNode,\r\n          ]);\r\n          setCurrentPage(0);\r\n        }\r\n\r\n        return (\r\n          clickedNode?.children ??\r\n          clickedNode?.items?.map((item) => {\r\n            return { id: item, items_count: 1, text: item, type: 'Item' };\r\n          }) ??\r\n          currentClusters\r\n        );\r\n      });\r\n    };\r\n\r\n    const goBack = (skip: number = 0) => {\r\n      setClickedNodes((clickedClusters) => {\r\n        for (let i = 0; i < skip; i++) {\r\n          clickedClusters.pop();\r\n        }\r\n        setCurrentPage(0);\r\n        setCurrentNodes(clickedClusters.at(-1)?.children ?? exampleNodes);\r\n        return [...clickedClusters];\r\n      });\r\n    };\r\n\r\n    const currentClickedNode: OneAIDataNode | undefined = useMemo(() => {\r\n      const currentClicked = clickedNodes.at(-1);\r\n      if (currentClicked) {\r\n        return {\r\n          type: currentClicked.type,\r\n          data: getNodeData(currentClicked, 0),\r\n        } as OneAIDataNode;\r\n      }\r\n\r\n      return;\r\n    }, [clickedNodes]);\r\n\r\n    return (\r\n      <OneAiAnalytics\r\n        dataNodes={{\r\n          totalItems: exampleNodes.reduce(\r\n            (acc, node) => acc + node.items_count,\r\n            0\r\n          ),\r\n          nodes:\r\n            currentPages.at(currentPage)?.map((node, index) => {\r\n              return { type: node.type, data: getNodeData(node, index)! };\r\n            }) ?? [],\r\n        }}\r\n        currentNode={currentClickedNode}\r\n        nodeClicked={nodeClicked}\r\n        goBackClicked={goBack}\r\n        currentPage={currentPage}\r\n        totalPagesAmount={currentPages.length}\r\n        nextPageClicked={() => setCurrentPage((page) => page + 1)}\r\n        prevPageClicked={() => setCurrentPage((page) => page - 1)}\r\n        nodesPath={[\r\n          { text: collection },\r\n          ...clickedNodes.map((node) => ({ text: node.text })),\r\n        ]}\r\n        {...rest}\r\n      />\r\n    );\r\n  };\r\n\r\nfunction getNodeData(\r\n  node: ExampleNode,\r\n  index: number\r\n): Cluster | Phrase | Item | undefined {\r\n  if (node.type === 'Cluster') {\r\n    return {\r\n      cluster_id: index,\r\n      cluster_phrase: node.text,\r\n      collection: '',\r\n      items_count: node.items_count,\r\n      phrases_count: node.children?.length ?? 0,\r\n      metadata: {},\r\n    } as Cluster;\r\n  }\r\n  if (node.type === 'Phrase') {\r\n    return {\r\n      phrase_id: index,\r\n      metadata: {},\r\n      items_count: node.items_count,\r\n      text: node.text,\r\n    } as Phrase;\r\n  }\r\n  if (node.type === 'Item') {\r\n    return {\r\n      id: index,\r\n      original_text: node.text,\r\n      metadata: {},\r\n    } as Item;\r\n  }\r\n\r\n  return;\r\n}\r\n","import moment from 'moment';\r\nexport const IGNORE_ID = 'False';\r\nexport const CUSTOM_VALUE_ID = 'CUSTOM_VALUE';\r\n\r\nexport const COLUMN_TYPES_OPTIONS = [\r\n  { id: IGNORE_ID, label: 'ignore' },\r\n  { id: 'input', label: 'text' },\r\n  { id: 'input_translated', label: 'translation' },\r\n  {\r\n    id: 'timestamp',\r\n    label: 'date & time',\r\n    validation: (value: string) =>\r\n      moment(value, moment.ISO_8601, true).isValid(),\r\n  },\r\n  { id: CUSTOM_VALUE_ID, label: 'custom value' },\r\n];\r\n","import { Listbox, Transition } from '@headlessui/react';\r\nimport { ChevronDownIcon } from '@heroicons/react/24/outline';\r\nimport React, { Fragment } from 'react';\r\nimport { IGNORE_ID } from './constants';\r\n\r\nexport default function SingleSelect({\r\n  options,\r\n  selectedLabelId,\r\n  onSelect,\r\n}: {\r\n  options: { id: string; label: string }[];\r\n  selectedLabelId: string | null;\r\n  onSelect: (selectedLabelId: string) => void;\r\n}) {\r\n  const selected = options.find((o) => o.id === (selectedLabelId ?? IGNORE_ID));\r\n\r\n  return (\r\n    <Listbox>\r\n      <div className=\"relative bg-[#36334B] rounded-lg min-w-[100px]\">\r\n        <Listbox.Button className=\"relative text-left focus:outline-none text-sm flex items-center px-2 py-2 justify-between w-full\">\r\n          <span className=\"text-[#111111] dark:text-gray-300 text-sm mr-1\">\r\n            {selected?.label ?? 'Unknown'}\r\n          </span>\r\n          <span>\r\n            <ChevronDownIcon\r\n              className=\"h-4 w-4 text-gray-200\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          </span>\r\n        </Listbox.Button>\r\n        <Transition\r\n          as={Fragment}\r\n          leave=\"transition ease-in duration-100\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <Listbox.Options className=\"absolute mt-1 z-10 p-1 max-h-60 scrollbar-thin scrollbar-thumb-[#747189] scrollbar-track-[#272533] overflow-y-scroll scrollbar-thumb-rounded-full scrollbar-track-rounded-full rounded-md bg-gray-600 dark:bg-[#272533] py-1 text-base shadow-lg ring-1 ring-gray-500 dark:ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\r\n            {options.map((key, i) => (\r\n              <DropdownOption\r\n                label={key.label}\r\n                value={key.id}\r\n                selected={selected?.id === key.id}\r\n                labelClicked={onSelect}\r\n                key={i}\r\n              />\r\n            ))}\r\n          </Listbox.Options>\r\n        </Transition>\r\n      </div>\r\n    </Listbox>\r\n  );\r\n}\r\n\r\nfunction DropdownOption({\r\n  label,\r\n  value,\r\n  selected,\r\n  labelClicked,\r\n}: {\r\n  label: string;\r\n  value: string;\r\n  selected: boolean;\r\n  labelClicked: (label: string) => void;\r\n}) {\r\n  return (\r\n    <Listbox.Option\r\n      className={({ active }) =>\r\n        `relative cursor-default select-none py-2 pr-4 ${\r\n          active\r\n            ? 'bg-gray-400 dark:bg-[#444154] text-white'\r\n            : 'text-gray-300 dark:text-[#747189]'\r\n        }`\r\n      }\r\n      onClick={() => labelClicked(value)}\r\n      value={value}\r\n    >\r\n      <span className=\"w-full flex\">\r\n        <div className=\"flex items-center\">\r\n          <input\r\n            checked={selected}\r\n            onChange={() => {}}\r\n            type=\"radio\"\r\n            className=\"w-4 h-4 text-[#4D4DFE] bg-gray-100 border-gray-300 focus:ring-[#4D4DFE] dark:ring-offset-gray-800 focus:ring-2 dark:bg-[#322F46] dark:border-[#322F46]\"\r\n          />\r\n          <label\r\n            className={`text-sm ml-2 font-medium text-gray-900 dark:text-gray-300 block truncate lowercase first-letter:uppercase ${\r\n              selected ? 'font-medium' : 'font-normal'\r\n            }`}\r\n          >\r\n            {label}\r\n          </label>\r\n        </div>\r\n      </span>\r\n    </Listbox.Option>\r\n  );\r\n}\r\n","import Papa from 'papaparse';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {\r\n  COLUMN_TYPES_OPTIONS,\r\n  CUSTOM_VALUE_ID,\r\n  IGNORE_ID,\r\n} from '../common/components/UploadCSVComponents/constants';\r\nimport SingleSelect from '../common/components/UploadCSVComponents/SingleSelect';\r\nimport { UploadParams } from '../common/types/componentsInputs';\r\n\r\nconst allowedExtensions = ['csv'];\r\n\r\nconst OneAiUpload = ({\r\n  domain = 'https://api.oneai.com',\r\n  apiKey = '',\r\n  collection = '',\r\n  darkMode = true,\r\n  steps = '',\r\n  input_skill,\r\n  resetAfterUpload = true,\r\n  expected_languages = '',\r\n  override_language_detection = false,\r\n  createCollection = false,\r\n  collectionDomain = 'survey',\r\n  isPublic = false,\r\n}: UploadParams) => {\r\n  const [data, setData] = useState([] as string[][]);\r\n  const [error, setError] = useState(null as string | null);\r\n  const [file, setFile] = useState(null as File | null);\r\n  const [columnsConfigurations, setColumnsConfigurations] = useState(\r\n    [] as { id: string; customText?: string }[]\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploaded, setUploaded] = useState(false);\r\n  const [csvHasHeaders, setCsvHasHeaders] = useState(true);\r\n  const [numberOfRowsToSkip, setNumberOfRowsToSkip] = useState(0);\r\n  const [numberOfRowsToDisplay, setNumberOfRowsToDisplay] = useState(100);\r\n  const [maxRows, setMaxRows] = useState(null as number | null);\r\n  const [taskId, setTaskId] = useState(null as string | null);\r\n  const [uploadStatus, setUploadStatus] = useState(null as string | null);\r\n  const currentParser = useRef(null as Papa.Parser | null);\r\n\r\n  useEffect(() => {\r\n    if (!taskId || !uploaded) return;\r\n    const interval = setInterval(async () => {\r\n      const res = await fetch(\r\n        encodeURI(`${domain}/clustering/v1/collections/status/${taskId}`),\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'api-key': apiKey ?? '',\r\n          },\r\n        }\r\n      );\r\n      const data = await res.json();\r\n      console.log('data status', data);\r\n      if (data.status === 'success') {\r\n        setUploaded(true);\r\n        setUploadStatus('completed');\r\n        if (resetAfterUpload) {\r\n          handleReset();\r\n        }\r\n        clearInterval(interval);\r\n      } else if (data.status === 'failed') {\r\n        setUploadStatus('failed');\r\n        clearInterval(interval);\r\n      } else {\r\n        setUploadStatus('in progress');\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [taskId, uploaded]);\r\n\r\n  const handleFileChange = (e: { target: { files: FileList | null } }) => {\r\n    setError(null);\r\n    setUploaded(false);\r\n    try {\r\n      currentParser.current?.abort();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    const inputFile = e.target.files?.item(0);\r\n    if (!inputFile) return;\r\n\r\n    // Check if user has entered the file\r\n\r\n    // Check the file extensions, if it not\r\n    // included in the allowed extensions\r\n    // we show the error\r\n    const fileExtension = inputFile.type.split('/')[1];\r\n    if (!allowedExtensions.includes(fileExtension)) {\r\n      setError('Please input a csv file');\r\n      return;\r\n    }\r\n\r\n    // If input type is correct set the state\r\n    setFile(inputFile);\r\n    handleParse(inputFile);\r\n  };\r\n\r\n  const handleParse = (file: File) => {\r\n    // If user clicks the parse button without\r\n    // a file we show a error\r\n    if (!file) return setError('Enter a valid file');\r\n\r\n    Papa.parse(file, {\r\n      worker: true, // Don't bog down the main thread if its a big file\r\n      encoding: 'utf-8',\r\n      chunkSize: 512,\r\n      step: function ({ data, errors }, parser) {\r\n        if (errors.length > 0) {\r\n          console.log('errors', errors[0]);\r\n        }\r\n\r\n        currentParser.current = parser;\r\n        setData((prev) => {\r\n          if (prev.length === 0) {\r\n            setColumnsConfigurations(\r\n              (data as string[]).map(() => ({ id: IGNORE_ID }))\r\n            );\r\n          }\r\n\r\n          return [...prev, data as string[]];\r\n        });\r\n      },\r\n      complete: function (results, file) {\r\n        console.log('parsing complete read', results, file);\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setData([]);\r\n    setFile(null);\r\n    setColumnsConfigurations([]);\r\n    setCsvHasHeaders(true);\r\n    setNumberOfRowsToSkip(0);\r\n    setMaxRows(null);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    console.log('uploading');\r\n    if (!file) return;\r\n    setLoading(true);\r\n    if (createCollection) {\r\n      try {\r\n        const res = await fetch(\r\n          encodeURI(`${domain}/clustering/v1/collections/${collection}/create`),\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'api-key': apiKey ?? '',\r\n            },\r\n            body: JSON.stringify({\r\n              access: {\r\n                ...(isPublic && {\r\n                  all: {\r\n                    query: true,\r\n                    list_clusters: true,\r\n                    list_items: true,\r\n                    add_items: false,\r\n                    edit_clusters: false,\r\n                    discoverable: true,\r\n                  },\r\n                }),\r\n              },\r\n              domain: collectionDomain,\r\n            }),\r\n          }\r\n        );\r\n\r\n        if (!res.ok) {\r\n          const error = await res.json();\r\n          console.error('error', error);\r\n          setLoading(false);\r\n          setError(\"Couldn't create collection\");\r\n          return;\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n        setLoading(false);\r\n        setError(\"Couldn't create collection\");\r\n        return;\r\n      }\r\n      console.log('collection created');\r\n    }\r\n\r\n    const fetchFormData = new FormData();\r\n    fetchFormData.append('file', file);\r\n\r\n    const appendSteps: string[] =\r\n      steps.length > 0\r\n        ? steps\r\n            .replaceAll('[', '')\r\n            .replaceAll(']', '')\r\n            .replaceAll(' ', '')\r\n            .split(',')\r\n        : [];\r\n\r\n    const expectedLanguages =\r\n      expected_languages.length > 0\r\n        ? expected_languages\r\n            .replaceAll('[', '')\r\n            .replaceAll(']', '')\r\n            .replaceAll(' ', '')\r\n            .split(',')\r\n        : [];\r\n\r\n    try {\r\n      const pipelineJson = {\r\n        content_type: 'text/csv',\r\n        multilingual: {\r\n          enabled: true,\r\n          ...(expectedLanguages.length > 0 && {\r\n            expected_languages: expectedLanguages,\r\n          }),\r\n          ...(override_language_detection && { override_language_detection }),\r\n        },\r\n        steps: [\r\n          ...(appendSteps.length > 0\r\n            ? appendSteps.map((step) => ({ skill: step }))\r\n            : []),\r\n          {\r\n            skill: 'clustering',\r\n            params: {\r\n              collection,\r\n              ...(input_skill && { input_skill }),\r\n            },\r\n          },\r\n        ],\r\n        csv_params: {\r\n          columns: columnsConfigurations.map((cc) =>\r\n            cc.id === IGNORE_ID\r\n              ? false\r\n              : cc.id === CUSTOM_VALUE_ID\r\n              ? cc.customText\r\n              : cc.id\r\n          ),\r\n          skip_rows: (csvHasHeaders ? 1 : 0) + numberOfRowsToSkip,\r\n          max_rows: maxRows !== null ? maxRows : data.length,\r\n        },\r\n      };\r\n      console.log('pipelineJson', pipelineJson);\r\n\r\n      const uploadRes = await fetch(\r\n        encodeURI(\r\n          `${domain}/api/v0/pipeline/async/file?pipeline=${JSON.stringify(\r\n            pipelineJson\r\n          )}`\r\n        ),\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'text/csv',\r\n            'api-key': apiKey ?? '',\r\n            'Content-Disposition': `attachment; filename=${encodeURI(\r\n              file.name\r\n            )}`,\r\n          },\r\n          body: file,\r\n        }\r\n      );\r\n\r\n      if (!uploadRes.ok) {\r\n        const error = await uploadRes.json();\r\n        console.error('error', error);\r\n        setLoading(false);\r\n        setError(\"Couldn't upload file\");\r\n        return;\r\n      }\r\n\r\n      const statusData = await uploadRes.json();\r\n      console.log('file uploaded', statusData);\r\n      setUploadStatus(statusData['status']);\r\n      setTaskId(statusData['task_id']);\r\n    } catch (e) {\r\n      console.error(e);\r\n      setLoading(false);\r\n      setError(\"Couldn't upload file\");\r\n      return;\r\n    }\r\n\r\n    setError(null);\r\n\r\n    if (resetAfterUpload) {\r\n      handleReset();\r\n    }\r\n\r\n    setUploaded(true);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    ReactTooltip.hide();\r\n    ReactTooltip.rebuild();\r\n  });\r\n\r\n  const uploadDisabled =\r\n    columnsConfigurations.filter((c) => c.id === 'input').length !== 1;\r\n\r\n  return (\r\n    <div\r\n      className={`oneai-analytics-namespace h-full w-full p-2 ${\r\n        darkMode ? 'dark' : ''\r\n      }`}\r\n    >\r\n      <ReactTooltip id=\"global\" />\r\n      <div className=\"h-full w-full overflow-hidden bg-[#272535] flex flex-col items-center text-white\">\r\n        {error ? (\r\n          <div className=\"w-full p-2 relative h-2/6\">\r\n            <div className=\"absolute top-0 right-0 p-2\">\r\n              <svg\r\n                onClick={() => setError(null)}\r\n                className=\"w-6 h-6 text-white cursor-pointer\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M6 18L18 6M6 6l12 12\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div className=\"w-full h-full flex flex-col items-center justify-center\">\r\n              <svg\r\n                className=\"w-20 h-20 text-red-500\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M6 18L18 6M6 6l12 12\"\r\n                />\r\n              </svg>\r\n              <div className=\"text-2xl font-bold mt-2\">{error}</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {uploaded ? (\r\n          <div className=\"w-full p-2 relative h-2/6\">\r\n            <div className=\"absolute top-0 right-0 p-2\">\r\n              <svg\r\n                onClick={() => setUploaded(false)}\r\n                className=\"w-6 h-6 text-white cursor-pointer\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M6 18L18 6M6 6l12 12\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div className=\"w-full h-full flex flex-col items-center justify-center\">\r\n              <svg\r\n                className=\"w-20 h-20 text-green-500\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M5 13l4 4L19 7\"\r\n                />\r\n              </svg>\r\n              <h1 className=\"text-2xl font-bold mt-4\">Upload Complete</h1>\r\n              <p className=\"text-lg mt-2\">\r\n                {data.length > 0 ? (maxRows ?? data.length) + ' items' : 'Data'}{' '}\r\n                has been uploaded to ' {collection} '\r\n              </p>\r\n              <p>Upload status: {uploadStatus}</p>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {data.length > 0 ? (\r\n          <div\r\n            className={`w-full p-2 ${uploaded || error ? 'h-4/6' : 'h-full'}`}\r\n          >\r\n            {loading ? (\r\n              <div className=\"absolute top-0 left-0 w-full h-full bg-black opacity-50 z-10\">\r\n                <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 flex flex-col items-center text-center\">\r\n                  <svg\r\n                    className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <circle\r\n                      className=\"opacity-25\"\r\n                      cx=\"12\"\r\n                      cy=\"12\"\r\n                      r=\"10\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"4\"\r\n                    ></circle>\r\n                    <path\r\n                      className=\"opacity-75\"\r\n                      fill=\"currentColor\"\r\n                      d=\"M4 12a8 8 0 018-8v1a7 7 0 00-7 7h1z\"\r\n                    ></path>\r\n                  </svg>\r\n                  <span className=\"text-white\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            <div\r\n              className={\r\n                'h-full w-full flex flex-col relative ' +\r\n                (loading ? 'pointer-events-none' : '')\r\n              }\r\n            >\r\n              <div className=\"h-auto w-full flex justify-between\">\r\n                <span className=\"text-gray-200 pl-2\">\r\n                  Select columns for upload to{' '}\r\n                  <span className=\"text-white\">' {collection} '</span>\r\n                </span>\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"text-gray-200 pr-2\">Preview rows</span>\r\n                  <input\r\n                    className=\"w-16 h-8 text-center text-gray-700 dark:text-gray-400 bg-gray-200 dark:bg-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-600 focus:border-transparent\"\r\n                    type=\"number\"\r\n                    value={numberOfRowsToDisplay}\r\n                    onChange={(e) =>\r\n                      setNumberOfRowsToDisplay(Number(e.target.value))\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"relative overflow-auto max-h-full block shadow-md sm:rounded-lg grow w-full scrollbar-upload\">\r\n                <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                  <thead className=\"text-xs text-gray-700 uppercase dark:text-gray-400 sticky top-0 bg-[#2B293B]\">\r\n                    <tr>\r\n                      {data[0].map((header, i) => (\r\n                        <th\r\n                          key={`${header} - ${i}`}\r\n                          scope=\"col\"\r\n                          className=\"px-2 py-3 w-max\"\r\n                        >\r\n                          <div className=\"w-full flex flex-col items-start\">\r\n                            <div className=\"w-max\">\r\n                              <SingleSelect\r\n                                options={COLUMN_TYPES_OPTIONS}\r\n                                selectedLabelId={\r\n                                  columnsConfigurations[i].id ?? null\r\n                                }\r\n                                onSelect={(selectedLabelId) => {\r\n                                  setColumnsConfigurations((prev) => {\r\n                                    const newColumnsConfigurations = [...prev];\r\n                                    newColumnsConfigurations[i] = {\r\n                                      id: selectedLabelId,\r\n                                      ...(selectedLabelId ===\r\n                                        CUSTOM_VALUE_ID && {\r\n                                        customText: csvHasHeaders\r\n                                          ? header\r\n                                          : `Column ${i + 1}`,\r\n                                      }),\r\n                                    };\r\n                                    return newColumnsConfigurations;\r\n                                  });\r\n                                }}\r\n                              />\r\n                              <div className=\"w-max h-6\">\r\n                                {columnsConfigurations[i].id ===\r\n                                CUSTOM_VALUE_ID ? (\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\r\n                                    placeholder={\r\n                                      columnsConfigurations[i].customText\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      (columnsConfigurations[i].customText =\r\n                                        e.target.value.length > 0\r\n                                          ? e.target.value\r\n                                          : csvHasHeaders\r\n                                          ? header\r\n                                          : `Column ${i + 1}`)\r\n                                    }\r\n                                  />\r\n                                ) : null}\r\n                              </div>\r\n                            </div>\r\n                            <span className=\"w-max pl-1\">\r\n                              {csvHasHeaders && header\r\n                                ? header\r\n                                : `Column ${i + 1}`}\r\n                            </span>\r\n                          </div>\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"h-96 overflow-y-auto\">\r\n                    {data\r\n                      .slice(csvHasHeaders ? 1 : 0, numberOfRowsToDisplay)\r\n                      .map((row, i) => (\r\n                        <tr\r\n                          key={i}\r\n                          className=\"border-b border-gray-200 dark:border-gray-700\"\r\n                        >\r\n                          {row.map((cell, i) => (\r\n                            <td\r\n                              key={i}\r\n                              className=\"px-2 py-3 max-w-[200px] truncate\"\r\n                            >\r\n                              {cell}\r\n                            </td>\r\n                          ))}\r\n                        </tr>\r\n                      ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"absolute bottom-4 w-full\">\r\n                <div className=\"flex justify-between mb-2 p-4 backdrop-blur-[2px]\">\r\n                  <div className=\"flex\">\r\n                    <div className=\"flex items-center mr-4\">\r\n                      <label\r\n                        htmlFor=\"checkbox\"\r\n                        className=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\r\n                      >\r\n                        CSV has headers\r\n                      </label>\r\n                      <input\r\n                        checked={csvHasHeaders}\r\n                        onChange={(e) => setCsvHasHeaders(e.target.checked)}\r\n                        id=\"checkbox\"\r\n                        type=\"checkbox\"\r\n                        className=\"w-4 h-4 text-indigo-600 bg-gray-100 border-gray-300 rounded focus:ring-indigo-500 dark:focus:ring-indigo-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                      <label\r\n                        htmlFor=\"checkbox\"\r\n                        data-for=\"global\"\r\n                        data-tip=\"Limit number of rows to upload\"\r\n                        className=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\r\n                      >\r\n                        Upload rows\r\n                      </label>\r\n                      <input\r\n                        value={maxRows ?? data.length}\r\n                        onChange={(e) => setMaxRows(Number(e.target.value))}\r\n                        type=\"number\"\r\n                        className=\"w-16 h-8 text-center text-gray-700 dark:text-gray-400 bg-gray-200 dark:bg-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-600 focus:border-transparent\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                      <label\r\n                        htmlFor=\"checkbox\"\r\n                        className=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\r\n                      >\r\n                        Skip rows\r\n                      </label>\r\n                      <input\r\n                        value={numberOfRowsToSkip}\r\n                        onChange={(e) =>\r\n                          setNumberOfRowsToSkip(Number(e.target.value))\r\n                        }\r\n                        type=\"number\"\r\n                        className=\"w-16 h-8 text-center text-gray-700 dark:text-gray-400 bg-gray-200 dark:bg-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-600 focus:border-transparent\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={handleReset}\r\n                      className=\"text-gray-400 font-medium px-5 text-center hover:text-gray-300 mr-12\"\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                    <span\r\n                      data-for=\"global\"\r\n                      data-tip={\r\n                        uploadDisabled\r\n                          ? 'You must select one column for text'\r\n                          : 'Upload items'\r\n                      }\r\n                    >\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => handleUpload()}\r\n                        disabled={uploadDisabled}\r\n                        className={`font-medium rounded-sm text-sm px-5 py-2.5 text-center ${\r\n                          uploadDisabled\r\n                            ? 'bg-gray-500 text-gray-200'\r\n                            : 'text-white bg-indigo-500 hover:bg-indigo-800 focus:outline-none focus:ring-4 focus:ring-indigo-300 dark:bg-indigo-600 dark:hover:bg-indigo-700 dark:focus:ring-indigo-800'\r\n                        }`}\r\n                      >\r\n                        Upload {maxRows ?? data.length} items\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <span className={`${uploaded ? 'mt-4' : 'mt-36'}`}>\r\n              Your collection is empty, add items to populate it\r\n            </span>\r\n            <div className=\"mt-4 w-96\">\r\n              <div className=\"flex items-center justify-center w-full\">\r\n                <label\r\n                  htmlFor=\"dropzone-file\"\r\n                  className=\"flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600\"\r\n                >\r\n                  <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\r\n                    <svg\r\n                      aria-hidden=\"true\"\r\n                      className=\"w-10 h-10 mb-3 text-gray-400\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\r\n                      ></path>\r\n                    </svg>\r\n                    <p className=\"mb-2 text-sm text-gray-500 dark:text-gray-400\">\r\n                      <span className=\"font-semibold\">Click to upload CSV</span>{' '}\r\n                      or drag and drop\r\n                    </p>\r\n                    <ul className=\"w-full flex-wrap list-disc\">\r\n                      <li className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n                        Up to 255 characters per cell\r\n                      </li>\r\n                      <li className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n                        Up to 1GB\r\n                      </li>\r\n                      <li className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n                        Up to 250 columns\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <input\r\n                    onChange={handleFileChange}\r\n                    id=\"dropzone-file\"\r\n                    type=\"file\"\r\n                    className=\"hidden\"\r\n                  />\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OneAiUpload;\r\nexport { OneAiUpload };\r\n"],"names":["calculateFontSize","height","width","area","fontSize","Math","max","min","chunks","arr","size","Array","from","ceil","length","_","i","slice","getSecondsDiff","startDate","endDate","diff","getTime","abs","sum","numbers","reduce","partialSum","a","uniqBy","getKey","seen","Set","filter","item","k","has","add","toLowerKeys","obj","Object","keys","accumulator","key","toLowerCase","percentageIncrease","previous","current","percent","floor","numberToFixed","num","round","Number","EPSILON","customNumberToFixed","str","toString","_str$split","split","integer","parseFloat","toFixed","getNumberDescription","numIn","decPlaces","prefix","pow","abbrev","strResult","result","objectToLowerCase","entries","fromEntries","map","_ref","value","extractShtrudelSuffix","index","lastIndexOf","substring","topGroupPercentCalculation","metadataKeyValue","metadata","countersConfigurations","__","counter","getMetadataKeyValueConfiguration","groups","getCounterGroups","sums","group","calculateSumItemsInMetadata","members","apply","maxGroup","indexOf","groupsSum","metadataKey","label","undefined","topGroupCalculation","topValuePercentCalculation","_getItemCounterConfig","getMaxItemValue","items","count","getItemCounterConfiguration","topValueCalculation","_getItemCounterConfig2","maxItem","totalSumCalculation","percentOfItemsCalculation","itemCounter","keyCounter","itemCount","keyCount","percentOfAllItemsCalculation","totalItems","CUSTOM_METADATA_KEY","trendCalculation","trends","_trendsCounts$at","trendsCounts","trend","latestTrend","at","previousTrendsSum","previousTrendsMean","getMetadataKeyValueGroups","_counter$items$filter","_counter$items","_group$isGroup","isGroup","hasMultipleMembers","_counter$members","forEach","member","_member$values$length","_member$values","values","_keyConfig$items","keyConfig","memberConfig","find","_group$label","_metadataKeyValue$val","display","getValuesAndCounts","prev","_groups$flatMap","lowerKeysMetadata","membersData","filterRelevantValues","flatMap","_group$members","_members$flatMap","_member$metadataName","metadataName","_member$values2","includes","_ref2","_counterConfig$items","counterConfig","valueCounterConfig","totalSumCalculationName","topValueCalculationName","topValuePercentCalculationName","topGroupCalculationName","topGroupPercentCalculationName","percentOfItemsCalculationName","percentOfAllCalculationName","trendCalculationName","totalSumCalculationConfiguration","name","hasGroups","type","calculate","topValueCalculationConfiguration","topValuePercentCalculationConfiguration","topGroupCalculationConfiguration","topGroupPercentCalculationConfiguration","percentOfItemsCalculationConfiguration","percentOfAllItemsCalculationConfiguration","trendCalculationConfiguration","countersStorageKey","labelsStorageKey","sizeAxisStorageKey","colorAxisStorageKey","defaultCalculations","PAGE_SIZE","COLLECTION_TYPE","getNodeText","node","data","cluster_phrase","text","meta_value","original_text","getNodeId","cluster_id","phrase_id","meta_key","id","getNodeItemsCount","items_count","getNodeDetails","collection","_node$type","currentNodeType","currentNodeId","getNodeTrends","_node$data$trends","_node$data$trends2","_node$data$trends3","getNodeOriginalAndTranslatedText","originalText","translatedText","_cluster$item_transla","cluster","item_original_text","item_translated_text","LabelDisplay","countersConfiguration","labelClicked","_ref$tooltip","tooltip","_ref$maxWidth","maxWidth","color","config","React","createElement","className","style","onClick","icon","marginLeft","LabelsFiltersSelect","selectedLabels","selectedMetadataKeyValueChange","Listbox","Button","FunnelIcon","ChevronUpDownIcon","Transition","as","Fragment","leave","leaveFrom","leaveTo","Options","sort","b","meta","_countersConfiguratio","_countersConfiguratio2","_countersConfiguratio3","CascadedOption","optionName","selected","_configData$items","keySelected","some","s","_useState","useState","opened","setOpened","configData","MetadataTitle","ChevronUpIcon","ChevronDownIcon","DropdownOption","keyVal","pl","_ref3","Option","paddingLeft","_ref4","active","_ref5","_ref5$pl","_ref6","checked","SingleSelect","options","selectedLabel","onSelect","onChange","numberFormatter","Intl","NumberFormat","getMetadataKeyValueDisplay","getBackgroundColorLayers","colorAxis","groupCounters","countersGroup","calculationConfiguration","backgroundString","totalPercentage","_group$counter$displa","_group$counter","_group$counter$displa2","counters","findIndex","areCountersCanBeGrouped","push","firstCounter","secondCounter","areKeyValuesSameLevel","firstKeyValue","secondKeyValue","firstKeyValueHasGroups","secondKeyValueHasGroups","firstKeyValueHasMultipleMembers","secondKeyValueHasMultipleMembers","CounterDisplay","displayResult","getMetadataValueTitle","format","ArrowUpIcon","ArrowDownIcon","ArrowsUpDownIcon","MaxLabelDisplay","_lowerKeysMetadata$me","CountersLabelsDisplay","labels","counterWidth","counterMaxWidth","labelWidth","labelMaxWidth","_ref$pl","KeyValueSingleSelect","placeholder","by","_metadataKeyValue$key","Counters","calculationsConfigurations","currentCounters","countersChanged","addCounterText","title","addCounter","newMetadataKeyValue","allowedCalculations","getCalculationTypes","concat","getDefaultCalculation","deleteCounter","splice","updateCounter","updatedCounter","addedCounter","Counter","counterData","counterDeleted","counterChanged","selectedMetadataKeyValueChangeHandler","calc","counterChangeHandler","newCounter","textA","textB","XMarkIcon","calculationTypes","selectedMetadataKeyValue","keyValueHasMultipleMembers","_allowedCalculations$","Labels","currentLabels","labelsOptions","labelsChanged","_ref$title","setSelectedLabels","handleChange","newLabels","multiple","CustomizeTab","currentColorsAxis","selectedSizeAxis","colorsAxisChanged","sizeAxisChanged","Popover","open","enter","enterFrom","enterTo","Panel","tabIndex","Datepicker","selectedDate","dateChanged","_ref$placeholder","DAYS","dayCount","setDayCount","_useState2","blankDays","setBlankDays","_useState3","showDatepicker","setShowDatepicker","_useState4","Date","datepickerHeaderDate","setDatepickerHeaderDate","_useState5","setType","decrement","subMonths","subYears","increment","addMonths","addYears","isToday","date","isEqual","getFullYear","getMonth","setDateValue","getDayCount","daysInMonth","getDaysInMonth","dayOfWeek","getDay","blankDaysArray","daysArray","isSelectedMonth","month","getDate","setMonthValue","toggleDatepicker","showMonthPicker","showYearPicker","useEffect","htmlFor","readOnly","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","day","DatesFilters","fromDate","toDate","fromDateChanged","toDateChanged","trendPeriods","trendPeriodsChanged","CalendarDaysIcon","e","target","ItemActions","searchSimilarClusters","splitPhrase","mergeClusters","translationEnabled","controller","useRef","isOpen","setIsOpen","loading","setLoading","action","setAction","similarClusters","setSimilarClusters","selectedClusters","setSelectedClusters","_useState6","searchText","setSearchText","_useState7","error","setError","_useState8","mergeTo","setMergeTo","abort","AbortController","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_callee$","_context","next","sent","t0","console","finish","stop","_x","arguments","currentController","closeModal","invokeAction","_invokeAction","_callee2","firstSelectedCluster","_res","_callee2$","_context2","abrupt","message","clusterSelected","clusterId","_current$filter","c","appear","show","Dialog","onClose","Child","Title","required","Switch","state","role","xmlns","ClustersList","clusters","disabled","RadioGroup","Label","_selected$some","translation","CheckIcon","props","_extends","cx","cy","r","opacity","defaultCountersConfigurations","signals","HandThumbUpIcon","HandThumbDownIcon","FaceSmileIcon","FaceFrownIcon","person","UserIcon","topic","HashtagIcon","keyword","KeyIcon","geo","GlobeAltIcon","org","BuildingOffice2Icon","location","MapPinIcon","UsersIcon","art","FilmIcon","law","ScaleIcon","event","CalendarIcon","sentiment","emotion","HeartIcon","score","ColorsAxis","colorsConfig","colorConfig","background","marginTop","BAR_PADDING","BarChart","dataNodes","nodeClicked","barColor","fontFamily","textColor","sizeAxis","translate","nodeActionsClicked","actionsVisible","setActionsVisible","barsHeight","setGroups","amount","_d$text","yScale","useMemo","scaleBand","domain","range","padding","_extent$","extent","xScale","scaleLinear","allShapes","_yScale","_d$text2","x","y","xWidth","barWidth","barHeight","fillOpacity","rx","onMouseEnter","onMouseLeave","fontWeight","fontStyle","dir","EllipsisHorizontalIcon","ItemsListDisplay","bgColor","backgroundColor","_counter$metadataKeyV","item_date","parseDate","create_date","_counter$metadataKeyV2","parse","BIG_COLOR_DEFAULT","SMALL_COLOR_DEFAULT","Treemap","bigColor","smallColor","_ref$countFontSize","countFontSize","_ref$borderWidth","borderWidth","borderColor","mainNode","children","properties","treeHierarchy","elementsValues","maxElementValue","elementsSum","growFactor","hierarchy","n1","n2","root","treeGenerator","treemap","colors","len","leaves","valid","scale","leaf","y1","y0","x1","x0","lineHeight","paddingY","lines","hex","borderRightWidth","borderLeftWidth","borderBottomWidth","wordBreak","WebkitLineClamp","WebkitTouchCallout","WebkitBoxOrient","OneAiAnalytics","_currentHoveredNode$p2","_labelsFilters$length","_ref$dataNodes","nodes","currentNode","_ref$currentPage","currentPage","_ref$totalPagesAmount","totalPagesAmount","_ref$goBackClicked","goBackClicked","_ref$nodeClicked","_ref$nextPageClicked","nextPageClicked","_ref$prevPageClicked","prevPageClicked","_ref$itemsDisplay","itemsDisplay","_ref$darkMode","darkMode","_ref$treemapBigColor","treemapBigColor","_ref$treemapSmallColo","treemapSmallColor","_ref$treemapCountFont","treemapCountFontSize","_ref$fontFamily","_ref$textColor","_ref$treemapBorderWid","treemapBorderWidth","navbarColor","_ref$treemapBorderCol","treemapBorderColor","_ref$barColor","_ref$error","_ref$nodesPath","nodesPath","_ref$dateRangeChanged","dateRangeChanged","labelsFilters","_ref$labelClicked","_ref$labelFilterDelet","labelFilterDeleted","_ref$translationEnabl","_ref$toggleHide","toggleHide","_ref$propertiesFilter","propertiesFilters","_ref$setPropertiesFil","setPropertiesFilters","metaOptions","currentMetaOption","_ref$metaOptionsChang","metaOptionsChanged","_ref$refresh","refresh","setDisplay","_useResizeDetector","useResizeDetector","ref","metaData","setMetaData","setNodes","setLabels","setCounters","setSizeAxis","setColorAxis","setCountersConfigurations","_useState9","currentNodeActions","setCurrentNodeActions","_useState10","setTranslate","_useState11","setFromDate","_useState12","setToDate","loadedNodes","currentCollection","_useState13","currentHoveredNode","setCurrentHoveredNode","_localStorage$getItem","JSON","localStorage","getItem","getCurrentStorageKey","getInitialCounterTypes","calculationName","storedSizeAxis","currentMetadata","_currentNode$data$met","_currentNode$type","_loadedNodes$current","newMetadata","loadedNode","mergeMetadata","finalMetadata","_extends2","itemsCount","nodeText","_getNodeOriginalAndTr","newCountersConfigurations","_defaultConfig$items$","_defaultConfig$items","_defaultConfig$label","_defaultConfig$member","_defaultConfig$isGrou","_defaultConfig$items$2","_defaultConfig$items2","_metaData$key$filter$","_metaData$key","defaultConfig","valuesConfigured","counterConfiguration","_group$members$map","storedCounters","storedColorAxis","setItem","stringify","ReactTooltip","hide","rebuild","place","effect","clickable","_currentHoveredNode$p","getVisualizationLogoClasses","ArrowPathIcon","EyeIcon","EyeSlashIcon","LanguageIcon","x2","y2","HomeIcon","translated","keyValue","_keyValue$value","mergeTrends","fillRule","clipRule","dataNode","_node$text","_node$text2","metadata1","metadata2","_metadata1$key","_metadata2$key","trends1","trends2","newTrends","sourceTrends","_trends1$at$items_cou","_trends1$at","_trends2$at$items_cou","_trends2$at","_trends1$at$phrases_c","_trends1$at2","_trends2$at$phrases_c","_trends2$at2","_trends1$at$metadata","_trends1$at3","_trends2$at$metadata","_trends2$at3","days","period_start_date","period_end_date","phrases_count","defaultCounters","storageKey","_localStorage$getItem2","cache","Map","nodeToPageCache","OneAIAnalyticsApiWrapper","_metaGroupClicked$val","_ref$domain","_ref$apiKey","apiKey","_ref$collection","_ref$refreshToken","refreshToken","rest","_objectWithoutPropertiesLoose","_excluded","currentNodes","setCurrentNodes","clickedNodes","setClickedNodes","setCurrentPage","totalPages","setTotalPages","dateRange","setDateRange","setLabelsFilters","localRefreshToken","setLocalRefreshToken","setTrendPeriods","setMetaOptions","currentMetaGroup","setCurrentMetaGroup","_useState14","metaGroupClicked","setMetaGroupClicked","previousValues","lastMetaGroup","fetchMetaClusters","metaClusters","newNodes","mappedNodes","fetchMetaClustersApi","n","clear","currentClicked","cached","_totalPages","slicedNodes","_cached","_newNodes","_cached2","phrases","_newNodes2","phraseId","_cached3","_newNodes3","getNodesFromCache","m1","m2","setNodesDataInCache","fetchClusters","fetchPhrases","p","fetchItems","_x2","currentNodeDetails","_node$id$split","setNodePageNumberInCache","clickedNode","_currentNodes$nodes$f","_currentNodes$nodes$f2","nodeCachedPage","getNodePageNumberFromCache","currentClickedCluster","goBack","skip","clickedClusters","originalClickedAmount","pop","extraBackNodes","_metaGroupClicked$key","page","to","filters","newTrendPeriod","source","destination","m","_x3","_x4","_x5","_x6","_x7","_x8","_x9","_x10","_x11","_x12","_fetchClusters","_callee3","_callee3$","_context3","fetchApi","_x13","_x14","_x15","_x16","_x17","_x18","_x19","_x20","_x21","_x22","_x23","_fetchPhrases","_callee4","_callee4$","_context4","_x24","_x25","_x26","_x27","_x28","_x29","_x30","_x31","_x32","_x33","_x34","_fetchItems","_callee5","_callee5$","_context5","_x35","_x36","_x37","_x38","_x39","_x40","_x41","_x42","_x43","_x44","_x45","_fetchMetaClustersApi","_callee6","metaGroup","_callee6$","_context6","_x46","_x47","_x48","_x49","_x50","_x51","_x52","_x53","_x54","_x55","_x56","_x57","_fetchApi","_callee7","url","accessor","extraParams","limit","labelsFiltersString","propertiesFiltersString","json","_callee7$","_context7","fetch","encodeURI","join","method","headers","signal","status","ok","t1","t2","t3","t4","String","parentType","parentId","get","assembleCacheId","time","set","nodeType","nodeId","_x58","_x59","_x60","_x61","_x62","_searchSimilarClusters2","_callee8","_callee8$","_context8","c1","c2","similarity","cluster_text","_x63","_x64","_x65","_x66","_x67","_x68","_splitPhrase2","_callee9","_callee9$","_context9","_x69","_x70","_x71","_x72","_x73","_x74","_x75","_mergeClusters2","_callee10","_callee10$","_context10","Accept","body","source_clusters","destination_cluster","_x76","_x77","_x78","_x79","_x80","_x81","_x82","_toggleHide2","_callee11","currentClickedNode","_callee11$","_context11","OneAIAnalyticsStaticDataWrapper","_currentPages$at$map","_currentPages$at2","exampleNodes","currentPages","currentClusters","_currentPages$at","_clickedNode$children","_clickedNode$items","_clickedClusters$at$c","_clickedClusters$at","getNodeData","acc","_node$children$length","_node$children","IGNORE_ID","CUSTOM_VALUE_ID","COLUMN_TYPES_OPTIONS","validation","moment","ISO_8601","isValid","_selected$label","selectedLabelId","o","allowedExtensions","OneAiUpload","_ref$steps","steps","input_skill","_ref$resetAfterUpload","resetAfterUpload","_ref$expected_languag","expected_languages","_ref$override_languag","override_language_detection","_ref$createCollection","createCollection","_ref$collectionDomain","collectionDomain","_ref$isPublic","isPublic","setData","file","setFile","columnsConfigurations","setColumnsConfigurations","uploaded","setUploaded","csvHasHeaders","setCsvHasHeaders","numberOfRowsToSkip","setNumberOfRowsToSkip","numberOfRowsToDisplay","setNumberOfRowsToDisplay","maxRows","setMaxRows","taskId","setTaskId","uploadStatus","setUploadStatus","currentParser","interval","setInterval","log","handleReset","clearInterval","handleFileChange","_e$target$files","_currentParser$curren","inputFile","files","fileExtension","handleParse","Papa","worker","encoding","chunkSize","step","parser","errors","complete","results","handleUpload","_error","fetchFormData","appendSteps","expectedLanguages","pipelineJson","uploadRes","_error2","statusData","access","all","query","list_clusters","list_items","add_items","edit_clusters","discoverable","FormData","append","replaceAll","content_type","multilingual","enabled","skill","params","csv_params","columns","cc","customText","skip_rows","max_rows","uploadDisabled","header","_columnsConfiguration","scope","newColumnsConfigurations","row","cell"],"mappings":"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"}